   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.Thread_Led,"ax",@progbits
  11               	.global	Thread_Led
  13               	Thread_Led:
  14               	.LFB146:
  15               		.file 1 "main.c"
   1:main.c        **** #include "hal.h"
   2:main.c        **** #include "ch.h"
   3:main.c        **** 
   4:main.c        **** #define LED_YLW 2
   5:main.c        **** #define LED_GRN 3
   6:main.c        **** #define LED_PWM 3
   7:main.c        **** 
   8:main.c        **** /*
   9:main.c        **** //Called at the start of the period
  10:main.c        **** static void cb_pwm_start(PWMDriver* pwmp) {
  11:main.c        **** 	(void) pwmp;
  12:main.c        **** 	palSetPad(IOPORT2, LED_PWM);
  13:main.c        **** }
  14:main.c        **** 
  15:main.c        **** //Called at the end of the period
  16:main.c        **** static void cb_pwm_end(PWMDriver* pwmp) {
  17:main.c        **** 	(void) pwmp;
  18:main.c        **** 	palClearPad(IOPORT2, LED_PWM);
  19:main.c        **** }
  20:main.c        **** */
  21:main.c        **** 
  22:main.c        **** /*
  23:main.c        ****  * Thread 1.
  24:main.c        ****  */
  25:main.c        **** THD_WORKING_AREA(waLed, 128);
  26:main.c        **** THD_FUNCTION(Thread_Led, arg) {
  16               		.loc 1 26 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  27:main.c        **** 
  28:main.c        **** 	(void)arg;
  29:main.c        **** 
  30:main.c        **** 	while (true) {
  31:main.c        **** 		palTogglePad(IOPORT4, LED_YLW);
  23               		.loc 1 31 0
  24 0000 D4E0      		ldi r29,lo8(4)
  32:main.c        **** 		palTogglePad(IOPORT4, LED_GRN);
  25               		.loc 1 32 0
  26 0002 C8E0      		ldi r28,lo8(8)
  27               	.LVL1:
  28               	.L2:
  31:main.c        **** 		palTogglePad(IOPORT4, LED_GRN);
  29               		.loc 1 31 0 discriminator 1
  30 0004 8BB1      		in r24,0xb
  31 0006 8D27      		eor r24,r29
  32 0008 8BB9      		out 0xb,r24
  33               		.loc 1 32 0 discriminator 1
  34 000a 8BB1      		in r24,0xb
  35 000c 8C27      		eor r24,r28
  36 000e 8BB9      		out 0xb,r24
  33:main.c        **** 		chThdSleepMilliseconds(500);
  37               		.loc 1 33 0 discriminator 1
  38 0010 84E8      		ldi r24,lo8(-124)
  39 0012 9EE1      		ldi r25,lo8(30)
  40 0014 0E94 0000 		call chThdSleep
  41               	.LVL2:
  42 0018 00C0      		rjmp .L2
  43               		.cfi_endproc
  44               	.LFE146:
  46               		.section	.text.Thread_Pwm,"ax",@progbits
  47               	.global	Thread_Pwm
  49               	Thread_Pwm:
  50               	.LFB147:
  34:main.c        **** 	}
  35:main.c        **** }
  36:main.c        **** 
  37:main.c        **** /*
  38:main.c        ****  * Thread 2.
  39:main.c        ****  */
  40:main.c        **** THD_WORKING_AREA(waPwm, 128);
  41:main.c        **** THD_FUNCTION(Thread_Pwm, arg) {
  51               		.loc 1 41 0
  52               		.cfi_startproc
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 0 */
  56               	.L__stack_usage = 0
  57               	.LVL3:
  58               	.L6:
  59               	.LBB2:
  42:main.c        **** 
  43:main.c        **** 	(void)arg;
  44:main.c        **** 
  45:main.c        **** 	while (true) {
  46:main.c        **** 		for (uint16_t i = 1000; i < 10000; i += 1000) {
  60               		.loc 1 46 0
  61 0000 C8EE      		ldi r28,lo8(-24)
  62 0002 D3E0      		ldi r29,lo8(3)
  63               	.LVL4:
  64               	.L5:
  47:main.c        **** 			pwmEnableChannel(&PWMD2, 0, PWM_PERCENTAGE_TO_WIDTH(&PWMD2, i));
  65               		.loc 1 47 0 discriminator 3
  66 0004 8091 0000 		lds r24,PWMD2+3
  67 0008 9091 0000 		lds r25,PWMD2+3+1
  68 000c C89F      		mul r28,r24
  69 000e 9001      		movw r18,r0
  70 0010 C99F      		mul r28,r25
  71 0012 300D      		add r19,r0
  72 0014 D89F      		mul r29,r24
  73 0016 300D      		add r19,r0
  74 0018 1124      		clr r1
  75 001a 3295      		swap r19
  76 001c 2295      		swap r18
  77 001e 2F70      		andi r18,0x0f
  78 0020 2327      		eor r18,r19
  79 0022 3F70      		andi r19,0x0f
  80 0024 2327      		eor r18,r19
  81 0026 A7E4      		ldi r26,lo8(71)
  82 0028 B3E0      		ldi r27,lo8(3)
  83 002a 0E94 0000 		call __umulhisi3
  84 002e AC01      		movw r20,r24
  85 0030 5695      		lsr r21
  86 0032 4795      		ror r20
  87 0034 5695      		lsr r21
  88 0036 4795      		ror r20
  89 0038 5695      		lsr r21
  90 003a 4795      		ror r20
  91 003c 60E0      		ldi r22,0
  92 003e 80E0      		ldi r24,lo8(PWMD2)
  93 0040 90E0      		ldi r25,hi8(PWMD2)
  94 0042 0E94 0000 		call pwmEnableChannel
  95               	.LVL5:
  48:main.c        **** 			chThdSleepMilliseconds(100);
  96               		.loc 1 48 0 discriminator 3
  97 0046 8BE1      		ldi r24,lo8(27)
  98 0048 96E0      		ldi r25,lo8(6)
  99 004a 0E94 0000 		call chThdSleep
 100               	.LVL6:
  46:main.c        **** 			pwmEnableChannel(&PWMD2, 0, PWM_PERCENTAGE_TO_WIDTH(&PWMD2, i));
 101               		.loc 1 46 0 discriminator 3
 102 004e C851      		subi r28,24
 103 0050 DC4F      		sbci r29,-4
 104               	.LVL7:
 105 0052 C031      		cpi r28,16
 106 0054 87E2      		ldi r24,39
 107 0056 D807      		cpc r29,r24
 108 0058 01F4      		brne .L5
 109 005a 00C0      		rjmp .L6
 110               	.LBE2:
 111               		.cfi_endproc
 112               	.LFE147:
 114               		.section	.rodata
 115               	.LC0:
 116 0000 E8        		.byte	-24
 117 0001 03        		.byte	3
 118 0002 00        		.byte	0
 119 0003 00        		.byte	0
 120 0004 6400      		.word	100
 121 0006 0000      		.word	0
 122 0008 01        		.byte	1
 123 0009 0000      		.word	0
 124 000b 00        		.byte	0
 125 000c 0000      		.word	0
 126               		.section	.text.startup.main,"ax",@progbits
 127               	.global	main
 129               	main:
 130               	.LFB148:
  49:main.c        **** 		}
  50:main.c        **** 	}
  51:main.c        **** }
  52:main.c        **** 
  53:main.c        **** /*
  54:main.c        ****  * Threads static table, one entry per thread. The number of entries must
  55:main.c        ****  * match NIL_CFG_NUM_THREADS.
  56:main.c        ****  */
  57:main.c        **** THD_TABLE_BEGIN
  58:main.c        **** 	THD_TABLE_THREAD(1, "blink_leds",  waLed,  Thread_Led,  NULL)
  59:main.c        **** 	THD_TABLE_THREAD(0, "pwm_led",    waPwm,  Thread_Pwm,  NULL)
  60:main.c        **** THD_TABLE_END
  61:main.c        **** 
  62:main.c        **** /*
  63:main.c        ****  * Application entry point.
  64:main.c        ****  */
  65:main.c        **** int main(void) {
 131               		.loc 1 65 0
 132               		.cfi_startproc
 133 0000 CF93      		push r28
 134               	.LCFI0:
 135               		.cfi_def_cfa_offset 3
 136               		.cfi_offset 28, -2
 137 0002 DF93      		push r29
 138               	.LCFI1:
 139               		.cfi_def_cfa_offset 4
 140               		.cfi_offset 29, -3
 141 0004 CDB7      		in r28,__SP_L__
 142 0006 DEB7      		in r29,__SP_H__
 143               	.LCFI2:
 144               		.cfi_def_cfa_register 28
 145 0008 2E97      		sbiw r28,14
 146               	.LCFI3:
 147               		.cfi_def_cfa_offset 18
 148 000a 0FB6      		in __tmp_reg__,__SREG__
 149 000c F894      		cli
 150 000e DEBF      		out __SP_H__,r29
 151 0010 0FBE      		out __SREG__,__tmp_reg__
 152 0012 CDBF      		out __SP_L__,r28
 153               	/* prologue: function */
 154               	/* frame size = 14 */
 155               	/* stack size = 16 */
 156               	.L__stack_usage = 16
  66:main.c        **** 	halInit();
 157               		.loc 1 66 0
 158 0014 0E94 0000 		call halInit
 159               	.LVL8:
  67:main.c        **** 	chSysInit();
 160               		.loc 1 67 0
 161 0018 0E94 0000 		call chSysInit
 162               	.LVL9:
  68:main.c        **** 
  69:main.c        **** 	palSetPadMode(IOPORT4, LED_YLW, PAL_MODE_OUTPUT_PUSHPULL);
 163               		.loc 1 69 0
 164 001c 46E0      		ldi r20,lo8(6)
 165 001e 64E0      		ldi r22,lo8(4)
 166 0020 89E2      		ldi r24,lo8(41)
 167 0022 90E0      		ldi r25,0
 168 0024 0E94 0000 		call _pal_lld_setgroupmode
 169               	.LVL10:
  70:main.c        **** 	palSetPadMode(IOPORT4, LED_GRN, PAL_MODE_OUTPUT_PUSHPULL);
 170               		.loc 1 70 0
 171 0028 46E0      		ldi r20,lo8(6)
 172 002a 68E0      		ldi r22,lo8(8)
 173 002c 89E2      		ldi r24,lo8(41)
 174 002e 90E0      		ldi r25,0
 175 0030 0E94 0000 		call _pal_lld_setgroupmode
 176               	.LVL11:
  71:main.c        **** 	palSetPadMode(IOPORT2, LED_PWM, PAL_MODE_OUTPUT_PUSHPULL);
 177               		.loc 1 71 0
 178 0034 46E0      		ldi r20,lo8(6)
 179 0036 68E0      		ldi r22,lo8(8)
 180 0038 83E2      		ldi r24,lo8(35)
 181 003a 90E0      		ldi r25,0
 182 003c 0E94 0000 		call _pal_lld_setgroupmode
 183               	.LVL12:
  72:main.c        **** 
  73:main.c        **** 	// PWM configuration
  74:main.c        **** 
  75:main.c        **** 	PWMConfig pwm_driver = {
 184               		.loc 1 75 0
 185 0040 8EE0      		ldi r24,lo8(14)
 186 0042 E0E0      		ldi r30,lo8(.LC0)
 187 0044 F0E0      		ldi r31,hi8(.LC0)
 188 0046 DE01      		movw r26,r28
 189 0048 1196      		adiw r26,1
 190               		0:
 191 004a 0190      		ld r0,Z+
 192 004c 0D92      		st X+,r0
 193 004e 8A95      		dec r24
 194 0050 01F4      		brne 0b
  76:main.c        **** 		.frequency = 1000, // Hz
  77:main.c        **** 		.period = 100,     // 100ms in ticks
  78:main.c        **** 		.callback = NULL,
  79:main.c        **** 		.channels = {
  80:main.c        **** 			{PWM_OUTPUT_ACTIVE_HIGH, NULL},
  81:main.c        **** 			{PWM_OUTPUT_DISABLED, NULL}
  82:main.c        **** 		}
  83:main.c        **** 	};
  84:main.c        **** 
  85:main.c        **** 	pwmStart(&PWMD2, &pwm_driver);
 195               		.loc 1 85 0
 196 0052 BE01      		movw r22,r28
 197 0054 6F5F      		subi r22,-1
 198 0056 7F4F      		sbci r23,-1
 199 0058 80E0      		ldi r24,lo8(PWMD2)
 200 005a 90E0      		ldi r25,hi8(PWMD2)
 201 005c 0E94 0000 		call pwmStart
 202               	.LVL13:
 203               	.L9:
 204 0060 00C0      		rjmp .L9
 205               		.cfi_endproc
 206               	.LFE148:
 208               	.global	nil_thd_configs
 209               		.section	.rodata.str1.1,"aMS",@progbits,1
 210               	.LC1:
 211 0000 626C 696E 		.string	"blink_leds"
 211      6B5F 6C65 
 211      6473 00
 212               	.LC2:
 213 000b 7077 6D5F 		.string	"pwm_led"
 213      6C65 6400 
 214               	.LC3:
 215 0013 6964 6C65 		.string	"idle"
 215      00
 216               		.section	.rodata.nil_thd_configs,"a",@progbits
 219               	nil_thd_configs:
 220 0000 0000      		.word	.LC1
 221 0002 0000      		.word	waLed
 222 0004 0000      		.word	waLed+197
 223 0006 01        		.byte	1
 224 0007 0000      		.word	gs(Thread_Led)
 225 0009 0000      		.word	0
 226 000b 0000      		.word	.LC2
 227 000d 0000      		.word	waPwm
 228 000f 0000      		.word	waPwm+197
 229 0011 00        		.byte	0
 230 0012 0000      		.word	gs(Thread_Pwm)
 231 0014 0000      		.word	0
 232 0016 0000      		.word	.LC3
 233 0018 0000      		.word	0
 234 001a 0000      		.word	0
 235 001c 04        		.byte	4
 236 001d 0000      		.word	0
 237 001f 0000      		.word	0
 238               		.comm	waPwm,197,1
 239               		.comm	waLed,197,1
 240               		.text
 241               	.Letext0:
 242               		.file 2 "/usr/lib/gcc/avr/5.4.0/include/stddef.h"
 243               		.file 3 "/usr/lib/avr/include/stdint.h"
 244               		.file 4 "../../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 245               		.file 5 "../../../os/nil/include/ch.h"
 246               		.file 6 "../../../os/common/ports/AVR/chcore.h"
 247               		.file 7 "../../../os/hal/ports/AVR/MEGA/LLD/GPIOv1/hal_pal_lld.h"
 248               		.file 8 "../../../os/hal/include/hal_pwm.h"
 249               		.file 9 "../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.h"
 250               		.file 10 "../../../os/hal/include/hal.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc57kgXb.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc57kgXb.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc57kgXb.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc57kgXb.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc57kgXb.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc57kgXb.s:13     .text.Thread_Led:0000000000000000 Thread_Led
     /tmp/cc57kgXb.s:49     .text.Thread_Pwm:0000000000000000 Thread_Pwm
     /tmp/cc57kgXb.s:129    .text.startup.main:0000000000000000 main
     /tmp/cc57kgXb.s:219    .rodata.nil_thd_configs:0000000000000000 nil_thd_configs
                            *COM*:00000000000000c5 waLed
                            *COM*:00000000000000c5 waPwm

UNDEFINED SYMBOLS
chThdSleep
PWMD2
__umulhisi3
pwmEnableChannel
halInit
chSysInit
_pal_lld_setgroupmode
pwmStart
__do_copy_data
__do_clear_bss
