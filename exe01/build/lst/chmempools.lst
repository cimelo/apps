   1               		.file	"chmempools.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 1 "../../os/oslib/src/chmempools.c"
  11               		.section	.text.chPoolObjectInitAligned,"ax",@progbits
  12               	.global	chPoolObjectInitAligned
  14               	chPoolObjectInitAligned:
  15               	.LVL0:
  16               	.LFB98:
   1:../../os/oslib/src/chmempools.c **** /*
   2:../../os/oslib/src/chmempools.c ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:../../os/oslib/src/chmempools.c ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:../../os/oslib/src/chmempools.c **** 
   5:../../os/oslib/src/chmempools.c ****     This file is part of ChibiOS.
   6:../../os/oslib/src/chmempools.c **** 
   7:../../os/oslib/src/chmempools.c ****     ChibiOS is free software; you can redistribute it and/or modify
   8:../../os/oslib/src/chmempools.c ****     it under the terms of the GNU General Public License as published by
   9:../../os/oslib/src/chmempools.c ****     the Free Software Foundation version 3 of the License.
  10:../../os/oslib/src/chmempools.c **** 
  11:../../os/oslib/src/chmempools.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../os/oslib/src/chmempools.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../os/oslib/src/chmempools.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../os/oslib/src/chmempools.c ****     GNU General Public License for more details.
  15:../../os/oslib/src/chmempools.c **** 
  16:../../os/oslib/src/chmempools.c ****     You should have received a copy of the GNU General Public License
  17:../../os/oslib/src/chmempools.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../os/oslib/src/chmempools.c **** */
  19:../../os/oslib/src/chmempools.c **** 
  20:../../os/oslib/src/chmempools.c **** /**
  21:../../os/oslib/src/chmempools.c ****  * @file    oslib/src/chmempools.c
  22:../../os/oslib/src/chmempools.c ****  * @brief   Memory Pools code.
  23:../../os/oslib/src/chmempools.c ****  *
  24:../../os/oslib/src/chmempools.c ****  * @addtogroup oslib_mempools
  25:../../os/oslib/src/chmempools.c ****  * @details Memory Pools related APIs and services.
  26:../../os/oslib/src/chmempools.c ****  *          <h2>Operation mode</h2>
  27:../../os/oslib/src/chmempools.c ****  *          The Memory Pools APIs allow to allocate/free fixed size objects in
  28:../../os/oslib/src/chmempools.c ****  *          <b>constant time</b> and reliably without memory fragmentation
  29:../../os/oslib/src/chmempools.c ****  *          problems.<br>
  30:../../os/oslib/src/chmempools.c ****  *          Memory Pools do not enforce any alignment constraint on the
  31:../../os/oslib/src/chmempools.c ****  *          contained object however the objects must be properly aligned
  32:../../os/oslib/src/chmempools.c ****  *          to contain a pointer to void.
  33:../../os/oslib/src/chmempools.c ****  * @pre     In order to use the memory pools APIs the @p CH_CFG_USE_MEMPOOLS option
  34:../../os/oslib/src/chmempools.c ****  *          must be enabled in @p chconf.h.
  35:../../os/oslib/src/chmempools.c ****  * @note    Compatible with RT and NIL.
  36:../../os/oslib/src/chmempools.c ****  * @{
  37:../../os/oslib/src/chmempools.c ****  */
  38:../../os/oslib/src/chmempools.c **** 
  39:../../os/oslib/src/chmempools.c **** #include "ch.h"
  40:../../os/oslib/src/chmempools.c **** 
  41:../../os/oslib/src/chmempools.c **** #if (CH_CFG_USE_MEMPOOLS == TRUE) || defined(__DOXYGEN__)
  42:../../os/oslib/src/chmempools.c **** 
  43:../../os/oslib/src/chmempools.c **** /*===========================================================================*/
  44:../../os/oslib/src/chmempools.c **** /* Module exported variables.                                                */
  45:../../os/oslib/src/chmempools.c **** /*===========================================================================*/
  46:../../os/oslib/src/chmempools.c **** 
  47:../../os/oslib/src/chmempools.c **** /*===========================================================================*/
  48:../../os/oslib/src/chmempools.c **** /* Module local types.                                                       */
  49:../../os/oslib/src/chmempools.c **** /*===========================================================================*/
  50:../../os/oslib/src/chmempools.c **** 
  51:../../os/oslib/src/chmempools.c **** /*===========================================================================*/
  52:../../os/oslib/src/chmempools.c **** /* Module local variables.                                                   */
  53:../../os/oslib/src/chmempools.c **** /*===========================================================================*/
  54:../../os/oslib/src/chmempools.c **** 
  55:../../os/oslib/src/chmempools.c **** /*===========================================================================*/
  56:../../os/oslib/src/chmempools.c **** /* Module local functions.                                                   */
  57:../../os/oslib/src/chmempools.c **** /*===========================================================================*/
  58:../../os/oslib/src/chmempools.c **** 
  59:../../os/oslib/src/chmempools.c **** /*===========================================================================*/
  60:../../os/oslib/src/chmempools.c **** /* Module exported functions.                                                */
  61:../../os/oslib/src/chmempools.c **** /*===========================================================================*/
  62:../../os/oslib/src/chmempools.c **** 
  63:../../os/oslib/src/chmempools.c **** /**
  64:../../os/oslib/src/chmempools.c ****  * @brief   Initializes an empty memory pool.
  65:../../os/oslib/src/chmempools.c ****  *
  66:../../os/oslib/src/chmempools.c ****  * @param[out] mp       pointer to a @p memory_pool_t structure
  67:../../os/oslib/src/chmempools.c ****  * @param[in] size      the size of the objects contained in this memory pool,
  68:../../os/oslib/src/chmempools.c ****  *                      the minimum accepted size is the size of a pointer to
  69:../../os/oslib/src/chmempools.c ****  *                      void.
  70:../../os/oslib/src/chmempools.c ****  * @param[in] align     required memory alignment
  71:../../os/oslib/src/chmempools.c ****  * @param[in] provider  memory provider function for the memory pool or
  72:../../os/oslib/src/chmempools.c ****  *                      @p NULL if the pool is not allowed to grow
  73:../../os/oslib/src/chmempools.c ****  *                      automatically
  74:../../os/oslib/src/chmempools.c ****  *
  75:../../os/oslib/src/chmempools.c ****  * @init
  76:../../os/oslib/src/chmempools.c ****  */
  77:../../os/oslib/src/chmempools.c **** void chPoolObjectInitAligned(memory_pool_t *mp, size_t size,
  78:../../os/oslib/src/chmempools.c ****                              unsigned align, memgetfunc_t provider) {
  17               		.loc 1 78 69 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 78 69 is_stmt 0 view .LVU1
  24 0000 FC01      		movw r30,r24
  79:../../os/oslib/src/chmempools.c **** 
  80:../../os/oslib/src/chmempools.c ****   chDbgCheck((mp != NULL) &&
  25               		.loc 1 80 3 is_stmt 1 view .LVU2
  26               		.loc 1 80 3 view .LVU3
  27               		.loc 1 80 3 discriminator 13 view .LVU4
  81:../../os/oslib/src/chmempools.c ****              (size >= sizeof(void *)) &&
  82:../../os/oslib/src/chmempools.c ****              (align >= PORT_NATURAL_ALIGN) &&
  83:../../os/oslib/src/chmempools.c ****              MEM_IS_VALID_ALIGNMENT(align));
  84:../../os/oslib/src/chmempools.c **** 
  85:../../os/oslib/src/chmempools.c ****   mp->next = NULL;
  28               		.loc 1 85 3 view .LVU5
  29               		.loc 1 85 12 is_stmt 0 view .LVU6
  30 0002 1182      		std Z+1,__zero_reg__
  31 0004 1082      		st Z,__zero_reg__
  86:../../os/oslib/src/chmempools.c ****   mp->object_size = size;
  32               		.loc 1 86 3 is_stmt 1 view .LVU7
  33               		.loc 1 86 19 is_stmt 0 view .LVU8
  34 0006 7383      		std Z+3,r23
  35 0008 6283      		std Z+2,r22
  87:../../os/oslib/src/chmempools.c ****   mp->align = align;
  36               		.loc 1 87 3 is_stmt 1 view .LVU9
  37               		.loc 1 87 13 is_stmt 0 view .LVU10
  38 000a 5583      		std Z+5,r21
  39 000c 4483      		std Z+4,r20
  88:../../os/oslib/src/chmempools.c ****   mp->provider = provider;
  40               		.loc 1 88 3 is_stmt 1 view .LVU11
  41               		.loc 1 88 16 is_stmt 0 view .LVU12
  42 000e 3783      		std Z+7,r19
  43 0010 2683      		std Z+6,r18
  44               	/* epilogue start */
  89:../../os/oslib/src/chmempools.c **** }
  45               		.loc 1 89 1 view .LVU13
  46 0012 0895      		ret
  47               		.cfi_endproc
  48               	.LFE98:
  50               		.section	.text.chPoolLoadArray,"ax",@progbits
  51               	.global	chPoolLoadArray
  53               	chPoolLoadArray:
  54               	.LVL1:
  55               	.LFB99:
  90:../../os/oslib/src/chmempools.c **** 
  91:../../os/oslib/src/chmempools.c **** /**
  92:../../os/oslib/src/chmempools.c ****  * @brief   Loads a memory pool with an array of static objects.
  93:../../os/oslib/src/chmempools.c ****  * @pre     The memory pool must already be initialized.
  94:../../os/oslib/src/chmempools.c ****  * @pre     The array elements must be of the right size for the specified
  95:../../os/oslib/src/chmempools.c ****  *          memory pool.
  96:../../os/oslib/src/chmempools.c ****  * @pre     The array elements size must be a multiple of the alignment
  97:../../os/oslib/src/chmempools.c ****  *          requirement for the pool.
  98:../../os/oslib/src/chmempools.c ****  * @post    The memory pool contains the elements of the input array.
  99:../../os/oslib/src/chmempools.c ****  *
 100:../../os/oslib/src/chmempools.c ****  * @param[in] mp        pointer to a @p memory_pool_t structure
 101:../../os/oslib/src/chmempools.c ****  * @param[in] p         pointer to the array first element
 102:../../os/oslib/src/chmempools.c ****  * @param[in] n         number of elements in the array
 103:../../os/oslib/src/chmempools.c ****  *
 104:../../os/oslib/src/chmempools.c ****  * @api
 105:../../os/oslib/src/chmempools.c ****  */
 106:../../os/oslib/src/chmempools.c **** void chPoolLoadArray(memory_pool_t *mp, void *p, size_t n) {
  56               		.loc 1 106 60 is_stmt 1 view -0
  57               		.cfi_startproc
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  62               		.loc 1 106 60 is_stmt 0 view .LVU15
  63 0000 DC01      		movw r26,r24
  64 0002 FB01      		movw r30,r22
  65 0004 9A01      		movw r18,r20
 107:../../os/oslib/src/chmempools.c **** 
 108:../../os/oslib/src/chmempools.c ****   chDbgCheck((mp != NULL) && (n != 0U));
  66               		.loc 1 108 3 is_stmt 1 view .LVU16
  67               		.loc 1 108 3 view .LVU17
  68               		.loc 1 108 3 discriminator 7 view .LVU18
 109:../../os/oslib/src/chmempools.c **** 
 110:../../os/oslib/src/chmempools.c ****   while (n != 0U) {
  69               		.loc 1 110 3 view .LVU19
  70               		.loc 1 110 12 view .LVU20
  71 0006 452B      		or r20,r21
  72 0008 01F0      		breq .L3
  73               	.LVL2:
  74               	.L5:
 111:../../os/oslib/src/chmempools.c ****     chPoolAdd(mp, p);
  75               		.loc 1 111 5 view .LVU21
  76               	.LBB47:
  77               	.LBI47:
  78               		.file 2 "../../os/oslib/include/chmempools.h"
   1:../../os/oslib/include/chmempools.h **** /*
   2:../../os/oslib/include/chmempools.h ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:../../os/oslib/include/chmempools.h ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:../../os/oslib/include/chmempools.h **** 
   5:../../os/oslib/include/chmempools.h ****     This file is part of ChibiOS.
   6:../../os/oslib/include/chmempools.h **** 
   7:../../os/oslib/include/chmempools.h ****     ChibiOS is free software; you can redistribute it and/or modify
   8:../../os/oslib/include/chmempools.h ****     it under the terms of the GNU General Public License as published by
   9:../../os/oslib/include/chmempools.h ****     the Free Software Foundation version 3 of the License.
  10:../../os/oslib/include/chmempools.h **** 
  11:../../os/oslib/include/chmempools.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../os/oslib/include/chmempools.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../os/oslib/include/chmempools.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../os/oslib/include/chmempools.h ****     GNU General Public License for more details.
  15:../../os/oslib/include/chmempools.h **** 
  16:../../os/oslib/include/chmempools.h ****     You should have received a copy of the GNU General Public License
  17:../../os/oslib/include/chmempools.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../os/oslib/include/chmempools.h **** */
  19:../../os/oslib/include/chmempools.h **** 
  20:../../os/oslib/include/chmempools.h **** /**
  21:../../os/oslib/include/chmempools.h ****  * @file    oslib/include/chmempools.h
  22:../../os/oslib/include/chmempools.h ****  * @brief   Memory Pools macros and structures.
  23:../../os/oslib/include/chmempools.h ****  *
  24:../../os/oslib/include/chmempools.h ****  * @addtogroup oslib_mempools
  25:../../os/oslib/include/chmempools.h ****  * @{
  26:../../os/oslib/include/chmempools.h ****  */
  27:../../os/oslib/include/chmempools.h **** 
  28:../../os/oslib/include/chmempools.h **** #ifndef CHMEMPOOLS_H
  29:../../os/oslib/include/chmempools.h **** #define CHMEMPOOLS_H
  30:../../os/oslib/include/chmempools.h **** 
  31:../../os/oslib/include/chmempools.h **** #if (CH_CFG_USE_MEMPOOLS == TRUE) || defined(__DOXYGEN__)
  32:../../os/oslib/include/chmempools.h **** 
  33:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
  34:../../os/oslib/include/chmempools.h **** /* Module constants.                                                         */
  35:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
  36:../../os/oslib/include/chmempools.h **** 
  37:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
  38:../../os/oslib/include/chmempools.h **** /* Module pre-compile time settings.                                         */
  39:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
  40:../../os/oslib/include/chmempools.h **** 
  41:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
  42:../../os/oslib/include/chmempools.h **** /* Derived constants and error checks.                                       */
  43:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
  44:../../os/oslib/include/chmempools.h **** 
  45:../../os/oslib/include/chmempools.h **** #if CH_CFG_USE_MEMCORE == FALSE
  46:../../os/oslib/include/chmempools.h **** #error "CH_CFG_USE_MEMPOOLS requires CH_CFG_USE_MEMCORE"
  47:../../os/oslib/include/chmempools.h **** #endif
  48:../../os/oslib/include/chmempools.h **** 
  49:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
  50:../../os/oslib/include/chmempools.h **** /* Module data structures and types.                                         */
  51:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
  52:../../os/oslib/include/chmempools.h **** 
  53:../../os/oslib/include/chmempools.h **** /**
  54:../../os/oslib/include/chmempools.h ****  * @brief   Memory pool free object header.
  55:../../os/oslib/include/chmempools.h ****  */
  56:../../os/oslib/include/chmempools.h **** struct pool_header {
  57:../../os/oslib/include/chmempools.h ****   struct pool_header    *next;          /**< @brief Pointer to the next pool
  58:../../os/oslib/include/chmempools.h ****                                                     header in the list.     */
  59:../../os/oslib/include/chmempools.h **** };
  60:../../os/oslib/include/chmempools.h **** 
  61:../../os/oslib/include/chmempools.h **** /**
  62:../../os/oslib/include/chmempools.h ****  * @brief   Memory pool descriptor.
  63:../../os/oslib/include/chmempools.h ****  */
  64:../../os/oslib/include/chmempools.h **** typedef struct {
  65:../../os/oslib/include/chmempools.h ****   struct pool_header    *next;          /**< @brief Pointer to the header.  */
  66:../../os/oslib/include/chmempools.h ****   size_t                object_size;    /**< @brief Memory pool objects
  67:../../os/oslib/include/chmempools.h ****                                                     size.                   */
  68:../../os/oslib/include/chmempools.h ****   unsigned              align;          /**< @brief Required alignment.     */
  69:../../os/oslib/include/chmempools.h ****   memgetfunc_t          provider;       /**< @brief Memory blocks provider
  70:../../os/oslib/include/chmempools.h ****                                                     for this pool.          */
  71:../../os/oslib/include/chmempools.h **** } memory_pool_t;
  72:../../os/oslib/include/chmempools.h **** 
  73:../../os/oslib/include/chmempools.h **** #if (CH_CFG_USE_SEMAPHORES == TRUE) || defined(__DOXYGEN__)
  74:../../os/oslib/include/chmempools.h **** /**
  75:../../os/oslib/include/chmempools.h ****  * @brief   Guarded memory pool descriptor.
  76:../../os/oslib/include/chmempools.h ****  */
  77:../../os/oslib/include/chmempools.h **** typedef struct {
  78:../../os/oslib/include/chmempools.h ****   semaphore_t           sem;            /**< @brief Counter semaphore guarding
  79:../../os/oslib/include/chmempools.h ****                                                     the memory pool.        */
  80:../../os/oslib/include/chmempools.h ****   memory_pool_t         pool;           /**< @brief The memory pool itself. */
  81:../../os/oslib/include/chmempools.h **** } guarded_memory_pool_t;
  82:../../os/oslib/include/chmempools.h **** #endif /* CH_CFG_USE_SEMAPHORES == TRUE */
  83:../../os/oslib/include/chmempools.h **** 
  84:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
  85:../../os/oslib/include/chmempools.h **** /* Module macros.                                                            */
  86:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
  87:../../os/oslib/include/chmempools.h **** 
  88:../../os/oslib/include/chmempools.h **** /**
  89:../../os/oslib/include/chmempools.h ****  * @brief   Data part of a static memory pool initializer.
  90:../../os/oslib/include/chmempools.h ****  * @details This macro should be used when statically initializing a
  91:../../os/oslib/include/chmempools.h ****  *          memory pool that is part of a bigger structure.
  92:../../os/oslib/include/chmempools.h ****  *
  93:../../os/oslib/include/chmempools.h ****  * @param[in] name      the name of the memory pool variable
  94:../../os/oslib/include/chmempools.h ****  * @param[in] size      size of the memory pool contained objects
  95:../../os/oslib/include/chmempools.h ****  * @param[in] align     required memory alignment
  96:../../os/oslib/include/chmempools.h ****  * @param[in] provider  memory provider function for the memory pool
  97:../../os/oslib/include/chmempools.h ****  */
  98:../../os/oslib/include/chmempools.h **** #define __MEMORYPOOL_DATA(name, size, align, provider)                      \
  99:../../os/oslib/include/chmempools.h ****   {NULL, size, align, provider}
 100:../../os/oslib/include/chmempools.h **** 
 101:../../os/oslib/include/chmempools.h **** /**
 102:../../os/oslib/include/chmempools.h ****  * @brief   Static memory pool initializer.
 103:../../os/oslib/include/chmempools.h ****  * @details Statically initialized memory pools require no explicit
 104:../../os/oslib/include/chmempools.h ****  *          initialization using @p chPoolInit().
 105:../../os/oslib/include/chmempools.h ****  *
 106:../../os/oslib/include/chmempools.h ****  * @param[in] name      the name of the memory pool variable
 107:../../os/oslib/include/chmempools.h ****  * @param[in] size      size of the memory pool contained objects
 108:../../os/oslib/include/chmempools.h ****  * @param[in] align     required memory alignment
 109:../../os/oslib/include/chmempools.h ****  * @param[in] provider  memory provider function for the memory pool or @p NULL
 110:../../os/oslib/include/chmempools.h ****  *                      if the pool is not allowed to grow automatically
 111:../../os/oslib/include/chmempools.h ****  */
 112:../../os/oslib/include/chmempools.h **** #define MEMORYPOOL_DECL(name, size, align, provider)                        \
 113:../../os/oslib/include/chmempools.h ****   memory_pool_t name = __MEMORYPOOL_DATA(name, size, align, provider)
 114:../../os/oslib/include/chmempools.h **** 
 115:../../os/oslib/include/chmempools.h **** #if (CH_CFG_USE_SEMAPHORES == TRUE) || defined(__DOXYGEN__)
 116:../../os/oslib/include/chmempools.h **** /**
 117:../../os/oslib/include/chmempools.h ****  * @brief   Data part of a static guarded memory pool initializer.
 118:../../os/oslib/include/chmempools.h ****  * @details This macro should be used when statically initializing a
 119:../../os/oslib/include/chmempools.h ****  *          memory pool that is part of a bigger structure.
 120:../../os/oslib/include/chmempools.h ****  *
 121:../../os/oslib/include/chmempools.h ****  * @param[in] name      the name of the memory pool variable
 122:../../os/oslib/include/chmempools.h ****  * @param[in] size      size of the memory pool contained objects
 123:../../os/oslib/include/chmempools.h ****  * @param[in] align     required memory alignment
 124:../../os/oslib/include/chmempools.h ****  */
 125:../../os/oslib/include/chmempools.h **** #define __GUARDEDMEMORYPOOL_DATA(name, size, align) {                       \
 126:../../os/oslib/include/chmempools.h ****   __SEMAPHORE_DATA(name.sem, (cnt_t)0),                                     \
 127:../../os/oslib/include/chmempools.h ****   __MEMORYPOOL_DATA(NULL, size, align, NULL)                                \
 128:../../os/oslib/include/chmempools.h **** }
 129:../../os/oslib/include/chmempools.h **** 
 130:../../os/oslib/include/chmempools.h **** /**
 131:../../os/oslib/include/chmempools.h ****  * @brief   Static guarded memory pool initializer.
 132:../../os/oslib/include/chmempools.h ****  * @details Statically initialized guarded memory pools require no explicit
 133:../../os/oslib/include/chmempools.h ****  *          initialization using @p chGuardedPoolInit().
 134:../../os/oslib/include/chmempools.h ****  *
 135:../../os/oslib/include/chmempools.h ****  * @param[in] name      the name of the guarded memory pool variable
 136:../../os/oslib/include/chmempools.h ****  * @param[in] size      size of the memory pool contained objects
 137:../../os/oslib/include/chmempools.h ****  * @param[in] align     required memory alignment
 138:../../os/oslib/include/chmempools.h ****  */
 139:../../os/oslib/include/chmempools.h **** #define GUARDEDMEMORYPOOL_DECL(name, size, align)                           \
 140:../../os/oslib/include/chmempools.h ****   guarded_memory_pool_t name = __GUARDEDMEMORYPOOL_DATA(name, size, align)
 141:../../os/oslib/include/chmempools.h **** #endif /* CH_CFG_USE_SEMAPHORES == TRUE */
 142:../../os/oslib/include/chmempools.h **** 
 143:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
 144:../../os/oslib/include/chmempools.h **** /* External declarations.                                                    */
 145:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
 146:../../os/oslib/include/chmempools.h **** 
 147:../../os/oslib/include/chmempools.h **** #ifdef __cplusplus
 148:../../os/oslib/include/chmempools.h **** extern "C" {
 149:../../os/oslib/include/chmempools.h **** #endif
 150:../../os/oslib/include/chmempools.h ****   void chPoolObjectInitAligned(memory_pool_t *mp, size_t size,
 151:../../os/oslib/include/chmempools.h ****                                unsigned align, memgetfunc_t provider);
 152:../../os/oslib/include/chmempools.h ****   void chPoolLoadArray(memory_pool_t *mp, void *p, size_t n);
 153:../../os/oslib/include/chmempools.h ****   void *chPoolAllocI(memory_pool_t *mp);
 154:../../os/oslib/include/chmempools.h ****   void *chPoolAlloc(memory_pool_t *mp);
 155:../../os/oslib/include/chmempools.h ****   void chPoolFreeI(memory_pool_t *mp, void *objp);
 156:../../os/oslib/include/chmempools.h ****   void chPoolFree(memory_pool_t *mp, void *objp);
 157:../../os/oslib/include/chmempools.h **** #if CH_CFG_USE_SEMAPHORES == TRUE
 158:../../os/oslib/include/chmempools.h ****   void chGuardedPoolObjectInitAligned(guarded_memory_pool_t *gmp,
 159:../../os/oslib/include/chmempools.h ****                                       size_t size,
 160:../../os/oslib/include/chmempools.h ****                                       unsigned align);
 161:../../os/oslib/include/chmempools.h ****   void chGuardedPoolLoadArray(guarded_memory_pool_t *gmp, void *p, size_t n);
 162:../../os/oslib/include/chmempools.h ****   void *chGuardedPoolAllocTimeoutS(guarded_memory_pool_t *gmp,
 163:../../os/oslib/include/chmempools.h ****                                    sysinterval_t timeout);
 164:../../os/oslib/include/chmempools.h ****   void *chGuardedPoolAllocTimeout(guarded_memory_pool_t *gmp,
 165:../../os/oslib/include/chmempools.h ****                                   sysinterval_t timeout);
 166:../../os/oslib/include/chmempools.h ****   void chGuardedPoolFree(guarded_memory_pool_t *gmp, void *objp);
 167:../../os/oslib/include/chmempools.h **** #endif
 168:../../os/oslib/include/chmempools.h **** #ifdef __cplusplus
 169:../../os/oslib/include/chmempools.h **** }
 170:../../os/oslib/include/chmempools.h **** #endif
 171:../../os/oslib/include/chmempools.h **** 
 172:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
 173:../../os/oslib/include/chmempools.h **** /* Module inline functions.                                                  */
 174:../../os/oslib/include/chmempools.h **** /*===========================================================================*/
 175:../../os/oslib/include/chmempools.h **** 
 176:../../os/oslib/include/chmempools.h **** /**
 177:../../os/oslib/include/chmempools.h ****  * @brief   Initializes an empty memory pool.
 178:../../os/oslib/include/chmempools.h ****  *
 179:../../os/oslib/include/chmempools.h ****  * @param[out] mp       pointer to a @p memory_pool_t structure
 180:../../os/oslib/include/chmempools.h ****  * @param[in] size      the size of the objects contained in this memory pool,
 181:../../os/oslib/include/chmempools.h ****  *                      the minimum accepted size is the size of a pointer to
 182:../../os/oslib/include/chmempools.h ****  *                      void.
 183:../../os/oslib/include/chmempools.h ****  * @param[in] provider  memory provider function for the memory pool or
 184:../../os/oslib/include/chmempools.h ****  *                      @p NULL if the pool is not allowed to grow
 185:../../os/oslib/include/chmempools.h ****  *                      automatically
 186:../../os/oslib/include/chmempools.h ****  *
 187:../../os/oslib/include/chmempools.h ****  * @init
 188:../../os/oslib/include/chmempools.h ****  */
 189:../../os/oslib/include/chmempools.h **** static inline void chPoolObjectInit(memory_pool_t *mp,
 190:../../os/oslib/include/chmempools.h ****                                     size_t size,
 191:../../os/oslib/include/chmempools.h ****                                     memgetfunc_t provider) {
 192:../../os/oslib/include/chmempools.h **** 
 193:../../os/oslib/include/chmempools.h ****   chPoolObjectInitAligned(mp, size, PORT_NATURAL_ALIGN, provider);
 194:../../os/oslib/include/chmempools.h **** }
 195:../../os/oslib/include/chmempools.h **** 
 196:../../os/oslib/include/chmempools.h **** /**
 197:../../os/oslib/include/chmempools.h ****  * @brief   Adds an object to a memory pool.
 198:../../os/oslib/include/chmempools.h ****  * @pre     The memory pool must be already been initialized.
 199:../../os/oslib/include/chmempools.h ****  * @pre     The added object must be of the right size for the specified
 200:../../os/oslib/include/chmempools.h ****  *          memory pool.
 201:../../os/oslib/include/chmempools.h ****  * @pre     The added object must be properly aligned.
 202:../../os/oslib/include/chmempools.h ****  * @note    This function is just an alias for @p chPoolFree() and has been
 203:../../os/oslib/include/chmempools.h ****  *          added for clarity.
 204:../../os/oslib/include/chmempools.h ****  *
 205:../../os/oslib/include/chmempools.h ****  * @param[in] mp        pointer to a @p memory_pool_t structure
 206:../../os/oslib/include/chmempools.h ****  * @param[in] objp      the pointer to the object to be added
 207:../../os/oslib/include/chmempools.h ****  *
 208:../../os/oslib/include/chmempools.h ****  * @api
 209:../../os/oslib/include/chmempools.h ****  */
 210:../../os/oslib/include/chmempools.h **** static inline void chPoolAdd(memory_pool_t *mp, void *objp) {
  79               		.loc 2 210 20 view .LVU22
 211:../../os/oslib/include/chmempools.h **** 
 212:../../os/oslib/include/chmempools.h ****   chPoolFree(mp, objp);
  80               		.loc 2 212 3 view .LVU23
  81               	.LBB48:
  82               	.LBI48:
 112:../../os/oslib/src/chmempools.c ****     /*lint -save -e9087 [11.3] Safe cast.*/
 113:../../os/oslib/src/chmempools.c ****     p = (void *)(((uint8_t *)p) + mp->object_size);
 114:../../os/oslib/src/chmempools.c ****     /*lint -restore*/
 115:../../os/oslib/src/chmempools.c ****     n--;
 116:../../os/oslib/src/chmempools.c ****   }
 117:../../os/oslib/src/chmempools.c **** }
 118:../../os/oslib/src/chmempools.c **** 
 119:../../os/oslib/src/chmempools.c **** /**
 120:../../os/oslib/src/chmempools.c ****  * @brief   Allocates an object from a memory pool.
 121:../../os/oslib/src/chmempools.c ****  * @pre     The memory pool must already be initialized.
 122:../../os/oslib/src/chmempools.c ****  *
 123:../../os/oslib/src/chmempools.c ****  * @param[in] mp        pointer to a @p memory_pool_t structure
 124:../../os/oslib/src/chmempools.c ****  * @return              The pointer to the allocated object.
 125:../../os/oslib/src/chmempools.c ****  * @retval NULL         if pool is empty.
 126:../../os/oslib/src/chmempools.c ****  *
 127:../../os/oslib/src/chmempools.c ****  * @iclass
 128:../../os/oslib/src/chmempools.c ****  */
 129:../../os/oslib/src/chmempools.c **** void *chPoolAllocI(memory_pool_t *mp) {
 130:../../os/oslib/src/chmempools.c ****   void *objp;
 131:../../os/oslib/src/chmempools.c **** 
 132:../../os/oslib/src/chmempools.c ****   chDbgCheckClassI();
 133:../../os/oslib/src/chmempools.c ****   chDbgCheck(mp != NULL);
 134:../../os/oslib/src/chmempools.c **** 
 135:../../os/oslib/src/chmempools.c ****   objp = mp->next;
 136:../../os/oslib/src/chmempools.c ****   /*lint -save -e9013 [15.7] There is no else because it is not needed.*/
 137:../../os/oslib/src/chmempools.c ****   if (objp != NULL) {
 138:../../os/oslib/src/chmempools.c ****     mp->next = mp->next->next;
 139:../../os/oslib/src/chmempools.c ****   }
 140:../../os/oslib/src/chmempools.c ****   else if (mp->provider != NULL) {
 141:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 142:../../os/oslib/src/chmempools.c **** 
 143:../../os/oslib/src/chmempools.c ****     chDbgAssert(MEM_IS_ALIGNED(objp, mp->align),
 144:../../os/oslib/src/chmempools.c ****                 "returned object not aligned");
 145:../../os/oslib/src/chmempools.c ****   }
 146:../../os/oslib/src/chmempools.c ****   /*lint -restore*/
 147:../../os/oslib/src/chmempools.c **** 
 148:../../os/oslib/src/chmempools.c ****   return objp;
 149:../../os/oslib/src/chmempools.c **** }
 150:../../os/oslib/src/chmempools.c **** 
 151:../../os/oslib/src/chmempools.c **** /**
 152:../../os/oslib/src/chmempools.c ****  * @brief   Allocates an object from a memory pool.
 153:../../os/oslib/src/chmempools.c ****  * @pre     The memory pool must already be initialized.
 154:../../os/oslib/src/chmempools.c ****  *
 155:../../os/oslib/src/chmempools.c ****  * @param[in] mp        pointer to a @p memory_pool_t structure
 156:../../os/oslib/src/chmempools.c ****  * @return              The pointer to the allocated object.
 157:../../os/oslib/src/chmempools.c ****  * @retval NULL         if pool is empty.
 158:../../os/oslib/src/chmempools.c ****  *
 159:../../os/oslib/src/chmempools.c ****  * @api
 160:../../os/oslib/src/chmempools.c ****  */
 161:../../os/oslib/src/chmempools.c **** void *chPoolAlloc(memory_pool_t *mp) {
 162:../../os/oslib/src/chmempools.c ****   void *objp;
 163:../../os/oslib/src/chmempools.c **** 
 164:../../os/oslib/src/chmempools.c ****   chSysLock();
 165:../../os/oslib/src/chmempools.c ****   objp = chPoolAllocI(mp);
 166:../../os/oslib/src/chmempools.c ****   chSysUnlock();
 167:../../os/oslib/src/chmempools.c **** 
 168:../../os/oslib/src/chmempools.c ****   return objp;
 169:../../os/oslib/src/chmempools.c **** }
 170:../../os/oslib/src/chmempools.c **** 
 171:../../os/oslib/src/chmempools.c **** /**
 172:../../os/oslib/src/chmempools.c ****  * @brief   Releases an object into a memory pool.
 173:../../os/oslib/src/chmempools.c ****  * @pre     The memory pool must already be initialized.
 174:../../os/oslib/src/chmempools.c ****  * @pre     The freed object must be of the right size for the specified
 175:../../os/oslib/src/chmempools.c ****  *          memory pool.
 176:../../os/oslib/src/chmempools.c ****  * @pre     The added object must be properly aligned.
 177:../../os/oslib/src/chmempools.c ****  *
 178:../../os/oslib/src/chmempools.c ****  * @param[in] mp        pointer to a @p memory_pool_t structure
 179:../../os/oslib/src/chmempools.c ****  * @param[in] objp      the pointer to the object to be released
 180:../../os/oslib/src/chmempools.c ****  *
 181:../../os/oslib/src/chmempools.c ****  * @iclass
 182:../../os/oslib/src/chmempools.c ****  */
 183:../../os/oslib/src/chmempools.c **** void chPoolFreeI(memory_pool_t *mp, void *objp) {
 184:../../os/oslib/src/chmempools.c ****   struct pool_header *php = objp;
 185:../../os/oslib/src/chmempools.c **** 
 186:../../os/oslib/src/chmempools.c ****   chDbgCheckClassI();
 187:../../os/oslib/src/chmempools.c ****   chDbgCheck((mp != NULL) &&
 188:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 189:../../os/oslib/src/chmempools.c ****              MEM_IS_ALIGNED(objp, mp->align));
 190:../../os/oslib/src/chmempools.c **** 
 191:../../os/oslib/src/chmempools.c ****   php->next = mp->next;
 192:../../os/oslib/src/chmempools.c ****   mp->next = php;
 193:../../os/oslib/src/chmempools.c **** }
 194:../../os/oslib/src/chmempools.c **** 
 195:../../os/oslib/src/chmempools.c **** /**
 196:../../os/oslib/src/chmempools.c ****  * @brief   Releases an object into a memory pool.
 197:../../os/oslib/src/chmempools.c ****  * @pre     The memory pool must already be initialized.
 198:../../os/oslib/src/chmempools.c ****  * @pre     The freed object must be of the right size for the specified
 199:../../os/oslib/src/chmempools.c ****  *          memory pool.
 200:../../os/oslib/src/chmempools.c ****  * @pre     The added object must be properly aligned.
 201:../../os/oslib/src/chmempools.c ****  *
 202:../../os/oslib/src/chmempools.c ****  * @param[in] mp        pointer to a @p memory_pool_t structure
 203:../../os/oslib/src/chmempools.c ****  * @param[in] objp      the pointer to the object to be released
 204:../../os/oslib/src/chmempools.c ****  *
 205:../../os/oslib/src/chmempools.c ****  * @api
 206:../../os/oslib/src/chmempools.c ****  */
 207:../../os/oslib/src/chmempools.c **** void chPoolFree(memory_pool_t *mp, void *objp) {
  83               		.loc 1 207 6 view .LVU24
 208:../../os/oslib/src/chmempools.c **** 
 209:../../os/oslib/src/chmempools.c ****   chSysLock();
  84               		.loc 1 209 3 view .LVU25
  85               	.LBB49:
  86               	.LBI49:
  87               		.file 3 "../../os/common/ports/AVR/chcore.h"
   1:../../os/common/ports/AVR/chcore.h **** /*
   2:../../os/common/ports/AVR/chcore.h ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:../../os/common/ports/AVR/chcore.h ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:../../os/common/ports/AVR/chcore.h **** 
   5:../../os/common/ports/AVR/chcore.h ****     This file is part of ChibiOS.
   6:../../os/common/ports/AVR/chcore.h **** 
   7:../../os/common/ports/AVR/chcore.h ****     ChibiOS is free software; you can redistribute it and/or modify
   8:../../os/common/ports/AVR/chcore.h ****     it under the terms of the GNU General Public License as published by
   9:../../os/common/ports/AVR/chcore.h ****     the Free Software Foundation version 3 of the License.
  10:../../os/common/ports/AVR/chcore.h **** 
  11:../../os/common/ports/AVR/chcore.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../os/common/ports/AVR/chcore.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../os/common/ports/AVR/chcore.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../os/common/ports/AVR/chcore.h ****     GNU General Public License for more details.
  15:../../os/common/ports/AVR/chcore.h **** 
  16:../../os/common/ports/AVR/chcore.h ****     You should have received a copy of the GNU General Public License
  17:../../os/common/ports/AVR/chcore.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../os/common/ports/AVR/chcore.h **** */
  19:../../os/common/ports/AVR/chcore.h **** 
  20:../../os/common/ports/AVR/chcore.h **** /**
  21:../../os/common/ports/AVR/chcore.h ****  * @file    chcore.h
  22:../../os/common/ports/AVR/chcore.h ****  * @brief   AVR port macros and structures.
  23:../../os/common/ports/AVR/chcore.h ****  *
  24:../../os/common/ports/AVR/chcore.h ****  * @addtogroup AVR_CORE
  25:../../os/common/ports/AVR/chcore.h ****  * @{
  26:../../os/common/ports/AVR/chcore.h ****  */
  27:../../os/common/ports/AVR/chcore.h **** 
  28:../../os/common/ports/AVR/chcore.h **** #ifndef CHCORE_H
  29:../../os/common/ports/AVR/chcore.h **** #define CHCORE_H
  30:../../os/common/ports/AVR/chcore.h **** 
  31:../../os/common/ports/AVR/chcore.h **** #include <avr/io.h>
  32:../../os/common/ports/AVR/chcore.h **** #include <avr/interrupt.h>
  33:../../os/common/ports/AVR/chcore.h **** 
  34:../../os/common/ports/AVR/chcore.h **** extern bool __avr_in_isr;
  35:../../os/common/ports/AVR/chcore.h **** 
  36:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  37:../../os/common/ports/AVR/chcore.h **** /* Module constants.                                                         */
  38:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  39:../../os/common/ports/AVR/chcore.h **** 
  40:../../os/common/ports/AVR/chcore.h **** /**
  41:../../os/common/ports/AVR/chcore.h ****  * @name    Port Capabilities and Constants
  42:../../os/common/ports/AVR/chcore.h ****  * @{
  43:../../os/common/ports/AVR/chcore.h ****  */
  44:../../os/common/ports/AVR/chcore.h **** /**
  45:../../os/common/ports/AVR/chcore.h ****  * @brief   This port supports a realtime counter.
  46:../../os/common/ports/AVR/chcore.h ****  */
  47:../../os/common/ports/AVR/chcore.h **** #define PORT_SUPPORTS_RT                FALSE
  48:../../os/common/ports/AVR/chcore.h **** 
  49:../../os/common/ports/AVR/chcore.h **** /**
  50:../../os/common/ports/AVR/chcore.h ****  * @brief   Natural alignment constant.
  51:../../os/common/ports/AVR/chcore.h ****  * @note    It is the minimum alignment for pointer-size variables.
  52:../../os/common/ports/AVR/chcore.h ****  */
  53:../../os/common/ports/AVR/chcore.h **** #define PORT_NATURAL_ALIGN              1U
  54:../../os/common/ports/AVR/chcore.h **** 
  55:../../os/common/ports/AVR/chcore.h **** /**
  56:../../os/common/ports/AVR/chcore.h ****  * @brief   Stack alignment constant.
  57:../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignment required for the stack pointer.
  58:../../os/common/ports/AVR/chcore.h ****  */
  59:../../os/common/ports/AVR/chcore.h **** #define PORT_STACK_ALIGN                1U
  60:../../os/common/ports/AVR/chcore.h **** 
  61:../../os/common/ports/AVR/chcore.h **** /**
  62:../../os/common/ports/AVR/chcore.h ****  * @brief   Working Areas alignment constant.
  63:../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignment to be enforced for thread working areas.
  64:../../os/common/ports/AVR/chcore.h ****  */
  65:../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA_ALIGN         1U
  66:../../os/common/ports/AVR/chcore.h **** /** @} */
  67:../../os/common/ports/AVR/chcore.h **** 
  68:../../os/common/ports/AVR/chcore.h **** /**
  69:../../os/common/ports/AVR/chcore.h ****  * @name    Architecture and Compiler
  70:../../os/common/ports/AVR/chcore.h ****  * @{
  71:../../os/common/ports/AVR/chcore.h ****  */
  72:../../os/common/ports/AVR/chcore.h **** /**
  73:../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining an AVR architecture.
  74:../../os/common/ports/AVR/chcore.h ****  */
  75:../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR
  76:../../os/common/ports/AVR/chcore.h **** 
  77:../../os/common/ports/AVR/chcore.h **** /**
  78:../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining the specific AVR architecture.
  79:../../os/common/ports/AVR/chcore.h ****  */
  80:../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR_MEGAAVR
  81:../../os/common/ports/AVR/chcore.h **** 
  82:../../os/common/ports/AVR/chcore.h **** /**
  83:../../os/common/ports/AVR/chcore.h ****  * @brief   Name of the implemented architecture.
  84:../../os/common/ports/AVR/chcore.h ****  */
  85:../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_NAME          "AVR"
  86:../../os/common/ports/AVR/chcore.h **** 
  87:../../os/common/ports/AVR/chcore.h **** /**
  88:../../os/common/ports/AVR/chcore.h ****  * @brief   Name of the architecture variant.
  89:../../os/common/ports/AVR/chcore.h ****  */
  90:../../os/common/ports/AVR/chcore.h **** #define PORT_CORE_VARIANT_NAME          "MegaAVR"
  91:../../os/common/ports/AVR/chcore.h **** 
  92:../../os/common/ports/AVR/chcore.h **** /**
  93:../../os/common/ports/AVR/chcore.h ****  * @brief   Compiler name and version.
  94:../../os/common/ports/AVR/chcore.h ****  */
  95:../../os/common/ports/AVR/chcore.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
  96:../../os/common/ports/AVR/chcore.h **** #define PORT_COMPILER_NAME              "GCC " __VERSION__
  97:../../os/common/ports/AVR/chcore.h **** 
  98:../../os/common/ports/AVR/chcore.h **** #else
  99:../../os/common/ports/AVR/chcore.h **** #error "unsupported compiler"
 100:../../os/common/ports/AVR/chcore.h **** #endif
 101:../../os/common/ports/AVR/chcore.h **** 
 102:../../os/common/ports/AVR/chcore.h **** /**
 103:../../os/common/ports/AVR/chcore.h ****  * @brief   Port-specific information string.
 104:../../os/common/ports/AVR/chcore.h ****  */
 105:../../os/common/ports/AVR/chcore.h **** #define PORT_INFO                       "None"
 106:../../os/common/ports/AVR/chcore.h **** /** @} */
 107:../../os/common/ports/AVR/chcore.h **** 
 108:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 109:../../os/common/ports/AVR/chcore.h **** /* Module pre-compile time settings.                                         */
 110:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 111:../../os/common/ports/AVR/chcore.h **** 
 112:../../os/common/ports/AVR/chcore.h **** /**
 113:../../os/common/ports/AVR/chcore.h ****  * @brief   Stack size for the system idle thread.
 114:../../os/common/ports/AVR/chcore.h ****  * @details This size depends on the idle thread implementation, usually
 115:../../os/common/ports/AVR/chcore.h ****  *          the idle thread should take no more space than those reserved
 116:../../os/common/ports/AVR/chcore.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 117:../../os/common/ports/AVR/chcore.h ****  */
 118:../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 119:../../os/common/ports/AVR/chcore.h **** #define PORT_IDLE_THREAD_STACK_SIZE     8
 120:../../os/common/ports/AVR/chcore.h **** #endif
 121:../../os/common/ports/AVR/chcore.h **** 
 122:../../os/common/ports/AVR/chcore.h **** /**
 123:../../os/common/ports/AVR/chcore.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 124:../../os/common/ports/AVR/chcore.h ****  * @details This constant is used in the calculation of the correct working
 125:../../os/common/ports/AVR/chcore.h ****  *          area size.
 126:../../os/common/ports/AVR/chcore.h ****  */
 127:../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 128:../../os/common/ports/AVR/chcore.h **** #define PORT_INT_REQUIRED_STACK         32
 129:../../os/common/ports/AVR/chcore.h **** #endif
 130:../../os/common/ports/AVR/chcore.h **** 
 131:../../os/common/ports/AVR/chcore.h **** /**
 132:../../os/common/ports/AVR/chcore.h ****  * @brief   Enables a "wait for interrupt" instruction in the idle loop.
 133:../../os/common/ports/AVR/chcore.h ****  */
 134:../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_AVR_WFI_SLEEP_IDLE) || defined(__DOXYGEN__)
 135:../../os/common/ports/AVR/chcore.h **** #define PORT_AVR_WFI_SLEEP_IDLE      FALSE
 136:../../os/common/ports/AVR/chcore.h **** #endif
 137:../../os/common/ports/AVR/chcore.h **** 
 138:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 139:../../os/common/ports/AVR/chcore.h **** /* Derived constants and error checks.                                       */
 140:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 141:../../os/common/ports/AVR/chcore.h **** 
 142:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 143:../../os/common/ports/AVR/chcore.h **** /* Module data structures and types.                                         */
 144:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 145:../../os/common/ports/AVR/chcore.h **** 
 146:../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 147:../../os/common/ports/AVR/chcore.h ****    asm module.*/
 148:../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 149:../../os/common/ports/AVR/chcore.h **** 
 150:../../os/common/ports/AVR/chcore.h **** /**
 151:../../os/common/ports/AVR/chcore.h ****  * @brief   Type of stack and memory alignment enforcement.
 152:../../os/common/ports/AVR/chcore.h ****  * @note    In this architecture the stack alignment is enforced to 8 bits.
 153:../../os/common/ports/AVR/chcore.h ****  */
 154:../../os/common/ports/AVR/chcore.h **** typedef uint8_t stkalign_t;
 155:../../os/common/ports/AVR/chcore.h **** 
 156:../../os/common/ports/AVR/chcore.h **** /**
 157:../../os/common/ports/AVR/chcore.h ****  * @brief   Interrupt saved context.
 158:../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the stack frame saved during a
 159:../../os/common/ports/AVR/chcore.h ****  *          preemption-capable interrupt handler.
 160:../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 161:../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 162:../../os/common/ports/AVR/chcore.h ****  */
 163:../../os/common/ports/AVR/chcore.h **** struct port_extctx {
 164:../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 165:../../os/common/ports/AVR/chcore.h ****   uint8_t       r31;
 166:../../os/common/ports/AVR/chcore.h ****   uint8_t       r30;
 167:../../os/common/ports/AVR/chcore.h ****   uint8_t       r27;
 168:../../os/common/ports/AVR/chcore.h ****   uint8_t       r26;
 169:../../os/common/ports/AVR/chcore.h ****   uint8_t       r25;
 170:../../os/common/ports/AVR/chcore.h ****   uint8_t       r24;
 171:../../os/common/ports/AVR/chcore.h ****   uint8_t       r23;
 172:../../os/common/ports/AVR/chcore.h ****   uint8_t       r22;
 173:../../os/common/ports/AVR/chcore.h ****   uint8_t       r21;
 174:../../os/common/ports/AVR/chcore.h ****   uint8_t       r20;
 175:../../os/common/ports/AVR/chcore.h ****   uint8_t       r19;
 176:../../os/common/ports/AVR/chcore.h ****   uint8_t       r18;
 177:../../os/common/ports/AVR/chcore.h ****   uint8_t       sr;
 178:../../os/common/ports/AVR/chcore.h ****   uint8_t       r1;
 179:../../os/common/ports/AVR/chcore.h ****   uint8_t       r0;
 180:../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 181:../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 182:../../os/common/ports/AVR/chcore.h **** #endif
 183:../../os/common/ports/AVR/chcore.h ****   uint16_t      pc;
 184:../../os/common/ports/AVR/chcore.h **** };
 185:../../os/common/ports/AVR/chcore.h **** 
 186:../../os/common/ports/AVR/chcore.h **** /**
 187:../../os/common/ports/AVR/chcore.h ****  * @brief   System saved context.
 188:../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the inner stack frame during a context
 189:../../os/common/ports/AVR/chcore.h ****  *          switching.
 190:../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 191:../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 192:../../os/common/ports/AVR/chcore.h ****  * @note    LR is stored in the caller context so it is not present in this
 193:../../os/common/ports/AVR/chcore.h ****  *          structure.
 194:../../os/common/ports/AVR/chcore.h ****  */
 195:../../os/common/ports/AVR/chcore.h **** struct port_intctx {
 196:../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 197:../../os/common/ports/AVR/chcore.h ****   uint8_t       r29;
 198:../../os/common/ports/AVR/chcore.h ****   uint8_t       r28;
 199:../../os/common/ports/AVR/chcore.h ****   uint8_t       r17;
 200:../../os/common/ports/AVR/chcore.h ****   uint8_t       r16;
 201:../../os/common/ports/AVR/chcore.h ****   uint8_t       r15;
 202:../../os/common/ports/AVR/chcore.h ****   uint8_t       r14;
 203:../../os/common/ports/AVR/chcore.h ****   uint8_t       r13;
 204:../../os/common/ports/AVR/chcore.h ****   uint8_t       r12;
 205:../../os/common/ports/AVR/chcore.h ****   uint8_t       r11;
 206:../../os/common/ports/AVR/chcore.h ****   uint8_t       r10;
 207:../../os/common/ports/AVR/chcore.h ****   uint8_t       r9;
 208:../../os/common/ports/AVR/chcore.h ****   uint8_t       r8;
 209:../../os/common/ports/AVR/chcore.h ****   uint8_t       r7;
 210:../../os/common/ports/AVR/chcore.h ****   uint8_t       r6;
 211:../../os/common/ports/AVR/chcore.h ****   uint8_t       r5;
 212:../../os/common/ports/AVR/chcore.h ****   uint8_t       r4;
 213:../../os/common/ports/AVR/chcore.h ****   uint8_t       r3;
 214:../../os/common/ports/AVR/chcore.h ****   uint8_t       r2;
 215:../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 216:../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 217:../../os/common/ports/AVR/chcore.h **** #endif
 218:../../os/common/ports/AVR/chcore.h ****   uint8_t       pcl;
 219:../../os/common/ports/AVR/chcore.h ****   uint8_t       pch;
 220:../../os/common/ports/AVR/chcore.h **** };
 221:../../os/common/ports/AVR/chcore.h **** 
 222:../../os/common/ports/AVR/chcore.h **** /**
 223:../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p thread_t structure.
 224:../../os/common/ports/AVR/chcore.h ****  * @details This structure usually contains just the saved stack pointer
 225:../../os/common/ports/AVR/chcore.h ****  *          defined as a pointer to a @p port_intctx structure.
 226:../../os/common/ports/AVR/chcore.h ****  */
 227:../../os/common/ports/AVR/chcore.h **** struct port_context {
 228:../../os/common/ports/AVR/chcore.h ****   struct port_intctx *sp;
 229:../../os/common/ports/AVR/chcore.h **** };
 230:../../os/common/ports/AVR/chcore.h **** 
 231:../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 232:../../os/common/ports/AVR/chcore.h **** 
 233:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 234:../../os/common/ports/AVR/chcore.h **** /* Module macros.                                                            */
 235:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 236:../../os/common/ports/AVR/chcore.h **** 
 237:../../os/common/ports/AVR/chcore.h **** /**
 238:../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 239:../../os/common/ports/AVR/chcore.h ****  * @details This code usually setup the context switching frame represented
 240:../../os/common/ports/AVR/chcore.h ****  *          by an @p port_intctx structure.
 241:../../os/common/ports/AVR/chcore.h ****  */
 242:../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__) || defined(__DOXYGEN__)
 243:../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 244:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 245:../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 246:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 247:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 248:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 249:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 250:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcx = (uint8_t)0;                                             \
 251:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 252:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 253:../../os/common/ports/AVR/chcore.h **** }
 254:../../os/common/ports/AVR/chcore.h **** #else /* !__AVR_3_BYTE_PC__ */
 255:../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 256:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 257:../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 258:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 259:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 260:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 261:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 262:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 263:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 264:../../os/common/ports/AVR/chcore.h **** }
 265:../../os/common/ports/AVR/chcore.h **** #endif /* !__AVR_3_BYTE_PC__ */
 266:../../os/common/ports/AVR/chcore.h **** 
 267:../../os/common/ports/AVR/chcore.h **** /**
 268:../../os/common/ports/AVR/chcore.h ****  * @brief   Computes the thread working area global size.
 269:../../os/common/ports/AVR/chcore.h ****  * @note    There is no need to perform alignments in this macro.
 270:../../os/common/ports/AVR/chcore.h ****  */
 271:../../os/common/ports/AVR/chcore.h **** #define PORT_WA_SIZE(n) ((sizeof(struct port_intctx) - 1) +                \
 272:../../os/common/ports/AVR/chcore.h ****                          (sizeof(struct port_extctx) - 1) +                \
 273:../../os/common/ports/AVR/chcore.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 274:../../os/common/ports/AVR/chcore.h **** 
 275:../../os/common/ports/AVR/chcore.h **** /**
 276:../../os/common/ports/AVR/chcore.h ****  * @brief   Static working area allocation.
 277:../../os/common/ports/AVR/chcore.h ****  * @details This macro is used to allocate a static thread working area
 278:../../os/common/ports/AVR/chcore.h ****  *          aligned as both position and size.
 279:../../os/common/ports/AVR/chcore.h ****  *
 280:../../os/common/ports/AVR/chcore.h ****  * @param[in] s         the name to be assigned to the stack array
 281:../../os/common/ports/AVR/chcore.h ****  * @param[in] n         the stack size to be assigned to the thread
 282:../../os/common/ports/AVR/chcore.h ****  */
 283:../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA(s, n)                                             \
 284:../../os/common/ports/AVR/chcore.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 285:../../os/common/ports/AVR/chcore.h **** 
 286:../../os/common/ports/AVR/chcore.h **** /**
 287:../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 288:../../os/common/ports/AVR/chcore.h ****  */
 289:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_PRIORITY(n) false
 290:../../os/common/ports/AVR/chcore.h **** 
 291:../../os/common/ports/AVR/chcore.h **** /**
 292:../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 293:../../os/common/ports/AVR/chcore.h ****  */
 294:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_KERNEL_PRIORITY(n) false
 295:../../os/common/ports/AVR/chcore.h **** 
 296:../../os/common/ports/AVR/chcore.h **** /**
 297:../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ prologue code.
 298:../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 299:../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 300:../../os/common/ports/AVR/chcore.h ****  * @note    This code tricks the compiler to save all the specified registers
 301:../../os/common/ports/AVR/chcore.h ****  *          by "touching" them.
 302:../../os/common/ports/AVR/chcore.h ****  */
 303:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_PROLOGUE() {                                               \
 304:../../os/common/ports/AVR/chcore.h ****   asm ("" : : : "r18", "r19", "r20", "r21", "r22", "r23", "r24",            \
 305:../../os/common/ports/AVR/chcore.h ****                 "r25", "r26", "r27", "r30", "r31");                         \
 306:../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 307:../../os/common/ports/AVR/chcore.h **** }
 308:../../os/common/ports/AVR/chcore.h **** 
 309:../../os/common/ports/AVR/chcore.h **** /**
 310:../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ epilogue code.
 311:../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 312:../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 313:../../os/common/ports/AVR/chcore.h ****  */
 314:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_EPILOGUE() {                                               \
 315:../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = false;                                                     \
 316:../../os/common/ports/AVR/chcore.h ****   __dbg_check_lock();                                                       \
 317:../../os/common/ports/AVR/chcore.h ****   if (chSchIsPreemptionRequired())                                          \
 318:../../os/common/ports/AVR/chcore.h ****     chSchDoPreemption();                                                    \
 319:../../os/common/ports/AVR/chcore.h ****   __dbg_check_unlock();                                                     \
 320:../../os/common/ports/AVR/chcore.h **** }
 321:../../os/common/ports/AVR/chcore.h **** 
 322:../../os/common/ports/AVR/chcore.h **** /**
 323:../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ handler function declaration.
 324:../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 325:../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 326:../../os/common/ports/AVR/chcore.h ****  */
 327:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_HANDLER(id) ISR(id)
 328:../../os/common/ports/AVR/chcore.h **** 
 329:../../os/common/ports/AVR/chcore.h **** /**
 330:../../os/common/ports/AVR/chcore.h ****  * @brief   Fast IRQ handler function declaration.
 331:../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 332:../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 333:../../os/common/ports/AVR/chcore.h ****  */
 334:../../os/common/ports/AVR/chcore.h **** #define PORT_FAST_IRQ_HANDLER(id) ISR(id)
 335:../../os/common/ports/AVR/chcore.h **** 
 336:../../os/common/ports/AVR/chcore.h **** /**
 337:../../os/common/ports/AVR/chcore.h ****  * @brief   Performs a context switch between two threads.
 338:../../os/common/ports/AVR/chcore.h ****  * @details This is the most critical code in any port, this function
 339:../../os/common/ports/AVR/chcore.h ****  *          is responsible for the context switch between 2 threads.
 340:../../os/common/ports/AVR/chcore.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 341:../../os/common/ports/AVR/chcore.h ****  *          switch performance so optimize here as much as you can.
 342:../../os/common/ports/AVR/chcore.h ****  *
 343:../../os/common/ports/AVR/chcore.h ****  * @param[in] ntp       the thread to be switched in
 344:../../os/common/ports/AVR/chcore.h ****  * @param[in] otp       the thread to be switched out
 345:../../os/common/ports/AVR/chcore.h ****  */
 346:../../os/common/ports/AVR/chcore.h **** #define port_switch(ntp, otp) {                                             \
 347:../../os/common/ports/AVR/chcore.h ****   _port_switch(ntp, otp);                                                   \
 348:../../os/common/ports/AVR/chcore.h ****   asm volatile ("" : : : "memory");                                         \
 349:../../os/common/ports/AVR/chcore.h **** }
 350:../../os/common/ports/AVR/chcore.h **** 
 351:../../os/common/ports/AVR/chcore.h **** 
 352:../../os/common/ports/AVR/chcore.h **** /**
 353:../../os/common/ports/AVR/chcore.h ****  * @brief   Port-related initialization code.
 354:../../os/common/ports/AVR/chcore.h ****  * @note    This function is empty in this port.
 355:../../os/common/ports/AVR/chcore.h ****  */
 356:../../os/common/ports/AVR/chcore.h **** #define port_init(oip) {                                                    \
 357:../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 358:../../os/common/ports/AVR/chcore.h **** }
 359:../../os/common/ports/AVR/chcore.h **** 
 360:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 361:../../os/common/ports/AVR/chcore.h **** /* External declarations.                                                    */
 362:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 363:../../os/common/ports/AVR/chcore.h **** 
 364:../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 365:../../os/common/ports/AVR/chcore.h ****    asm module.*/
 366:../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 367:../../os/common/ports/AVR/chcore.h **** 
 368:../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 369:../../os/common/ports/AVR/chcore.h **** extern "C" {
 370:../../os/common/ports/AVR/chcore.h **** #endif
 371:../../os/common/ports/AVR/chcore.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 372:../../os/common/ports/AVR/chcore.h ****   void _port_thread_start(void);
 373:../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 374:../../os/common/ports/AVR/chcore.h **** }
 375:../../os/common/ports/AVR/chcore.h **** #endif
 376:../../os/common/ports/AVR/chcore.h **** 
 377:../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 378:../../os/common/ports/AVR/chcore.h **** 
 379:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 380:../../os/common/ports/AVR/chcore.h **** /* Module inline functions.                                                  */
 381:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 382:../../os/common/ports/AVR/chcore.h **** 
 383:../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 384:../../os/common/ports/AVR/chcore.h ****    asm module.*/
 385:../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 386:../../os/common/ports/AVR/chcore.h **** 
 387:../../os/common/ports/AVR/chcore.h **** /**
 388:../../os/common/ports/AVR/chcore.h ****  * @brief   Returns a word encoding the current interrupts status.
 389:../../os/common/ports/AVR/chcore.h ****  *
 390:../../os/common/ports/AVR/chcore.h ****  * @return              The interrupts status.
 391:../../os/common/ports/AVR/chcore.h ****  */
 392:../../os/common/ports/AVR/chcore.h **** static inline syssts_t port_get_irq_status(void) {
 393:../../os/common/ports/AVR/chcore.h **** 
 394:../../os/common/ports/AVR/chcore.h ****   return SREG;
 395:../../os/common/ports/AVR/chcore.h **** }
 396:../../os/common/ports/AVR/chcore.h **** 
 397:../../os/common/ports/AVR/chcore.h **** /**
 398:../../os/common/ports/AVR/chcore.h ****  * @brief   Checks the interrupt status.
 399:../../os/common/ports/AVR/chcore.h ****  *
 400:../../os/common/ports/AVR/chcore.h ****  * @param[in] sts       the interrupt status word
 401:../../os/common/ports/AVR/chcore.h ****  *
 402:../../os/common/ports/AVR/chcore.h ****  * @return              The interrupt status.
 403:../../os/common/ports/AVR/chcore.h ****  * @retval false        the word specified a disabled interrupts status.
 404:../../os/common/ports/AVR/chcore.h ****  * @retval true         the word specified an enabled interrupts status.
 405:../../os/common/ports/AVR/chcore.h ****  */
 406:../../os/common/ports/AVR/chcore.h **** static inline bool port_irq_enabled(syssts_t sts) {
 407:../../os/common/ports/AVR/chcore.h **** 
 408:../../os/common/ports/AVR/chcore.h ****   return (bool)((sts & 0x80) != 0);
 409:../../os/common/ports/AVR/chcore.h **** }
 410:../../os/common/ports/AVR/chcore.h **** 
 411:../../os/common/ports/AVR/chcore.h **** /**
 412:../../os/common/ports/AVR/chcore.h ****  * @brief   Determines the current execution context.
 413:../../os/common/ports/AVR/chcore.h ****  *
 414:../../os/common/ports/AVR/chcore.h ****  * @return              The execution context.
 415:../../os/common/ports/AVR/chcore.h ****  * @retval false        not running in ISR mode.
 416:../../os/common/ports/AVR/chcore.h ****  * @retval true         running in ISR mode.
 417:../../os/common/ports/AVR/chcore.h ****  */
 418:../../os/common/ports/AVR/chcore.h **** static inline bool port_is_isr_context(void) {
 419:../../os/common/ports/AVR/chcore.h **** 
 420:../../os/common/ports/AVR/chcore.h ****   return __avr_in_isr;
 421:../../os/common/ports/AVR/chcore.h **** }
 422:../../os/common/ports/AVR/chcore.h **** 
 423:../../os/common/ports/AVR/chcore.h **** /**
 424:../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-lock action.
 425:../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just disables interrupts but may perform more
 426:../../os/common/ports/AVR/chcore.h ****  *          actions.
 427:../../os/common/ports/AVR/chcore.h ****  */
 428:../../os/common/ports/AVR/chcore.h **** static inline void port_lock(void) {
  88               		.loc 3 428 20 view .LVU26
  89               	.LBB50:
 429:../../os/common/ports/AVR/chcore.h **** 
 430:../../os/common/ports/AVR/chcore.h ****   asm volatile ("cli" : : : "memory");
  90               		.loc 3 430 3 view .LVU27
  91               	/* #APP */
  92               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
  93 000a F894      		cli
  94               	 ;  0 "" 2
  95               	/* #NOAPP */
  96               	.LBE50:
  97               	.LBE49:
  98               		.loc 1 209 3 discriminator 1 view .LVU28
  99               		.loc 1 209 14 discriminator 1 view .LVU29
 210:../../os/oslib/src/chmempools.c ****   chPoolFreeI(mp, objp);
 100               		.loc 1 210 3 view .LVU30
 101               	.LVL3:
 102               	.LBB51:
 103               	.LBI51:
 183:../../os/oslib/src/chmempools.c ****   struct pool_header *php = objp;
 104               		.loc 1 183 6 view .LVU31
 105               	.LBB52:
 184:../../os/oslib/src/chmempools.c **** 
 106               		.loc 1 184 3 view .LVU32
 186:../../os/oslib/src/chmempools.c ****   chDbgCheck((mp != NULL) &&
 107               		.loc 1 186 21 view .LVU33
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 108               		.loc 1 187 3 view .LVU34
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 109               		.loc 1 187 3 view .LVU35
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 110               		.loc 1 187 3 discriminator 9 view .LVU36
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 111               		.loc 1 191 3 view .LVU37
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 112               		.loc 1 191 13 is_stmt 0 view .LVU38
 113 000c 8D91      		ld r24,X+
 114 000e 9C91      		ld r25,X
 115 0010 1197      		sbiw r26,1
 116 0012 9183      		std Z+1,r25
 117 0014 8083      		st Z,r24
 192:../../os/oslib/src/chmempools.c **** }
 118               		.loc 1 192 3 is_stmt 1 view .LVU39
 192:../../os/oslib/src/chmempools.c **** }
 119               		.loc 1 192 12 is_stmt 0 view .LVU40
 120 0016 1196      		adiw r26,1
 121 0018 FC93      		st X,r31
 122 001a EE93      		st -X,r30
 123               	.LVL4:
 192:../../os/oslib/src/chmempools.c **** }
 124               		.loc 1 192 12 view .LVU41
 125               	.LBE52:
 126               	.LBE51:
 211:../../os/oslib/src/chmempools.c ****   chSysUnlock();
 127               		.loc 1 211 3 is_stmt 1 view .LVU42
 128               		.loc 1 211 3 view .LVU43
 129               	.LBB53:
 130               	.LBI53:
 431:../../os/common/ports/AVR/chcore.h **** }
 432:../../os/common/ports/AVR/chcore.h **** 
 433:../../os/common/ports/AVR/chcore.h **** /**
 434:../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-unlock action.
 435:../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just enables interrupts but may perform more
 436:../../os/common/ports/AVR/chcore.h ****  *          actions.
 437:../../os/common/ports/AVR/chcore.h ****  */
 438:../../os/common/ports/AVR/chcore.h **** static inline void port_unlock(void) {
 131               		.loc 3 438 20 view .LVU44
 132               	.LBB54:
 439:../../os/common/ports/AVR/chcore.h **** 
 440:../../os/common/ports/AVR/chcore.h ****   asm volatile ("sei" : : : "memory");
 133               		.loc 3 440 3 view .LVU45
 134               	/* #APP */
 135               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 136 001c 7894      		sei
 137               	 ;  0 "" 2
 138               	/* #NOAPP */
 139               	.LBE54:
 140               	.LBE53:
 141               		.loc 1 211 16 discriminator 1 view .LVU46
 142               	.LVL5:
 143               		.loc 1 211 16 is_stmt 0 discriminator 1 view .LVU47
 144               	.LBE48:
 145               	.LBE47:
 113:../../os/oslib/src/chmempools.c ****     /*lint -restore*/
 146               		.loc 1 113 5 is_stmt 1 view .LVU48
 113:../../os/oslib/src/chmempools.c ****     /*lint -restore*/
 147               		.loc 1 113 7 is_stmt 0 view .LVU49
 148 001e 1296      		adiw r26,2
 149 0020 8D91      		ld r24,X+
 150 0022 9C91      		ld r25,X
 151 0024 1397      		sbiw r26,2+1
 152 0026 E80F      		add r30,r24
 153 0028 F91F      		adc r31,r25
 154               	.LVL6:
 115:../../os/oslib/src/chmempools.c ****   }
 155               		.loc 1 115 5 is_stmt 1 view .LVU50
 110:../../os/oslib/src/chmempools.c ****     chPoolAdd(mp, p);
 156               		.loc 1 110 12 is_stmt 0 view .LVU51
 157 002a 2150      		subi r18, 1
 158 002c 3040      		sbci r19, 0
 159               	.LVL7:
 110:../../os/oslib/src/chmempools.c ****     chPoolAdd(mp, p);
 160               		.loc 1 110 12 view .LVU52
 161 002e 01F4      		brne .L5
 162               	.LVL8:
 163               	.L3:
 164               	/* epilogue start */
 117:../../os/oslib/src/chmempools.c **** 
 165               		.loc 1 117 1 view .LVU53
 166 0030 0895      		ret
 167               		.cfi_endproc
 168               	.LFE99:
 170               		.section	.text.chPoolAllocI,"ax",@progbits
 171               	.global	chPoolAllocI
 173               	chPoolAllocI:
 174               	.LVL9:
 175               	.LFB100:
 129:../../os/oslib/src/chmempools.c ****   void *objp;
 176               		.loc 1 129 39 is_stmt 1 view -0
 177               		.cfi_startproc
 178               	/* prologue: function */
 179               	/* frame size = 0 */
 180               	/* stack size = 0 */
 181               	.L__stack_usage = 0
 129:../../os/oslib/src/chmempools.c ****   void *objp;
 182               		.loc 1 129 39 is_stmt 0 view .LVU55
 183 0000 DC01      		movw r26,r24
 130:../../os/oslib/src/chmempools.c **** 
 184               		.loc 1 130 3 is_stmt 1 view .LVU56
 132:../../os/oslib/src/chmempools.c ****   chDbgCheck(mp != NULL);
 185               		.loc 1 132 21 view .LVU57
 133:../../os/oslib/src/chmempools.c **** 
 186               		.loc 1 133 3 view .LVU58
 133:../../os/oslib/src/chmempools.c **** 
 187               		.loc 1 133 3 view .LVU59
 133:../../os/oslib/src/chmempools.c **** 
 188               		.loc 1 133 3 discriminator 5 view .LVU60
 135:../../os/oslib/src/chmempools.c ****   /*lint -save -e9013 [15.7] There is no else because it is not needed.*/
 189               		.loc 1 135 3 view .LVU61
 135:../../os/oslib/src/chmempools.c ****   /*lint -save -e9013 [15.7] There is no else because it is not needed.*/
 190               		.loc 1 135 8 is_stmt 0 view .LVU62
 191 0002 8D91      		ld r24,X+
 192 0004 9C91      		ld r25,X
 193 0006 1197      		sbiw r26,1
 194               	.LVL10:
 137:../../os/oslib/src/chmempools.c ****     mp->next = mp->next->next;
 195               		.loc 1 137 3 is_stmt 1 view .LVU63
 137:../../os/oslib/src/chmempools.c ****     mp->next = mp->next->next;
 196               		.loc 1 137 6 is_stmt 0 view .LVU64
 197 0008 0097      		sbiw r24,0
 198 000a 01F0      		breq .L11
 138:../../os/oslib/src/chmempools.c ****   }
 199               		.loc 1 138 5 is_stmt 1 view .LVU65
 138:../../os/oslib/src/chmempools.c ****   }
 200               		.loc 1 138 14 is_stmt 0 view .LVU66
 201 000c FC01      		movw r30,r24
 202 000e 2081      		ld r18,Z
 203 0010 3181      		ldd r19,Z+1
 204 0012 2D93      		st X+,r18
 205 0014 3C93      		st X,r19
 206 0016 0895      		ret
 207               	.L11:
 208               	.LVL11:
 209               	.LBB57:
 210               	.LBI57:
 129:../../os/oslib/src/chmempools.c ****   void *objp;
 211               		.loc 1 129 7 is_stmt 1 view .LVU67
 212               	.LBB58:
 140:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 213               		.loc 1 140 8 view .LVU68
 140:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 214               		.loc 1 140 14 is_stmt 0 view .LVU69
 215 0018 1696      		adiw r26,6
 216 001a ED91      		ld r30,X+
 217 001c FC91      		ld r31,X
 218 001e 1797      		sbiw r26,6+1
 140:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 219               		.loc 1 140 11 view .LVU70
 220 0020 3097      		sbiw r30,0
 221 0022 01F0      		breq .L10
 141:../../os/oslib/src/chmempools.c **** 
 222               		.loc 1 141 5 is_stmt 1 view .LVU71
 141:../../os/oslib/src/chmempools.c **** 
 223               		.loc 1 141 12 is_stmt 0 view .LVU72
 224 0024 1496      		adiw r26,4
 225 0026 6D91      		ld r22,X+
 226 0028 7C91      		ld r23,X
 227 002a 1597      		sbiw r26,4+1
 228 002c 1296      		adiw r26,2
 229 002e 8D91      		ld r24,X+
 230 0030 9C91      		ld r25,X
 231               	.LVL12:
 141:../../os/oslib/src/chmempools.c **** 
 232               		.loc 1 141 12 view .LVU73
 233 0032 0994      		ijmp
 234               	.LVL13:
 235               	.L10:
 236               	/* epilogue start */
 141:../../os/oslib/src/chmempools.c **** 
 237               		.loc 1 141 12 view .LVU74
 238               	.LBE58:
 239               	.LBE57:
 149:../../os/oslib/src/chmempools.c **** 
 240               		.loc 1 149 1 view .LVU75
 241 0034 0895      		ret
 242               		.cfi_endproc
 243               	.LFE100:
 245               		.section	.text.chPoolAlloc,"ax",@progbits
 246               	.global	chPoolAlloc
 248               	chPoolAlloc:
 249               	.LVL14:
 250               	.LFB101:
 161:../../os/oslib/src/chmempools.c ****   void *objp;
 251               		.loc 1 161 38 is_stmt 1 view -0
 252               		.cfi_startproc
 161:../../os/oslib/src/chmempools.c ****   void *objp;
 253               		.loc 1 161 38 is_stmt 0 view .LVU77
 254 0000 CF93      		push r28
 255               	.LCFI0:
 256               		.cfi_def_cfa_offset 3
 257               		.cfi_offset 28, -2
 258 0002 DF93      		push r29
 259               	.LCFI1:
 260               		.cfi_def_cfa_offset 4
 261               		.cfi_offset 29, -3
 262               	/* prologue: function */
 263               	/* frame size = 0 */
 264               	/* stack size = 2 */
 265               	.L__stack_usage = 2
 266 0004 DC01      		movw r26,r24
 162:../../os/oslib/src/chmempools.c **** 
 267               		.loc 1 162 3 is_stmt 1 view .LVU78
 164:../../os/oslib/src/chmempools.c ****   objp = chPoolAllocI(mp);
 268               		.loc 1 164 3 view .LVU79
 269               	.LBB67:
 270               	.LBI67:
 428:../../os/common/ports/AVR/chcore.h **** 
 271               		.loc 3 428 20 view .LVU80
 272               	.LBB68:
 430:../../os/common/ports/AVR/chcore.h **** }
 273               		.loc 3 430 3 view .LVU81
 274               	/* #APP */
 275               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 276 0006 F894      		cli
 277               	 ;  0 "" 2
 278               	/* #NOAPP */
 279               	.LBE68:
 280               	.LBE67:
 164:../../os/oslib/src/chmempools.c ****   objp = chPoolAllocI(mp);
 281               		.loc 1 164 3 discriminator 1 view .LVU82
 164:../../os/oslib/src/chmempools.c ****   objp = chPoolAllocI(mp);
 282               		.loc 1 164 14 discriminator 1 view .LVU83
 165:../../os/oslib/src/chmempools.c ****   chSysUnlock();
 283               		.loc 1 165 3 view .LVU84
 284               	.LVL15:
 285               	.LBB69:
 286               	.LBI69:
 129:../../os/oslib/src/chmempools.c ****   void *objp;
 287               		.loc 1 129 7 view .LVU85
 288               	.LBB70:
 130:../../os/oslib/src/chmempools.c **** 
 289               		.loc 1 130 3 view .LVU86
 132:../../os/oslib/src/chmempools.c ****   chDbgCheck(mp != NULL);
 290               		.loc 1 132 21 view .LVU87
 133:../../os/oslib/src/chmempools.c **** 
 291               		.loc 1 133 3 view .LVU88
 133:../../os/oslib/src/chmempools.c **** 
 292               		.loc 1 133 3 view .LVU89
 133:../../os/oslib/src/chmempools.c **** 
 293               		.loc 1 133 3 discriminator 5 view .LVU90
 135:../../os/oslib/src/chmempools.c ****   /*lint -save -e9013 [15.7] There is no else because it is not needed.*/
 294               		.loc 1 135 3 view .LVU91
 135:../../os/oslib/src/chmempools.c ****   /*lint -save -e9013 [15.7] There is no else because it is not needed.*/
 295               		.loc 1 135 8 is_stmt 0 view .LVU92
 296 0008 CD91      		ld r28,X+
 297 000a DC91      		ld r29,X
 298 000c 1197      		sbiw r26,1
 299               	.LVL16:
 137:../../os/oslib/src/chmempools.c ****     mp->next = mp->next->next;
 300               		.loc 1 137 3 is_stmt 1 view .LVU93
 137:../../os/oslib/src/chmempools.c ****     mp->next = mp->next->next;
 301               		.loc 1 137 6 is_stmt 0 view .LVU94
 302 000e 2097      		sbiw r28,0
 303 0010 01F0      		breq .L17
 138:../../os/oslib/src/chmempools.c ****   }
 304               		.loc 1 138 5 is_stmt 1 view .LVU95
 138:../../os/oslib/src/chmempools.c ****   }
 305               		.loc 1 138 14 is_stmt 0 view .LVU96
 306 0012 8881      		ld r24,Y
 307 0014 9981      		ldd r25,Y+1
 308               	.LVL17:
 138:../../os/oslib/src/chmempools.c ****   }
 309               		.loc 1 138 14 view .LVU97
 310 0016 8D93      		st X+,r24
 311 0018 9C93      		st X,r25
 312               	.L18:
 143:../../os/oslib/src/chmempools.c ****                 "returned object not aligned");
 313               		.loc 1 143 5 is_stmt 1 discriminator 5 view .LVU98
 148:../../os/oslib/src/chmempools.c **** }
 314               		.loc 1 148 3 view .LVU99
 315               	.LVL18:
 148:../../os/oslib/src/chmempools.c **** }
 316               		.loc 1 148 3 is_stmt 0 view .LVU100
 317               	.LBE70:
 318               	.LBE69:
 166:../../os/oslib/src/chmempools.c **** 
 319               		.loc 1 166 3 is_stmt 1 view .LVU101
 166:../../os/oslib/src/chmempools.c **** 
 320               		.loc 1 166 3 view .LVU102
 321               	.LBB74:
 322               	.LBI74:
 438:../../os/common/ports/AVR/chcore.h **** 
 323               		.loc 3 438 20 view .LVU103
 324               	.LBB75:
 325               		.loc 3 440 3 view .LVU104
 326               	/* #APP */
 327               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 328 001a 7894      		sei
 329               	 ;  0 "" 2
 330               	/* #NOAPP */
 331               	.LBE75:
 332               	.LBE74:
 166:../../os/oslib/src/chmempools.c **** 
 333               		.loc 1 166 16 discriminator 1 view .LVU105
 168:../../os/oslib/src/chmempools.c **** }
 334               		.loc 1 168 3 view .LVU106
 169:../../os/oslib/src/chmempools.c **** 
 335               		.loc 1 169 1 is_stmt 0 view .LVU107
 336 001c CE01      		movw r24,r28
 337               	/* epilogue start */
 338 001e DF91      		pop r29
 339 0020 CF91      		pop r28
 340               	.LVL19:
 169:../../os/oslib/src/chmempools.c **** 
 341               		.loc 1 169 1 view .LVU108
 342 0022 0895      		ret
 343               	.LVL20:
 344               	.L17:
 345               	.LBB77:
 346               	.LBB73:
 347               	.LBB71:
 348               	.LBI71:
 129:../../os/oslib/src/chmempools.c ****   void *objp;
 349               		.loc 1 129 7 is_stmt 1 view .LVU109
 350               	.LBB72:
 140:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 351               		.loc 1 140 8 view .LVU110
 140:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 352               		.loc 1 140 14 is_stmt 0 view .LVU111
 353 0024 1696      		adiw r26,6
 354 0026 ED91      		ld r30,X+
 355 0028 FC91      		ld r31,X
 356 002a 1797      		sbiw r26,6+1
 140:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 357               		.loc 1 140 11 view .LVU112
 358 002c 3097      		sbiw r30,0
 359 002e 01F0      		breq .L18
 141:../../os/oslib/src/chmempools.c **** 
 360               		.loc 1 141 5 is_stmt 1 view .LVU113
 141:../../os/oslib/src/chmempools.c **** 
 361               		.loc 1 141 12 is_stmt 0 view .LVU114
 362 0030 1496      		adiw r26,4
 363 0032 6D91      		ld r22,X+
 364 0034 7C91      		ld r23,X
 365 0036 1597      		sbiw r26,4+1
 366 0038 1296      		adiw r26,2
 367 003a 8D91      		ld r24,X+
 368 003c 9C91      		ld r25,X
 369               	.LVL21:
 141:../../os/oslib/src/chmempools.c **** 
 370               		.loc 1 141 12 view .LVU115
 371 003e 0995      		icall
 372               	.LVL22:
 141:../../os/oslib/src/chmempools.c **** 
 373               		.loc 1 141 12 view .LVU116
 374 0040 EC01      		movw r28,r24
 375               	.LVL23:
 143:../../os/oslib/src/chmempools.c ****                 "returned object not aligned");
 376               		.loc 1 143 5 is_stmt 1 view .LVU117
 143:../../os/oslib/src/chmempools.c ****                 "returned object not aligned");
 377               		.loc 1 143 5 view .LVU118
 143:../../os/oslib/src/chmempools.c ****                 "returned object not aligned");
 378               		.loc 1 143 5 is_stmt 0 view .LVU119
 379               	.LBE72:
 380               	.LBE71:
 143:../../os/oslib/src/chmempools.c ****                 "returned object not aligned");
 381               		.loc 1 143 5 is_stmt 1 discriminator 5 view .LVU120
 148:../../os/oslib/src/chmempools.c **** }
 382               		.loc 1 148 3 view .LVU121
 148:../../os/oslib/src/chmempools.c **** }
 383               		.loc 1 148 3 is_stmt 0 view .LVU122
 384               	.LBE73:
 385               	.LBE77:
 166:../../os/oslib/src/chmempools.c **** 
 386               		.loc 1 166 3 is_stmt 1 view .LVU123
 166:../../os/oslib/src/chmempools.c **** 
 387               		.loc 1 166 3 view .LVU124
 388               	.LBB78:
 438:../../os/common/ports/AVR/chcore.h **** 
 389               		.loc 3 438 20 view .LVU125
 390               	.LBB76:
 391               		.loc 3 440 3 view .LVU126
 392               	/* #APP */
 393               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 394 0042 7894      		sei
 395               	 ;  0 "" 2
 396               	/* #NOAPP */
 397               	.LBE76:
 398               	.LBE78:
 166:../../os/oslib/src/chmempools.c **** 
 399               		.loc 1 166 16 discriminator 1 view .LVU127
 168:../../os/oslib/src/chmempools.c **** }
 400               		.loc 1 168 3 view .LVU128
 169:../../os/oslib/src/chmempools.c **** 
 401               		.loc 1 169 1 is_stmt 0 view .LVU129
 402 0044 CE01      		movw r24,r28
 403               	/* epilogue start */
 169:../../os/oslib/src/chmempools.c **** 
 404               		.loc 1 169 1 view .LVU130
 405 0046 DF91      		pop r29
 406 0048 CF91      		pop r28
 407 004a 0895      		ret
 408               		.cfi_endproc
 409               	.LFE101:
 411               		.section	.text.chPoolFreeI,"ax",@progbits
 412               	.global	chPoolFreeI
 414               	chPoolFreeI:
 415               	.LVL24:
 416               	.LFB102:
 183:../../os/oslib/src/chmempools.c ****   struct pool_header *php = objp;
 417               		.loc 1 183 49 is_stmt 1 view -0
 418               		.cfi_startproc
 419               	/* prologue: function */
 420               	/* frame size = 0 */
 421               	/* stack size = 0 */
 422               	.L__stack_usage = 0
 183:../../os/oslib/src/chmempools.c ****   struct pool_header *php = objp;
 423               		.loc 1 183 49 is_stmt 0 view .LVU132
 424 0000 FC01      		movw r30,r24
 425 0002 DB01      		movw r26,r22
 184:../../os/oslib/src/chmempools.c **** 
 426               		.loc 1 184 3 is_stmt 1 view .LVU133
 427               	.LVL25:
 186:../../os/oslib/src/chmempools.c ****   chDbgCheck((mp != NULL) &&
 428               		.loc 1 186 21 view .LVU134
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 429               		.loc 1 187 3 view .LVU135
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 430               		.loc 1 187 3 view .LVU136
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 431               		.loc 1 187 3 discriminator 9 view .LVU137
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 432               		.loc 1 191 3 view .LVU138
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 433               		.loc 1 191 13 is_stmt 0 view .LVU139
 434 0004 8081      		ld r24,Z
 435 0006 9181      		ldd r25,Z+1
 436               	.LVL26:
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 437               		.loc 1 191 13 view .LVU140
 438 0008 8D93      		st X+,r24
 439 000a 9C93      		st X,r25
 192:../../os/oslib/src/chmempools.c **** }
 440               		.loc 1 192 3 is_stmt 1 view .LVU141
 192:../../os/oslib/src/chmempools.c **** }
 441               		.loc 1 192 12 is_stmt 0 view .LVU142
 442 000c 7183      		std Z+1,r23
 443 000e 6083      		st Z,r22
 444               	/* epilogue start */
 193:../../os/oslib/src/chmempools.c **** 
 445               		.loc 1 193 1 view .LVU143
 446 0010 0895      		ret
 447               		.cfi_endproc
 448               	.LFE102:
 450               		.section	.text.chPoolFree,"ax",@progbits
 451               	.global	chPoolFree
 453               	chPoolFree:
 454               	.LVL27:
 455               	.LFB103:
 207:../../os/oslib/src/chmempools.c **** 
 456               		.loc 1 207 48 is_stmt 1 view -0
 457               		.cfi_startproc
 458               	/* prologue: function */
 459               	/* frame size = 0 */
 460               	/* stack size = 0 */
 461               	.L__stack_usage = 0
 207:../../os/oslib/src/chmempools.c **** 
 462               		.loc 1 207 48 is_stmt 0 view .LVU145
 463 0000 FC01      		movw r30,r24
 464 0002 DB01      		movw r26,r22
 209:../../os/oslib/src/chmempools.c ****   chPoolFreeI(mp, objp);
 465               		.loc 1 209 3 is_stmt 1 view .LVU146
 466               	.LBB79:
 467               	.LBI79:
 428:../../os/common/ports/AVR/chcore.h **** 
 468               		.loc 3 428 20 view .LVU147
 469               	.LBB80:
 430:../../os/common/ports/AVR/chcore.h **** }
 470               		.loc 3 430 3 view .LVU148
 471               	/* #APP */
 472               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 473 0004 F894      		cli
 474               	 ;  0 "" 2
 475               	/* #NOAPP */
 476               	.LBE80:
 477               	.LBE79:
 209:../../os/oslib/src/chmempools.c ****   chPoolFreeI(mp, objp);
 478               		.loc 1 209 3 discriminator 1 view .LVU149
 209:../../os/oslib/src/chmempools.c ****   chPoolFreeI(mp, objp);
 479               		.loc 1 209 14 discriminator 1 view .LVU150
 210:../../os/oslib/src/chmempools.c ****   chSysUnlock();
 480               		.loc 1 210 3 view .LVU151
 481               	.LVL28:
 482               	.LBB81:
 483               	.LBI81:
 183:../../os/oslib/src/chmempools.c ****   struct pool_header *php = objp;
 484               		.loc 1 183 6 view .LVU152
 485               	.LBB82:
 184:../../os/oslib/src/chmempools.c **** 
 486               		.loc 1 184 3 view .LVU153
 186:../../os/oslib/src/chmempools.c ****   chDbgCheck((mp != NULL) &&
 487               		.loc 1 186 21 view .LVU154
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 488               		.loc 1 187 3 view .LVU155
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 489               		.loc 1 187 3 view .LVU156
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 490               		.loc 1 187 3 discriminator 9 view .LVU157
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 491               		.loc 1 191 3 view .LVU158
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 492               		.loc 1 191 13 is_stmt 0 view .LVU159
 493 0006 8081      		ld r24,Z
 494 0008 9181      		ldd r25,Z+1
 495               	.LVL29:
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 496               		.loc 1 191 13 view .LVU160
 497 000a 8D93      		st X+,r24
 498 000c 9C93      		st X,r25
 192:../../os/oslib/src/chmempools.c **** }
 499               		.loc 1 192 3 is_stmt 1 view .LVU161
 192:../../os/oslib/src/chmempools.c **** }
 500               		.loc 1 192 12 is_stmt 0 view .LVU162
 501 000e 7183      		std Z+1,r23
 502 0010 6083      		st Z,r22
 503               	.LVL30:
 192:../../os/oslib/src/chmempools.c **** }
 504               		.loc 1 192 12 view .LVU163
 505               	.LBE82:
 506               	.LBE81:
 507               		.loc 1 211 3 is_stmt 1 view .LVU164
 508               		.loc 1 211 3 view .LVU165
 509               	.LBB83:
 510               	.LBI83:
 438:../../os/common/ports/AVR/chcore.h **** 
 511               		.loc 3 438 20 view .LVU166
 512               	.LBB84:
 513               		.loc 3 440 3 view .LVU167
 514               	/* #APP */
 515               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 516 0012 7894      		sei
 517               	 ;  0 "" 2
 518               	/* #NOAPP */
 519               	.LBE84:
 520               	.LBE83:
 521               		.loc 1 211 16 discriminator 1 view .LVU168
 522               	/* epilogue start */
 212:../../os/oslib/src/chmempools.c **** }
 523               		.loc 1 212 1 is_stmt 0 view .LVU169
 524 0014 0895      		ret
 525               		.cfi_endproc
 526               	.LFE103:
 528               		.section	.text.chGuardedPoolObjectInitAligned,"ax",@progbits
 529               	.global	chGuardedPoolObjectInitAligned
 531               	chGuardedPoolObjectInitAligned:
 532               	.LVL31:
 533               	.LFB104:
 213:../../os/oslib/src/chmempools.c **** 
 214:../../os/oslib/src/chmempools.c **** #if (CH_CFG_USE_SEMAPHORES == TRUE) || defined(__DOXYGEN__)
 215:../../os/oslib/src/chmempools.c **** /**
 216:../../os/oslib/src/chmempools.c ****  * @brief   Initializes an empty guarded memory pool.
 217:../../os/oslib/src/chmempools.c ****  *
 218:../../os/oslib/src/chmempools.c ****  * @param[out] gmp      pointer to a @p guarded_memory_pool_t structure
 219:../../os/oslib/src/chmempools.c ****  * @param[in] size      the size of the objects contained in this guarded
 220:../../os/oslib/src/chmempools.c ****  *                      memory pool, the minimum accepted size is the size
 221:../../os/oslib/src/chmempools.c ****  *                      of a pointer to void.
 222:../../os/oslib/src/chmempools.c ****  * @param[in] align     required memory alignment
 223:../../os/oslib/src/chmempools.c ****  *
 224:../../os/oslib/src/chmempools.c ****  * @init
 225:../../os/oslib/src/chmempools.c ****  */
 226:../../os/oslib/src/chmempools.c **** void chGuardedPoolObjectInitAligned(guarded_memory_pool_t *gmp,
 227:../../os/oslib/src/chmempools.c ****                                     size_t size,
 228:../../os/oslib/src/chmempools.c ****                                     unsigned align) {
 534               		.loc 1 228 53 is_stmt 1 view -0
 535               		.cfi_startproc
 536               	/* prologue: function */
 537               	/* frame size = 0 */
 538               	/* stack size = 0 */
 539               	.L__stack_usage = 0
 540               		.loc 1 228 53 is_stmt 0 view .LVU171
 541 0000 FC01      		movw r30,r24
 229:../../os/oslib/src/chmempools.c **** 
 230:../../os/oslib/src/chmempools.c ****   chPoolObjectInitAligned(&gmp->pool, size, align, NULL);
 542               		.loc 1 230 3 is_stmt 1 view .LVU172
 543               	.LVL32:
 544               	.LBB85:
 545               	.LBI85:
  77:../../os/oslib/src/chmempools.c ****                              unsigned align, memgetfunc_t provider) {
 546               		.loc 1 77 6 view .LVU173
 547               	.LBB86:
  80:../../os/oslib/src/chmempools.c ****              (size >= sizeof(void *)) &&
 548               		.loc 1 80 3 view .LVU174
  80:../../os/oslib/src/chmempools.c ****              (size >= sizeof(void *)) &&
 549               		.loc 1 80 3 view .LVU175
  80:../../os/oslib/src/chmempools.c ****              (size >= sizeof(void *)) &&
 550               		.loc 1 80 3 discriminator 13 view .LVU176
  85:../../os/oslib/src/chmempools.c ****   mp->object_size = size;
 551               		.loc 1 85 3 view .LVU177
  85:../../os/oslib/src/chmempools.c ****   mp->object_size = size;
 552               		.loc 1 85 12 is_stmt 0 view .LVU178
 553 0002 1282      		std Z+2,__zero_reg__
 554 0004 1182      		std Z+1,__zero_reg__
  86:../../os/oslib/src/chmempools.c ****   mp->align = align;
 555               		.loc 1 86 3 is_stmt 1 view .LVU179
  86:../../os/oslib/src/chmempools.c ****   mp->align = align;
 556               		.loc 1 86 19 is_stmt 0 view .LVU180
 557 0006 7483      		std Z+4,r23
 558 0008 6383      		std Z+3,r22
  87:../../os/oslib/src/chmempools.c ****   mp->provider = provider;
 559               		.loc 1 87 3 is_stmt 1 view .LVU181
  87:../../os/oslib/src/chmempools.c ****   mp->provider = provider;
 560               		.loc 1 87 13 is_stmt 0 view .LVU182
 561 000a 5683      		std Z+6,r21
 562 000c 4583      		std Z+5,r20
  88:../../os/oslib/src/chmempools.c **** }
 563               		.loc 1 88 3 is_stmt 1 view .LVU183
  88:../../os/oslib/src/chmempools.c **** }
 564               		.loc 1 88 16 is_stmt 0 view .LVU184
 565 000e 1086      		std Z+8,__zero_reg__
 566 0010 1782      		std Z+7,__zero_reg__
 567               	.LVL33:
  88:../../os/oslib/src/chmempools.c **** }
 568               		.loc 1 88 16 view .LVU185
 569               	.LBE86:
 570               	.LBE85:
 231:../../os/oslib/src/chmempools.c ****   chSemObjectInit(&gmp->sem, (cnt_t)0);
 571               		.loc 1 231 3 is_stmt 1 view .LVU186
 572 0012 1082      		st Z,__zero_reg__
 573               	/* epilogue start */
 232:../../os/oslib/src/chmempools.c **** }
 574               		.loc 1 232 1 is_stmt 0 view .LVU187
 575 0014 0895      		ret
 576               		.cfi_endproc
 577               	.LFE104:
 579               		.section	.text.chGuardedPoolLoadArray,"ax",@progbits
 580               	.global	chGuardedPoolLoadArray
 582               	chGuardedPoolLoadArray:
 583               	.LVL34:
 584               	.LFB105:
 233:../../os/oslib/src/chmempools.c **** 
 234:../../os/oslib/src/chmempools.c **** /**
 235:../../os/oslib/src/chmempools.c ****  * @brief   Loads a guarded memory pool with an array of static objects.
 236:../../os/oslib/src/chmempools.c ****  * @pre     The guarded memory pool must already be initialized.
 237:../../os/oslib/src/chmempools.c ****  * @pre     The array elements must be of the right size for the specified
 238:../../os/oslib/src/chmempools.c ****  *          guarded memory pool.
 239:../../os/oslib/src/chmempools.c ****  * @post    The guarded memory pool contains the elements of the input array.
 240:../../os/oslib/src/chmempools.c ****  *
 241:../../os/oslib/src/chmempools.c ****  * @param[in] gmp       pointer to a @p guarded_memory_pool_t structure
 242:../../os/oslib/src/chmempools.c ****  * @param[in] p         pointer to the array first element
 243:../../os/oslib/src/chmempools.c ****  * @param[in] n         number of elements in the array
 244:../../os/oslib/src/chmempools.c ****  *
 245:../../os/oslib/src/chmempools.c ****  * @api
 246:../../os/oslib/src/chmempools.c ****  */
 247:../../os/oslib/src/chmempools.c **** void chGuardedPoolLoadArray(guarded_memory_pool_t *gmp, void *p, size_t n) {
 585               		.loc 1 247 76 is_stmt 1 view -0
 586               		.cfi_startproc
 587               		.loc 1 247 76 is_stmt 0 view .LVU189
 588 0000 EF92      		push r14
 589               	.LCFI2:
 590               		.cfi_def_cfa_offset 3
 591               		.cfi_offset 14, -2
 592 0002 FF92      		push r15
 593               	.LCFI3:
 594               		.cfi_def_cfa_offset 4
 595               		.cfi_offset 15, -3
 596 0004 0F93      		push r16
 597               	.LCFI4:
 598               		.cfi_def_cfa_offset 5
 599               		.cfi_offset 16, -4
 600 0006 1F93      		push r17
 601               	.LCFI5:
 602               		.cfi_def_cfa_offset 6
 603               		.cfi_offset 17, -5
 604 0008 CF93      		push r28
 605               	.LCFI6:
 606               		.cfi_def_cfa_offset 7
 607               		.cfi_offset 28, -6
 608 000a DF93      		push r29
 609               	.LCFI7:
 610               		.cfi_def_cfa_offset 8
 611               		.cfi_offset 29, -7
 612               	/* prologue: function */
 613               	/* frame size = 0 */
 614               	/* stack size = 6 */
 615               	.L__stack_usage = 6
 616 000c 8C01      		movw r16,r24
 617 000e EB01      		movw r28,r22
 618 0010 7A01      		movw r14,r20
 248:../../os/oslib/src/chmempools.c **** 
 249:../../os/oslib/src/chmempools.c ****   chDbgCheck((gmp != NULL) && (n != 0U));
 619               		.loc 1 249 3 is_stmt 1 view .LVU190
 620               		.loc 1 249 3 view .LVU191
 621               		.loc 1 249 3 discriminator 7 view .LVU192
 250:../../os/oslib/src/chmempools.c **** 
 251:../../os/oslib/src/chmempools.c ****   while (n != 0U) {
 622               		.loc 1 251 3 view .LVU193
 623               		.loc 1 251 12 view .LVU194
 624 0012 452B      		or r20,r21
 625 0014 01F0      		breq .L25
 626               	.LVL35:
 627               	.L27:
 252:../../os/oslib/src/chmempools.c ****     chGuardedPoolAdd(gmp, p);
 628               		.loc 1 252 5 view .LVU195
 629               	.LBB99:
 630               	.LBI99:
 213:../../os/oslib/include/chmempools.h **** }
 214:../../os/oslib/include/chmempools.h **** 
 215:../../os/oslib/include/chmempools.h **** /**
 216:../../os/oslib/include/chmempools.h ****  * @brief   Adds an object to a memory pool.
 217:../../os/oslib/include/chmempools.h ****  * @pre     The memory pool must be already been initialized.
 218:../../os/oslib/include/chmempools.h ****  * @pre     The added object must be of the right size for the specified
 219:../../os/oslib/include/chmempools.h ****  *          memory pool.
 220:../../os/oslib/include/chmempools.h ****  * @pre     The added object must be properly aligned.
 221:../../os/oslib/include/chmempools.h ****  * @note    This function is just an alias for @p chPoolFreeI() and has been
 222:../../os/oslib/include/chmempools.h ****  *          added for clarity.
 223:../../os/oslib/include/chmempools.h ****  *
 224:../../os/oslib/include/chmempools.h ****  * @param[in] mp        pointer to a @p memory_pool_t structure
 225:../../os/oslib/include/chmempools.h ****  * @param[in] objp      the pointer to the object to be added
 226:../../os/oslib/include/chmempools.h ****  *
 227:../../os/oslib/include/chmempools.h ****  * @iclass
 228:../../os/oslib/include/chmempools.h ****  */
 229:../../os/oslib/include/chmempools.h **** static inline void chPoolAddI(memory_pool_t *mp, void *objp) {
 230:../../os/oslib/include/chmempools.h **** 
 231:../../os/oslib/include/chmempools.h ****   chPoolFreeI(mp, objp);
 232:../../os/oslib/include/chmempools.h **** }
 233:../../os/oslib/include/chmempools.h **** 
 234:../../os/oslib/include/chmempools.h **** #if (CH_CFG_USE_SEMAPHORES == TRUE) || defined(__DOXYGEN__)
 235:../../os/oslib/include/chmempools.h **** /**
 236:../../os/oslib/include/chmempools.h ****  * @brief   Initializes an empty guarded memory pool.
 237:../../os/oslib/include/chmempools.h ****  *
 238:../../os/oslib/include/chmempools.h ****  * @param[out] gmp      pointer to a @p guarded_memory_pool_t structure
 239:../../os/oslib/include/chmempools.h ****  * @param[in] size      the size of the objects contained in this guarded
 240:../../os/oslib/include/chmempools.h ****  *                      memory pool, the minimum accepted size is the size
 241:../../os/oslib/include/chmempools.h ****  *                      of a pointer to void.
 242:../../os/oslib/include/chmempools.h ****  *
 243:../../os/oslib/include/chmempools.h ****  * @init
 244:../../os/oslib/include/chmempools.h ****  */
 245:../../os/oslib/include/chmempools.h **** static inline void chGuardedPoolObjectInit(guarded_memory_pool_t *gmp,
 246:../../os/oslib/include/chmempools.h ****                                            size_t size) {
 247:../../os/oslib/include/chmempools.h **** 
 248:../../os/oslib/include/chmempools.h ****   chGuardedPoolObjectInitAligned(gmp, size, PORT_NATURAL_ALIGN);
 249:../../os/oslib/include/chmempools.h **** }
 250:../../os/oslib/include/chmempools.h **** 
 251:../../os/oslib/include/chmempools.h **** /**
 252:../../os/oslib/include/chmempools.h ****  * @brief   Gets the count of objects in a guarded memory pool.
 253:../../os/oslib/include/chmempools.h ****  * @pre     The guarded memory pool must be already been initialized.
 254:../../os/oslib/include/chmempools.h ****  *
 255:../../os/oslib/include/chmempools.h ****  * @param[in] gmp       pointer to a @p guarded_memory_pool_t structure
 256:../../os/oslib/include/chmempools.h ****  * @return              The counter of the guard semaphore.
 257:../../os/oslib/include/chmempools.h ****  *
 258:../../os/oslib/include/chmempools.h ****  * @iclass
 259:../../os/oslib/include/chmempools.h ****  */
 260:../../os/oslib/include/chmempools.h **** static inline cnt_t chGuardedPoolGetCounterI(guarded_memory_pool_t *gmp) {
 261:../../os/oslib/include/chmempools.h **** 
 262:../../os/oslib/include/chmempools.h ****   return chSemGetCounterI(&gmp->sem);
 263:../../os/oslib/include/chmempools.h **** }
 264:../../os/oslib/include/chmempools.h **** 
 265:../../os/oslib/include/chmempools.h **** /**
 266:../../os/oslib/include/chmempools.h ****  * @brief   Allocates an object from a guarded memory pool.
 267:../../os/oslib/include/chmempools.h ****  * @pre     The guarded memory pool must be already been initialized.
 268:../../os/oslib/include/chmempools.h ****  *
 269:../../os/oslib/include/chmempools.h ****  * @param[in] gmp       pointer to a @p guarded_memory_pool_t structure
 270:../../os/oslib/include/chmempools.h ****  * @return              The pointer to the allocated object.
 271:../../os/oslib/include/chmempools.h ****  * @retval NULL         if the pool is empty.
 272:../../os/oslib/include/chmempools.h ****  *
 273:../../os/oslib/include/chmempools.h ****  * @iclass
 274:../../os/oslib/include/chmempools.h ****  */
 275:../../os/oslib/include/chmempools.h **** static inline void *chGuardedPoolAllocI(guarded_memory_pool_t *gmp) {
 276:../../os/oslib/include/chmempools.h ****   void *p;
 277:../../os/oslib/include/chmempools.h **** 
 278:../../os/oslib/include/chmempools.h ****   p = chPoolAllocI(&gmp->pool);
 279:../../os/oslib/include/chmempools.h ****   if (p != NULL) {
 280:../../os/oslib/include/chmempools.h ****     chSemFastWaitI(&gmp->sem);
 281:../../os/oslib/include/chmempools.h ****     chDbgAssert(chSemGetCounterI(&gmp->sem) >= (cnt_t)0,
 282:../../os/oslib/include/chmempools.h ****                 "semaphore out of sync");
 283:../../os/oslib/include/chmempools.h ****   }
 284:../../os/oslib/include/chmempools.h ****   return p;
 285:../../os/oslib/include/chmempools.h **** }
 286:../../os/oslib/include/chmempools.h **** 
 287:../../os/oslib/include/chmempools.h **** /**
 288:../../os/oslib/include/chmempools.h ****  * @brief   Releases an object into a guarded memory pool.
 289:../../os/oslib/include/chmempools.h ****  * @pre     The guarded memory pool must already be initialized.
 290:../../os/oslib/include/chmempools.h ****  * @pre     The freed object must be of the right size for the specified
 291:../../os/oslib/include/chmempools.h ****  *          guarded memory pool.
 292:../../os/oslib/include/chmempools.h ****  * @pre     The added object must be properly aligned.
 293:../../os/oslib/include/chmempools.h ****  *
 294:../../os/oslib/include/chmempools.h ****  * @param[in] gmp       pointer to a @p guarded_memory_pool_t structure
 295:../../os/oslib/include/chmempools.h ****  * @param[in] objp      the pointer to the object to be released
 296:../../os/oslib/include/chmempools.h ****  *
 297:../../os/oslib/include/chmempools.h ****  * @iclass
 298:../../os/oslib/include/chmempools.h ****  */
 299:../../os/oslib/include/chmempools.h **** static inline void chGuardedPoolFreeI(guarded_memory_pool_t *gmp, void *objp) {
 300:../../os/oslib/include/chmempools.h **** 
 301:../../os/oslib/include/chmempools.h ****   chPoolFreeI(&gmp->pool, objp);
 302:../../os/oslib/include/chmempools.h ****   chSemSignalI(&gmp->sem);
 303:../../os/oslib/include/chmempools.h **** }
 304:../../os/oslib/include/chmempools.h **** 
 305:../../os/oslib/include/chmempools.h **** /**
 306:../../os/oslib/include/chmempools.h ****  * @brief   Releases an object into a guarded memory pool.
 307:../../os/oslib/include/chmempools.h ****  * @pre     The guarded memory pool must already be initialized.
 308:../../os/oslib/include/chmempools.h ****  * @pre     The freed object must be of the right size for the specified
 309:../../os/oslib/include/chmempools.h ****  *          guarded memory pool.
 310:../../os/oslib/include/chmempools.h ****  * @pre     The added object must be properly aligned.
 311:../../os/oslib/include/chmempools.h ****  *
 312:../../os/oslib/include/chmempools.h ****  * @param[in] gmp       pointer to a @p guarded_memory_pool_t structure
 313:../../os/oslib/include/chmempools.h ****  * @param[in] objp      the pointer to the object to be released
 314:../../os/oslib/include/chmempools.h ****  *
 315:../../os/oslib/include/chmempools.h ****  * @sclass
 316:../../os/oslib/include/chmempools.h ****  */
 317:../../os/oslib/include/chmempools.h **** static inline void chGuardedPoolFreeS(guarded_memory_pool_t *gmp, void *objp) {
 318:../../os/oslib/include/chmempools.h **** 
 319:../../os/oslib/include/chmempools.h ****   chGuardedPoolFreeI(gmp, objp);
 320:../../os/oslib/include/chmempools.h ****   chSchRescheduleS();
 321:../../os/oslib/include/chmempools.h **** }
 322:../../os/oslib/include/chmempools.h **** 
 323:../../os/oslib/include/chmempools.h **** /**
 324:../../os/oslib/include/chmempools.h ****  * @brief   Adds an object to a guarded memory pool.
 325:../../os/oslib/include/chmempools.h ****  * @pre     The guarded memory pool must be already been initialized.
 326:../../os/oslib/include/chmempools.h ****  * @pre     The added object must be of the right size for the specified
 327:../../os/oslib/include/chmempools.h ****  *          guarded memory pool.
 328:../../os/oslib/include/chmempools.h ****  * @pre     The added object must be properly aligned.
 329:../../os/oslib/include/chmempools.h ****  * @note    This function is just an alias for @p chGuardedPoolFree() and
 330:../../os/oslib/include/chmempools.h ****  *          has been added for clarity.
 331:../../os/oslib/include/chmempools.h ****  *
 332:../../os/oslib/include/chmempools.h ****  * @param[in] gmp       pointer to a @p guarded_memory_pool_t structure
 333:../../os/oslib/include/chmempools.h ****  * @param[in] objp      the pointer to the object to be added
 334:../../os/oslib/include/chmempools.h ****  *
 335:../../os/oslib/include/chmempools.h ****  * @api
 336:../../os/oslib/include/chmempools.h ****  */
 337:../../os/oslib/include/chmempools.h **** static inline void chGuardedPoolAdd(guarded_memory_pool_t *gmp, void *objp) {
 631               		.loc 2 337 20 view .LVU196
 338:../../os/oslib/include/chmempools.h **** 
 339:../../os/oslib/include/chmempools.h ****   chGuardedPoolFree(gmp, objp);
 632               		.loc 2 339 3 view .LVU197
 633               	.LBB100:
 634               	.LBI100:
 253:../../os/oslib/src/chmempools.c ****     /*lint -save -e9087 [11.3] Safe cast.*/
 254:../../os/oslib/src/chmempools.c ****     p = (void *)(((uint8_t *)p) + gmp->pool.object_size);
 255:../../os/oslib/src/chmempools.c ****     /*lint -restore*/
 256:../../os/oslib/src/chmempools.c ****     n--;
 257:../../os/oslib/src/chmempools.c ****   }
 258:../../os/oslib/src/chmempools.c **** }
 259:../../os/oslib/src/chmempools.c **** 
 260:../../os/oslib/src/chmempools.c **** /**
 261:../../os/oslib/src/chmempools.c ****  * @brief   Allocates an object from a guarded memory pool.
 262:../../os/oslib/src/chmempools.c ****  * @pre     The guarded memory pool must already be initialized.
 263:../../os/oslib/src/chmempools.c ****  *
 264:../../os/oslib/src/chmempools.c ****  * @param[in] gmp       pointer to a @p guarded_memory_pool_t structure
 265:../../os/oslib/src/chmempools.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 266:../../os/oslib/src/chmempools.c ****  *                      the following special values are allowed:
 267:../../os/oslib/src/chmempools.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 268:../../os/oslib/src/chmempools.c ****  *                      - @a TIME_INFINITE no timeout.
 269:../../os/oslib/src/chmempools.c ****  *                      .
 270:../../os/oslib/src/chmempools.c ****  * @return              The pointer to the allocated object.
 271:../../os/oslib/src/chmempools.c ****  * @retval NULL         if the operation timed out.
 272:../../os/oslib/src/chmempools.c ****  *
 273:../../os/oslib/src/chmempools.c ****  * @sclass
 274:../../os/oslib/src/chmempools.c ****  */
 275:../../os/oslib/src/chmempools.c **** void *chGuardedPoolAllocTimeoutS(guarded_memory_pool_t *gmp,
 276:../../os/oslib/src/chmempools.c ****                                  sysinterval_t timeout) {
 277:../../os/oslib/src/chmempools.c ****   msg_t msg;
 278:../../os/oslib/src/chmempools.c **** 
 279:../../os/oslib/src/chmempools.c ****   msg = chSemWaitTimeoutS(&gmp->sem, timeout);
 280:../../os/oslib/src/chmempools.c ****   if (msg != MSG_OK) {
 281:../../os/oslib/src/chmempools.c ****     return NULL;
 282:../../os/oslib/src/chmempools.c ****   }
 283:../../os/oslib/src/chmempools.c **** 
 284:../../os/oslib/src/chmempools.c ****   return chPoolAllocI(&gmp->pool);
 285:../../os/oslib/src/chmempools.c **** }
 286:../../os/oslib/src/chmempools.c **** 
 287:../../os/oslib/src/chmempools.c **** /**
 288:../../os/oslib/src/chmempools.c ****  * @brief   Allocates an object from a guarded memory pool.
 289:../../os/oslib/src/chmempools.c ****  * @pre     The guarded memory pool must already be initialized.
 290:../../os/oslib/src/chmempools.c ****  *
 291:../../os/oslib/src/chmempools.c ****  * @param[in] gmp       pointer to a @p guarded_memory_pool_t structure
 292:../../os/oslib/src/chmempools.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 293:../../os/oslib/src/chmempools.c ****  *                      the following special values are allowed:
 294:../../os/oslib/src/chmempools.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 295:../../os/oslib/src/chmempools.c ****  *                      - @a TIME_INFINITE no timeout.
 296:../../os/oslib/src/chmempools.c ****  *                      .
 297:../../os/oslib/src/chmempools.c ****  * @return              The pointer to the allocated object.
 298:../../os/oslib/src/chmempools.c ****  * @retval NULL         if the operation timed out.
 299:../../os/oslib/src/chmempools.c ****  *
 300:../../os/oslib/src/chmempools.c ****  * @api
 301:../../os/oslib/src/chmempools.c ****  */
 302:../../os/oslib/src/chmempools.c **** void *chGuardedPoolAllocTimeout(guarded_memory_pool_t *gmp,
 303:../../os/oslib/src/chmempools.c ****                                 sysinterval_t timeout) {
 304:../../os/oslib/src/chmempools.c ****   void *p;
 305:../../os/oslib/src/chmempools.c **** 
 306:../../os/oslib/src/chmempools.c ****   chSysLock();
 307:../../os/oslib/src/chmempools.c ****   p = chGuardedPoolAllocTimeoutS(gmp, timeout);
 308:../../os/oslib/src/chmempools.c ****   chSysUnlock();
 309:../../os/oslib/src/chmempools.c **** 
 310:../../os/oslib/src/chmempools.c ****   return p;
 311:../../os/oslib/src/chmempools.c **** }
 312:../../os/oslib/src/chmempools.c **** 
 313:../../os/oslib/src/chmempools.c **** /**
 314:../../os/oslib/src/chmempools.c ****  * @brief   Releases an object into a guarded memory pool.
 315:../../os/oslib/src/chmempools.c ****  * @pre     The guarded memory pool must already be initialized.
 316:../../os/oslib/src/chmempools.c ****  * @pre     The freed object must be of the right size for the specified
 317:../../os/oslib/src/chmempools.c ****  *          guarded memory pool.
 318:../../os/oslib/src/chmempools.c ****  * @pre     The added object must be properly aligned.
 319:../../os/oslib/src/chmempools.c ****  *
 320:../../os/oslib/src/chmempools.c ****  * @param[in] gmp       pointer to a @p guarded_memory_pool_t structure
 321:../../os/oslib/src/chmempools.c ****  * @param[in] objp      the pointer to the object to be released
 322:../../os/oslib/src/chmempools.c ****  *
 323:../../os/oslib/src/chmempools.c ****  * @api
 324:../../os/oslib/src/chmempools.c ****  */
 325:../../os/oslib/src/chmempools.c **** void chGuardedPoolFree(guarded_memory_pool_t *gmp, void *objp) {
 635               		.loc 1 325 6 view .LVU198
 636               	.LBB101:
 326:../../os/oslib/src/chmempools.c **** 
 327:../../os/oslib/src/chmempools.c ****   chSysLock();
 637               		.loc 1 327 3 view .LVU199
 638               	.LBB102:
 639               	.LBI102:
 428:../../os/common/ports/AVR/chcore.h **** 
 640               		.loc 3 428 20 view .LVU200
 641               	.LBB103:
 430:../../os/common/ports/AVR/chcore.h **** }
 642               		.loc 3 430 3 view .LVU201
 643               	/* #APP */
 644               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 645 0016 F894      		cli
 646               	 ;  0 "" 2
 647               	/* #NOAPP */
 648               	.LBE103:
 649               	.LBE102:
 650               		.loc 1 327 3 discriminator 1 view .LVU202
 651               		.loc 1 327 14 discriminator 1 view .LVU203
 328:../../os/oslib/src/chmempools.c ****   chGuardedPoolFreeI(gmp, objp);
 652               		.loc 1 328 3 view .LVU204
 653               	.LVL36:
 654               	.LBB104:
 655               	.LBI104:
 299:../../os/oslib/include/chmempools.h **** 
 656               		.loc 2 299 20 view .LVU205
 657               	.LBB105:
 301:../../os/oslib/include/chmempools.h ****   chSemSignalI(&gmp->sem);
 658               		.loc 2 301 3 view .LVU206
 659               	.LBB106:
 660               	.LBI106:
 183:../../os/oslib/src/chmempools.c ****   struct pool_header *php = objp;
 661               		.loc 1 183 6 view .LVU207
 662               	.LBB107:
 184:../../os/oslib/src/chmempools.c **** 
 663               		.loc 1 184 3 view .LVU208
 186:../../os/oslib/src/chmempools.c ****   chDbgCheck((mp != NULL) &&
 664               		.loc 1 186 21 view .LVU209
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 665               		.loc 1 187 3 view .LVU210
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 666               		.loc 1 187 3 view .LVU211
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 667               		.loc 1 187 3 discriminator 9 view .LVU212
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 668               		.loc 1 191 3 view .LVU213
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 669               		.loc 1 191 13 is_stmt 0 view .LVU214
 670 0018 F801      		movw r30,r16
 671 001a 8181      		ldd r24,Z+1
 672 001c 9281      		ldd r25,Z+2
 673 001e 9983      		std Y+1,r25
 674 0020 8883      		st Y,r24
 192:../../os/oslib/src/chmempools.c **** }
 675               		.loc 1 192 3 is_stmt 1 view .LVU215
 192:../../os/oslib/src/chmempools.c **** }
 676               		.loc 1 192 12 is_stmt 0 view .LVU216
 677 0022 D283      		std Z+2,r29
 678 0024 C183      		std Z+1,r28
 679               	.LVL37:
 192:../../os/oslib/src/chmempools.c **** }
 680               		.loc 1 192 12 view .LVU217
 681               	.LBE107:
 682               	.LBE106:
 302:../../os/oslib/include/chmempools.h **** }
 683               		.loc 2 302 3 is_stmt 1 view .LVU218
 684 0026 C801      		movw r24,r16
 685 0028 0E94 0000 		call chSemSignalI
 686               	.LVL38:
 302:../../os/oslib/include/chmempools.h **** }
 687               		.loc 2 302 3 is_stmt 0 view .LVU219
 688               	.LBE105:
 689               	.LBE104:
 329:../../os/oslib/src/chmempools.c ****   chSchRescheduleS();
 690               		.loc 1 329 3 is_stmt 1 view .LVU220
 691 002c 0E94 0000 		call chSchRescheduleS
 692               	.LVL39:
 330:../../os/oslib/src/chmempools.c ****   chSysUnlock();
 693               		.loc 1 330 3 view .LVU221
 694               		.loc 1 330 3 view .LVU222
 695               	.LBB108:
 696               	.LBI108:
 438:../../os/common/ports/AVR/chcore.h **** 
 697               		.loc 3 438 20 view .LVU223
 698               	.LBB109:
 699               		.loc 3 440 3 view .LVU224
 700               	/* #APP */
 701               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 702 0030 7894      		sei
 703               	 ;  0 "" 2
 704               	/* #NOAPP */
 705               	.LBE109:
 706               	.LBE108:
 707               		.loc 1 330 16 discriminator 1 view .LVU225
 708               	.LVL40:
 709               		.loc 1 330 16 is_stmt 0 discriminator 1 view .LVU226
 710               	.LBE101:
 711               	.LBE100:
 712               	.LBE99:
 254:../../os/oslib/src/chmempools.c ****     /*lint -restore*/
 713               		.loc 1 254 5 is_stmt 1 view .LVU227
 254:../../os/oslib/src/chmempools.c ****     /*lint -restore*/
 714               		.loc 1 254 7 is_stmt 0 view .LVU228
 715 0032 F801      		movw r30,r16
 716 0034 8381      		ldd r24,Z+3
 717 0036 9481      		ldd r25,Z+4
 718 0038 C80F      		add r28,r24
 719 003a D91F      		adc r29,r25
 720               	.LVL41:
 256:../../os/oslib/src/chmempools.c ****   }
 721               		.loc 1 256 5 is_stmt 1 view .LVU229
 251:../../os/oslib/src/chmempools.c ****     chGuardedPoolAdd(gmp, p);
 722               		.loc 1 251 12 is_stmt 0 view .LVU230
 723 003c F1E0      		ldi r31, 1
 724 003e EF1A      		sub r14, r31
 725 0040 F108      		sbc r15, __zero_reg__
 726               	.LVL42:
 251:../../os/oslib/src/chmempools.c ****     chGuardedPoolAdd(gmp, p);
 727               		.loc 1 251 12 view .LVU231
 728 0042 01F4      		brne .L27
 729               	.LVL43:
 730               	.L25:
 731               	/* epilogue start */
 258:../../os/oslib/src/chmempools.c **** 
 732               		.loc 1 258 1 view .LVU232
 733 0044 DF91      		pop r29
 734 0046 CF91      		pop r28
 735               	.LVL44:
 258:../../os/oslib/src/chmempools.c **** 
 736               		.loc 1 258 1 view .LVU233
 737 0048 1F91      		pop r17
 738 004a 0F91      		pop r16
 739               	.LVL45:
 258:../../os/oslib/src/chmempools.c **** 
 740               		.loc 1 258 1 view .LVU234
 741 004c FF90      		pop r15
 742 004e EF90      		pop r14
 743 0050 0895      		ret
 744               		.cfi_endproc
 745               	.LFE105:
 747               		.section	.text.chGuardedPoolAllocTimeoutS,"ax",@progbits
 748               	.global	chGuardedPoolAllocTimeoutS
 750               	chGuardedPoolAllocTimeoutS:
 751               	.LVL46:
 752               	.LFB106:
 276:../../os/oslib/src/chmempools.c ****   msg_t msg;
 753               		.loc 1 276 57 is_stmt 1 view -0
 754               		.cfi_startproc
 276:../../os/oslib/src/chmempools.c ****   msg_t msg;
 755               		.loc 1 276 57 is_stmt 0 view .LVU236
 756 0000 CF93      		push r28
 757               	.LCFI8:
 758               		.cfi_def_cfa_offset 3
 759               		.cfi_offset 28, -2
 760 0002 DF93      		push r29
 761               	.LCFI9:
 762               		.cfi_def_cfa_offset 4
 763               		.cfi_offset 29, -3
 764               	/* prologue: function */
 765               	/* frame size = 0 */
 766               	/* stack size = 2 */
 767               	.L__stack_usage = 2
 768 0004 EC01      		movw r28,r24
 277:../../os/oslib/src/chmempools.c **** 
 769               		.loc 1 277 3 is_stmt 1 view .LVU237
 279:../../os/oslib/src/chmempools.c ****   if (msg != MSG_OK) {
 770               		.loc 1 279 3 view .LVU238
 279:../../os/oslib/src/chmempools.c ****   if (msg != MSG_OK) {
 771               		.loc 1 279 9 is_stmt 0 view .LVU239
 772 0006 0E94 0000 		call chSemWaitTimeoutS
 773               	.LVL47:
 280:../../os/oslib/src/chmempools.c ****     return NULL;
 774               		.loc 1 280 3 is_stmt 1 view .LVU240
 280:../../os/oslib/src/chmempools.c ****     return NULL;
 775               		.loc 1 280 6 is_stmt 0 view .LVU241
 776 000a 892B      		or r24,r25
 777 000c 01F4      		brne .L35
 284:../../os/oslib/src/chmempools.c **** }
 778               		.loc 1 284 3 is_stmt 1 view .LVU242
 779               	.LVL48:
 780               	.LBB114:
 781               	.LBI114:
 129:../../os/oslib/src/chmempools.c ****   void *objp;
 782               		.loc 1 129 7 view .LVU243
 783               	.LBB115:
 130:../../os/oslib/src/chmempools.c **** 
 784               		.loc 1 130 3 view .LVU244
 132:../../os/oslib/src/chmempools.c ****   chDbgCheck(mp != NULL);
 785               		.loc 1 132 21 view .LVU245
 133:../../os/oslib/src/chmempools.c **** 
 786               		.loc 1 133 3 view .LVU246
 133:../../os/oslib/src/chmempools.c **** 
 787               		.loc 1 133 3 view .LVU247
 133:../../os/oslib/src/chmempools.c **** 
 788               		.loc 1 133 3 discriminator 5 view .LVU248
 135:../../os/oslib/src/chmempools.c ****   /*lint -save -e9013 [15.7] There is no else because it is not needed.*/
 789               		.loc 1 135 3 view .LVU249
 135:../../os/oslib/src/chmempools.c ****   /*lint -save -e9013 [15.7] There is no else because it is not needed.*/
 790               		.loc 1 135 8 is_stmt 0 view .LVU250
 791 000e 8981      		ldd r24,Y+1
 792 0010 9A81      		ldd r25,Y+2
 793               	.LVL49:
 137:../../os/oslib/src/chmempools.c ****     mp->next = mp->next->next;
 794               		.loc 1 137 3 is_stmt 1 view .LVU251
 137:../../os/oslib/src/chmempools.c ****     mp->next = mp->next->next;
 795               		.loc 1 137 6 is_stmt 0 view .LVU252
 796 0012 0097      		sbiw r24,0
 797 0014 01F0      		breq .L34
 138:../../os/oslib/src/chmempools.c ****   }
 798               		.loc 1 138 5 is_stmt 1 view .LVU253
 138:../../os/oslib/src/chmempools.c ****   }
 799               		.loc 1 138 14 is_stmt 0 view .LVU254
 800 0016 FC01      		movw r30,r24
 801 0018 2081      		ld r18,Z
 802 001a 3181      		ldd r19,Z+1
 803 001c 3A83      		std Y+2,r19
 804 001e 2983      		std Y+1,r18
 805               	.L32:
 806               	/* epilogue start */
 138:../../os/oslib/src/chmempools.c ****   }
 807               		.loc 1 138 14 view .LVU255
 808               	.LBE115:
 809               	.LBE114:
 285:../../os/oslib/src/chmempools.c **** 
 810               		.loc 1 285 1 view .LVU256
 811 0020 DF91      		pop r29
 812 0022 CF91      		pop r28
 813               	.LVL50:
 285:../../os/oslib/src/chmempools.c **** 
 814               		.loc 1 285 1 view .LVU257
 815 0024 0895      		ret
 816               	.LVL51:
 817               	.L34:
 818               	.LBB122:
 819               	.LBB120:
 820               	.LBB116:
 821               	.LBI116:
 129:../../os/oslib/src/chmempools.c ****   void *objp;
 822               		.loc 1 129 7 is_stmt 1 view .LVU258
 823               	.LBB117:
 140:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 824               		.loc 1 140 8 view .LVU259
 140:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 825               		.loc 1 140 14 is_stmt 0 view .LVU260
 826 0026 EF81      		ldd r30,Y+7
 827 0028 F885      		ldd r31,Y+8
 140:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 828               		.loc 1 140 11 view .LVU261
 829 002a 3097      		sbiw r30,0
 830 002c 01F0      		breq .L32
 141:../../os/oslib/src/chmempools.c **** 
 831               		.loc 1 141 5 is_stmt 1 view .LVU262
 141:../../os/oslib/src/chmempools.c **** 
 832               		.loc 1 141 12 is_stmt 0 view .LVU263
 833 002e 6D81      		ldd r22,Y+5
 834 0030 7E81      		ldd r23,Y+6
 835 0032 8B81      		ldd r24,Y+3
 836 0034 9C81      		ldd r25,Y+4
 837               	.LVL52:
 838               	/* epilogue start */
 141:../../os/oslib/src/chmempools.c **** 
 839               		.loc 1 141 12 view .LVU264
 840               	.LBE117:
 841               	.LBE116:
 842               	.LBE120:
 843               	.LBE122:
 285:../../os/oslib/src/chmempools.c **** 
 844               		.loc 1 285 1 view .LVU265
 845 0036 DF91      		pop r29
 846 0038 CF91      		pop r28
 847               	.LVL53:
 848               	.LBB123:
 849               	.LBB121:
 850               	.LBB119:
 851               	.LBB118:
 141:../../os/oslib/src/chmempools.c **** 
 852               		.loc 1 141 12 view .LVU266
 853 003a 0994      		ijmp
 854               	.LVL54:
 855               	.L35:
 141:../../os/oslib/src/chmempools.c **** 
 856               		.loc 1 141 12 view .LVU267
 857               	.LBE118:
 858               	.LBE119:
 859               	.LBE121:
 860               	.LBE123:
 281:../../os/oslib/src/chmempools.c ****   }
 861               		.loc 1 281 12 view .LVU268
 862 003c 80E0      		ldi r24,0
 863 003e 90E0      		ldi r25,0
 864               	.LVL55:
 865               	/* epilogue start */
 285:../../os/oslib/src/chmempools.c **** 
 866               		.loc 1 285 1 view .LVU269
 867 0040 DF91      		pop r29
 868 0042 CF91      		pop r28
 869               	.LVL56:
 285:../../os/oslib/src/chmempools.c **** 
 870               		.loc 1 285 1 view .LVU270
 871 0044 0895      		ret
 872               		.cfi_endproc
 873               	.LFE106:
 875               		.section	.text.chGuardedPoolAllocTimeout,"ax",@progbits
 876               	.global	chGuardedPoolAllocTimeout
 878               	chGuardedPoolAllocTimeout:
 879               	.LVL57:
 880               	.LFB107:
 303:../../os/oslib/src/chmempools.c ****   void *p;
 881               		.loc 1 303 56 is_stmt 1 view -0
 882               		.cfi_startproc
 303:../../os/oslib/src/chmempools.c ****   void *p;
 883               		.loc 1 303 56 is_stmt 0 view .LVU272
 884 0000 0F93      		push r16
 885               	.LCFI10:
 886               		.cfi_def_cfa_offset 3
 887               		.cfi_offset 16, -2
 888 0002 1F93      		push r17
 889               	.LCFI11:
 890               		.cfi_def_cfa_offset 4
 891               		.cfi_offset 17, -3
 892 0004 CF93      		push r28
 893               	.LCFI12:
 894               		.cfi_def_cfa_offset 5
 895               		.cfi_offset 28, -4
 896 0006 DF93      		push r29
 897               	.LCFI13:
 898               		.cfi_def_cfa_offset 6
 899               		.cfi_offset 29, -5
 900               	/* prologue: function */
 901               	/* frame size = 0 */
 902               	/* stack size = 4 */
 903               	.L__stack_usage = 4
 904 0008 EC01      		movw r28,r24
 304:../../os/oslib/src/chmempools.c **** 
 905               		.loc 1 304 3 is_stmt 1 view .LVU273
 306:../../os/oslib/src/chmempools.c ****   p = chGuardedPoolAllocTimeoutS(gmp, timeout);
 906               		.loc 1 306 3 view .LVU274
 907               	.LBB134:
 908               	.LBI134:
 428:../../os/common/ports/AVR/chcore.h **** 
 909               		.loc 3 428 20 view .LVU275
 910               	.LBB135:
 430:../../os/common/ports/AVR/chcore.h **** }
 911               		.loc 3 430 3 view .LVU276
 912               	/* #APP */
 913               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 914 000a F894      		cli
 915               	 ;  0 "" 2
 916               	/* #NOAPP */
 917               	.LBE135:
 918               	.LBE134:
 306:../../os/oslib/src/chmempools.c ****   p = chGuardedPoolAllocTimeoutS(gmp, timeout);
 919               		.loc 1 306 3 discriminator 1 view .LVU277
 306:../../os/oslib/src/chmempools.c ****   p = chGuardedPoolAllocTimeoutS(gmp, timeout);
 920               		.loc 1 306 14 discriminator 1 view .LVU278
 307:../../os/oslib/src/chmempools.c ****   chSysUnlock();
 921               		.loc 1 307 3 view .LVU279
 922               	.LVL58:
 923               	.LBB136:
 924               	.LBI136:
 275:../../os/oslib/src/chmempools.c ****                                  sysinterval_t timeout) {
 925               		.loc 1 275 7 view .LVU280
 926               	.LBB137:
 277:../../os/oslib/src/chmempools.c **** 
 927               		.loc 1 277 3 view .LVU281
 279:../../os/oslib/src/chmempools.c ****   if (msg != MSG_OK) {
 928               		.loc 1 279 3 view .LVU282
 279:../../os/oslib/src/chmempools.c ****   if (msg != MSG_OK) {
 929               		.loc 1 279 9 is_stmt 0 view .LVU283
 930 000c 0E94 0000 		call chSemWaitTimeoutS
 931               	.LVL59:
 280:../../os/oslib/src/chmempools.c ****     return NULL;
 932               		.loc 1 280 3 is_stmt 1 view .LVU284
 281:../../os/oslib/src/chmempools.c ****   }
 933               		.loc 1 281 12 is_stmt 0 view .LVU285
 934 0010 00E0      		ldi r16,0
 935 0012 10E0      		ldi r17,0
 280:../../os/oslib/src/chmempools.c ****     return NULL;
 936               		.loc 1 280 6 view .LVU286
 937 0014 892B      		or r24,r25
 938 0016 01F4      		brne .L40
 284:../../os/oslib/src/chmempools.c **** }
 939               		.loc 1 284 3 is_stmt 1 view .LVU287
 940               	.LVL60:
 941               	.LBB138:
 942               	.LBI138:
 129:../../os/oslib/src/chmempools.c ****   void *objp;
 943               		.loc 1 129 7 view .LVU288
 944               	.LBB139:
 130:../../os/oslib/src/chmempools.c **** 
 945               		.loc 1 130 3 view .LVU289
 132:../../os/oslib/src/chmempools.c ****   chDbgCheck(mp != NULL);
 946               		.loc 1 132 21 view .LVU290
 133:../../os/oslib/src/chmempools.c **** 
 947               		.loc 1 133 3 view .LVU291
 133:../../os/oslib/src/chmempools.c **** 
 948               		.loc 1 133 3 view .LVU292
 133:../../os/oslib/src/chmempools.c **** 
 949               		.loc 1 133 3 discriminator 5 view .LVU293
 135:../../os/oslib/src/chmempools.c ****   /*lint -save -e9013 [15.7] There is no else because it is not needed.*/
 950               		.loc 1 135 3 view .LVU294
 135:../../os/oslib/src/chmempools.c ****   /*lint -save -e9013 [15.7] There is no else because it is not needed.*/
 951               		.loc 1 135 8 is_stmt 0 view .LVU295
 952 0018 0981      		ldd r16,Y+1
 953 001a 1A81      		ldd r17,Y+2
 954               	.LVL61:
 137:../../os/oslib/src/chmempools.c ****     mp->next = mp->next->next;
 955               		.loc 1 137 3 is_stmt 1 view .LVU296
 137:../../os/oslib/src/chmempools.c ****     mp->next = mp->next->next;
 956               		.loc 1 137 6 is_stmt 0 view .LVU297
 957 001c 0115      		cp r16,__zero_reg__
 958 001e 1105      		cpc r17,__zero_reg__
 959 0020 01F0      		breq .L41
 138:../../os/oslib/src/chmempools.c ****   }
 960               		.loc 1 138 5 is_stmt 1 view .LVU298
 138:../../os/oslib/src/chmempools.c ****   }
 961               		.loc 1 138 14 is_stmt 0 view .LVU299
 962 0022 F801      		movw r30,r16
 963 0024 8081      		ld r24,Z
 964 0026 9181      		ldd r25,Z+1
 965               	.LVL62:
 138:../../os/oslib/src/chmempools.c ****   }
 966               		.loc 1 138 14 view .LVU300
 967 0028 9A83      		std Y+2,r25
 968 002a 8983      		std Y+1,r24
 969               	.LVL63:
 970               	.L40:
 138:../../os/oslib/src/chmempools.c ****   }
 971               		.loc 1 138 14 view .LVU301
 972               	.LBE139:
 973               	.LBE138:
 974               	.LBE137:
 975               	.LBE136:
 308:../../os/oslib/src/chmempools.c **** 
 976               		.loc 1 308 3 is_stmt 1 view .LVU302
 308:../../os/oslib/src/chmempools.c **** 
 977               		.loc 1 308 3 view .LVU303
 978               	.LBB145:
 979               	.LBI145:
 438:../../os/common/ports/AVR/chcore.h **** 
 980               		.loc 3 438 20 view .LVU304
 981               	.LBB146:
 982               		.loc 3 440 3 view .LVU305
 983               	/* #APP */
 984               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 985 002c 7894      		sei
 986               	 ;  0 "" 2
 987               	/* #NOAPP */
 988               	.LBE146:
 989               	.LBE145:
 308:../../os/oslib/src/chmempools.c **** 
 990               		.loc 1 308 16 discriminator 1 view .LVU306
 310:../../os/oslib/src/chmempools.c **** }
 991               		.loc 1 310 3 view .LVU307
 311:../../os/oslib/src/chmempools.c **** 
 992               		.loc 1 311 1 is_stmt 0 view .LVU308
 993 002e C801      		movw r24,r16
 994               	/* epilogue start */
 995 0030 DF91      		pop r29
 996 0032 CF91      		pop r28
 997               	.LVL64:
 311:../../os/oslib/src/chmempools.c **** 
 998               		.loc 1 311 1 view .LVU309
 999 0034 1F91      		pop r17
 1000 0036 0F91      		pop r16
 1001               	.LVL65:
 311:../../os/oslib/src/chmempools.c **** 
 1002               		.loc 1 311 1 view .LVU310
 1003 0038 0895      		ret
 1004               	.LVL66:
 1005               	.L41:
 1006               	.LBB148:
 1007               	.LBB144:
 1008               	.LBB143:
 1009               	.LBB142:
 1010               	.LBB140:
 1011               	.LBI140:
 129:../../os/oslib/src/chmempools.c ****   void *objp;
 1012               		.loc 1 129 7 is_stmt 1 view .LVU311
 1013               	.LBB141:
 140:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 1014               		.loc 1 140 8 view .LVU312
 140:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 1015               		.loc 1 140 14 is_stmt 0 view .LVU313
 1016 003a EF81      		ldd r30,Y+7
 1017 003c F885      		ldd r31,Y+8
 140:../../os/oslib/src/chmempools.c ****     objp = mp->provider(mp->object_size, mp->align);
 1018               		.loc 1 140 11 view .LVU314
 1019 003e 3097      		sbiw r30,0
 1020 0040 01F0      		breq .L40
 141:../../os/oslib/src/chmempools.c **** 
 1021               		.loc 1 141 5 is_stmt 1 view .LVU315
 141:../../os/oslib/src/chmempools.c **** 
 1022               		.loc 1 141 12 is_stmt 0 view .LVU316
 1023 0042 6D81      		ldd r22,Y+5
 1024 0044 7E81      		ldd r23,Y+6
 1025 0046 8B81      		ldd r24,Y+3
 1026 0048 9C81      		ldd r25,Y+4
 1027               	.LVL67:
 141:../../os/oslib/src/chmempools.c **** 
 1028               		.loc 1 141 12 view .LVU317
 1029 004a 0995      		icall
 1030               	.LVL68:
 1031 004c 8C01      		movw r16,r24
 1032               	.LVL69:
 143:../../os/oslib/src/chmempools.c ****                 "returned object not aligned");
 1033               		.loc 1 143 5 is_stmt 1 view .LVU318
 143:../../os/oslib/src/chmempools.c ****                 "returned object not aligned");
 1034               		.loc 1 143 5 view .LVU319
 143:../../os/oslib/src/chmempools.c ****                 "returned object not aligned");
 1035               		.loc 1 143 5 is_stmt 0 view .LVU320
 1036               	.LBE141:
 1037               	.LBE140:
 1038               	.LBE142:
 1039               	.LBE143:
 1040               	.LBE144:
 1041               	.LBE148:
 308:../../os/oslib/src/chmempools.c **** 
 1042               		.loc 1 308 3 is_stmt 1 view .LVU321
 308:../../os/oslib/src/chmempools.c **** 
 1043               		.loc 1 308 3 view .LVU322
 1044               	.LBB149:
 438:../../os/common/ports/AVR/chcore.h **** 
 1045               		.loc 3 438 20 view .LVU323
 1046               	.LBB147:
 1047               		.loc 3 440 3 view .LVU324
 1048               	/* #APP */
 1049               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 1050 004e 7894      		sei
 1051               	 ;  0 "" 2
 1052               	/* #NOAPP */
 1053               	.LBE147:
 1054               	.LBE149:
 308:../../os/oslib/src/chmempools.c **** 
 1055               		.loc 1 308 16 discriminator 1 view .LVU325
 310:../../os/oslib/src/chmempools.c **** }
 1056               		.loc 1 310 3 view .LVU326
 311:../../os/oslib/src/chmempools.c **** 
 1057               		.loc 1 311 1 is_stmt 0 view .LVU327
 1058 0050 C801      		movw r24,r16
 1059               	/* epilogue start */
 1060 0052 DF91      		pop r29
 1061 0054 CF91      		pop r28
 1062               	.LVL70:
 311:../../os/oslib/src/chmempools.c **** 
 1063               		.loc 1 311 1 view .LVU328
 1064 0056 1F91      		pop r17
 1065 0058 0F91      		pop r16
 1066               	.LVL71:
 311:../../os/oslib/src/chmempools.c **** 
 1067               		.loc 1 311 1 view .LVU329
 1068 005a 0895      		ret
 1069               		.cfi_endproc
 1070               	.LFE107:
 1072               		.section	.text.chGuardedPoolFree,"ax",@progbits
 1073               	.global	chGuardedPoolFree
 1075               	chGuardedPoolFree:
 1076               	.LVL72:
 1077               	.LFB108:
 325:../../os/oslib/src/chmempools.c **** 
 1078               		.loc 1 325 64 is_stmt 1 view -0
 1079               		.cfi_startproc
 1080               	/* prologue: function */
 1081               	/* frame size = 0 */
 1082               	/* stack size = 0 */
 1083               	.L__stack_usage = 0
 325:../../os/oslib/src/chmempools.c **** 
 1084               		.loc 1 325 64 is_stmt 0 view .LVU331
 1085 0000 FC01      		movw r30,r24
 1086 0002 DB01      		movw r26,r22
 327:../../os/oslib/src/chmempools.c ****   chGuardedPoolFreeI(gmp, objp);
 1087               		.loc 1 327 3 is_stmt 1 view .LVU332
 1088               	.LBB150:
 1089               	.LBI150:
 428:../../os/common/ports/AVR/chcore.h **** 
 1090               		.loc 3 428 20 view .LVU333
 1091               	.LBB151:
 430:../../os/common/ports/AVR/chcore.h **** }
 1092               		.loc 3 430 3 view .LVU334
 1093               	/* #APP */
 1094               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 1095 0004 F894      		cli
 1096               	 ;  0 "" 2
 1097               	/* #NOAPP */
 1098               	.LBE151:
 1099               	.LBE150:
 327:../../os/oslib/src/chmempools.c ****   chGuardedPoolFreeI(gmp, objp);
 1100               		.loc 1 327 3 discriminator 1 view .LVU335
 327:../../os/oslib/src/chmempools.c ****   chGuardedPoolFreeI(gmp, objp);
 1101               		.loc 1 327 14 discriminator 1 view .LVU336
 328:../../os/oslib/src/chmempools.c ****   chSchRescheduleS();
 1102               		.loc 1 328 3 view .LVU337
 1103               	.LVL73:
 1104               	.LBB152:
 1105               	.LBI152:
 299:../../os/oslib/include/chmempools.h **** 
 1106               		.loc 2 299 20 view .LVU338
 1107               	.LBB153:
 301:../../os/oslib/include/chmempools.h ****   chSemSignalI(&gmp->sem);
 1108               		.loc 2 301 3 view .LVU339
 1109               	.LBB154:
 1110               	.LBI154:
 183:../../os/oslib/src/chmempools.c ****   struct pool_header *php = objp;
 1111               		.loc 1 183 6 view .LVU340
 1112               	.LBB155:
 184:../../os/oslib/src/chmempools.c **** 
 1113               		.loc 1 184 3 view .LVU341
 186:../../os/oslib/src/chmempools.c ****   chDbgCheck((mp != NULL) &&
 1114               		.loc 1 186 21 view .LVU342
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 1115               		.loc 1 187 3 view .LVU343
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 1116               		.loc 1 187 3 view .LVU344
 187:../../os/oslib/src/chmempools.c ****              (objp != NULL) &&
 1117               		.loc 1 187 3 discriminator 9 view .LVU345
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 1118               		.loc 1 191 3 view .LVU346
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 1119               		.loc 1 191 13 is_stmt 0 view .LVU347
 1120 0006 8181      		ldd r24,Z+1
 1121 0008 9281      		ldd r25,Z+2
 1122               	.LVL74:
 191:../../os/oslib/src/chmempools.c ****   mp->next = php;
 1123               		.loc 1 191 13 view .LVU348
 1124 000a 8D93      		st X+,r24
 1125 000c 9C93      		st X,r25
 192:../../os/oslib/src/chmempools.c **** }
 1126               		.loc 1 192 3 is_stmt 1 view .LVU349
 192:../../os/oslib/src/chmempools.c **** }
 1127               		.loc 1 192 12 is_stmt 0 view .LVU350
 1128 000e 7283      		std Z+2,r23
 1129 0010 6183      		std Z+1,r22
 1130               	.LVL75:
 192:../../os/oslib/src/chmempools.c **** }
 1131               		.loc 1 192 12 view .LVU351
 1132               	.LBE155:
 1133               	.LBE154:
 302:../../os/oslib/include/chmempools.h **** }
 1134               		.loc 2 302 3 is_stmt 1 view .LVU352
 1135 0012 CF01      		movw r24,r30
 1136 0014 0E94 0000 		call chSemSignalI
 1137               	.LVL76:
 302:../../os/oslib/include/chmempools.h **** }
 1138               		.loc 2 302 3 is_stmt 0 view .LVU353
 1139               	.LBE153:
 1140               	.LBE152:
 329:../../os/oslib/src/chmempools.c ****   chSysUnlock();
 1141               		.loc 1 329 3 is_stmt 1 view .LVU354
 1142 0018 0E94 0000 		call chSchRescheduleS
 1143               	.LVL77:
 1144               		.loc 1 330 3 view .LVU355
 1145               		.loc 1 330 3 view .LVU356
 1146               	.LBB156:
 1147               	.LBI156:
 438:../../os/common/ports/AVR/chcore.h **** 
 1148               		.loc 3 438 20 view .LVU357
 1149               	.LBB157:
 1150               		.loc 3 440 3 view .LVU358
 1151               	/* #APP */
 1152               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 1153 001c 7894      		sei
 1154               	 ;  0 "" 2
 1155               	/* #NOAPP */
 1156               	.LBE157:
 1157               	.LBE156:
 1158               		.loc 1 330 16 discriminator 1 view .LVU359
 1159               	/* epilogue start */
 331:../../os/oslib/src/chmempools.c **** }
 1160               		.loc 1 331 1 is_stmt 0 view .LVU360
 1161 001e 0895      		ret
 1162               		.cfi_endproc
 1163               	.LFE108:
 1165               		.text
 1166               	.Letext0:
 1167               		.file 4 "/usr/lib/gcc/avr/14.1.0/include/stddef.h"
 1168               		.file 5 "/usr/avr/include/stdint.h"
 1169               		.file 6 "../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 1170               		.file 7 "../../os/nil/include/ch.h"
 1171               		.file 8 "../../os/oslib/include/chmemcore.h"
 1172               		.file 9 "../../os/nil/include/chsem.h"
DEFINED SYMBOLS
                            *ABS*:00000000 chmempools.c
     /tmp/cceUVVTy.s:2      *ABS*:0000003e __SP_H__
     /tmp/cceUVVTy.s:3      *ABS*:0000003d __SP_L__
     /tmp/cceUVVTy.s:4      *ABS*:0000003f __SREG__
     /tmp/cceUVVTy.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/cceUVVTy.s:6      *ABS*:00000001 __zero_reg__
     /tmp/cceUVVTy.s:14     .text.chPoolObjectInitAligned:00000000 chPoolObjectInitAligned
     /tmp/cceUVVTy.s:17     .text.chPoolObjectInitAligned:00000000 .Loc.0
     /tmp/cceUVVTy.s:18     .text.chPoolObjectInitAligned:00000000 L0
     /tmp/cceUVVTy.s:23     .text.chPoolObjectInitAligned:00000000 .Loc.1
     /tmp/cceUVVTy.s:25     .text.chPoolObjectInitAligned:00000002 .Loc.2
     /tmp/cceUVVTy.s:26     .text.chPoolObjectInitAligned:00000002 .Loc.3
     /tmp/cceUVVTy.s:27     .text.chPoolObjectInitAligned:00000002 .Loc.4
     /tmp/cceUVVTy.s:28     .text.chPoolObjectInitAligned:00000002 .Loc.5
     /tmp/cceUVVTy.s:29     .text.chPoolObjectInitAligned:00000002 .Loc.6
     /tmp/cceUVVTy.s:32     .text.chPoolObjectInitAligned:00000006 .Loc.7
     /tmp/cceUVVTy.s:33     .text.chPoolObjectInitAligned:00000006 .Loc.8
     /tmp/cceUVVTy.s:36     .text.chPoolObjectInitAligned:0000000a .Loc.9
     /tmp/cceUVVTy.s:37     .text.chPoolObjectInitAligned:0000000a .Loc.10
     /tmp/cceUVVTy.s:40     .text.chPoolObjectInitAligned:0000000e .Loc.11
     /tmp/cceUVVTy.s:41     .text.chPoolObjectInitAligned:0000000e .Loc.12
     /tmp/cceUVVTy.s:45     .text.chPoolObjectInitAligned:00000012 .Loc.13
     /tmp/cceUVVTy.s:47     .text.chPoolObjectInitAligned:00000014 L0
     /tmp/cceUVVTy.s:53     .text.chPoolLoadArray:00000000 chPoolLoadArray
     /tmp/cceUVVTy.s:56     .text.chPoolLoadArray:00000000 .Loc.14
     /tmp/cceUVVTy.s:57     .text.chPoolLoadArray:00000000 L0
     /tmp/cceUVVTy.s:62     .text.chPoolLoadArray:00000000 .Loc.15
     /tmp/cceUVVTy.s:66     .text.chPoolLoadArray:00000006 .Loc.16
     /tmp/cceUVVTy.s:67     .text.chPoolLoadArray:00000006 .Loc.17
     /tmp/cceUVVTy.s:68     .text.chPoolLoadArray:00000006 .Loc.18
     /tmp/cceUVVTy.s:69     .text.chPoolLoadArray:00000006 .Loc.19
     /tmp/cceUVVTy.s:70     .text.chPoolLoadArray:00000006 .Loc.20
     /tmp/cceUVVTy.s:75     .text.chPoolLoadArray:0000000a .Loc.21
     /tmp/cceUVVTy.s:79     .text.chPoolLoadArray:0000000a .Loc.22
     /tmp/cceUVVTy.s:80     .text.chPoolLoadArray:0000000a .Loc.23
     /tmp/cceUVVTy.s:83     .text.chPoolLoadArray:0000000a .Loc.24
     /tmp/cceUVVTy.s:84     .text.chPoolLoadArray:0000000a .Loc.25
     /tmp/cceUVVTy.s:88     .text.chPoolLoadArray:0000000a .Loc.26
     /tmp/cceUVVTy.s:90     .text.chPoolLoadArray:0000000a .Loc.27
     /tmp/cceUVVTy.s:98     .text.chPoolLoadArray:0000000c .Loc.28
     /tmp/cceUVVTy.s:99     .text.chPoolLoadArray:0000000c .Loc.29
     /tmp/cceUVVTy.s:100    .text.chPoolLoadArray:0000000c .Loc.30
     /tmp/cceUVVTy.s:104    .text.chPoolLoadArray:0000000c .Loc.31
     /tmp/cceUVVTy.s:106    .text.chPoolLoadArray:0000000c .Loc.32
     /tmp/cceUVVTy.s:107    .text.chPoolLoadArray:0000000c .Loc.33
     /tmp/cceUVVTy.s:108    .text.chPoolLoadArray:0000000c .Loc.34
     /tmp/cceUVVTy.s:109    .text.chPoolLoadArray:0000000c .Loc.35
     /tmp/cceUVVTy.s:110    .text.chPoolLoadArray:0000000c .Loc.36
     /tmp/cceUVVTy.s:111    .text.chPoolLoadArray:0000000c .Loc.37
     /tmp/cceUVVTy.s:112    .text.chPoolLoadArray:0000000c .Loc.38
     /tmp/cceUVVTy.s:118    .text.chPoolLoadArray:00000016 .Loc.39
     /tmp/cceUVVTy.s:119    .text.chPoolLoadArray:00000016 .Loc.40
     /tmp/cceUVVTy.s:124    .text.chPoolLoadArray:0000001c .Loc.41
     /tmp/cceUVVTy.s:127    .text.chPoolLoadArray:0000001c .Loc.42
     /tmp/cceUVVTy.s:128    .text.chPoolLoadArray:0000001c .Loc.43
     /tmp/cceUVVTy.s:131    .text.chPoolLoadArray:0000001c .Loc.44
     /tmp/cceUVVTy.s:133    .text.chPoolLoadArray:0000001c .Loc.45
     /tmp/cceUVVTy.s:141    .text.chPoolLoadArray:0000001e .Loc.46
     /tmp/cceUVVTy.s:143    .text.chPoolLoadArray:0000001e .Loc.47
     /tmp/cceUVVTy.s:146    .text.chPoolLoadArray:0000001e .Loc.48
     /tmp/cceUVVTy.s:147    .text.chPoolLoadArray:0000001e .Loc.49
     /tmp/cceUVVTy.s:155    .text.chPoolLoadArray:0000002a .Loc.50
     /tmp/cceUVVTy.s:156    .text.chPoolLoadArray:0000002a .Loc.51
     /tmp/cceUVVTy.s:160    .text.chPoolLoadArray:0000002e .Loc.52
     /tmp/cceUVVTy.s:165    .text.chPoolLoadArray:00000030 .Loc.53
     /tmp/cceUVVTy.s:167    .text.chPoolLoadArray:00000032 L0
     /tmp/cceUVVTy.s:173    .text.chPoolAllocI:00000000 chPoolAllocI
     /tmp/cceUVVTy.s:176    .text.chPoolAllocI:00000000 .Loc.54
     /tmp/cceUVVTy.s:177    .text.chPoolAllocI:00000000 L0
     /tmp/cceUVVTy.s:182    .text.chPoolAllocI:00000000 .Loc.55
     /tmp/cceUVVTy.s:184    .text.chPoolAllocI:00000002 .Loc.56
     /tmp/cceUVVTy.s:185    .text.chPoolAllocI:00000002 .Loc.57
     /tmp/cceUVVTy.s:186    .text.chPoolAllocI:00000002 .Loc.58
     /tmp/cceUVVTy.s:187    .text.chPoolAllocI:00000002 .Loc.59
     /tmp/cceUVVTy.s:188    .text.chPoolAllocI:00000002 .Loc.60
     /tmp/cceUVVTy.s:189    .text.chPoolAllocI:00000002 .Loc.61
     /tmp/cceUVVTy.s:190    .text.chPoolAllocI:00000002 .Loc.62
     /tmp/cceUVVTy.s:195    .text.chPoolAllocI:00000008 .Loc.63
     /tmp/cceUVVTy.s:196    .text.chPoolAllocI:00000008 .Loc.64
     /tmp/cceUVVTy.s:199    .text.chPoolAllocI:0000000c .Loc.65
     /tmp/cceUVVTy.s:200    .text.chPoolAllocI:0000000c .Loc.66
     /tmp/cceUVVTy.s:211    .text.chPoolAllocI:00000018 .Loc.67
     /tmp/cceUVVTy.s:213    .text.chPoolAllocI:00000018 .Loc.68
     /tmp/cceUVVTy.s:214    .text.chPoolAllocI:00000018 .Loc.69
     /tmp/cceUVVTy.s:219    .text.chPoolAllocI:00000020 .Loc.70
     /tmp/cceUVVTy.s:222    .text.chPoolAllocI:00000024 .Loc.71
     /tmp/cceUVVTy.s:223    .text.chPoolAllocI:00000024 .Loc.72
     /tmp/cceUVVTy.s:232    .text.chPoolAllocI:00000032 .Loc.73
     /tmp/cceUVVTy.s:237    .text.chPoolAllocI:00000034 .Loc.74
     /tmp/cceUVVTy.s:240    .text.chPoolAllocI:00000034 .Loc.75
     /tmp/cceUVVTy.s:242    .text.chPoolAllocI:00000036 L0
     /tmp/cceUVVTy.s:248    .text.chPoolAlloc:00000000 chPoolAlloc
     /tmp/cceUVVTy.s:251    .text.chPoolAlloc:00000000 .Loc.76
     /tmp/cceUVVTy.s:252    .text.chPoolAlloc:00000000 L0
     /tmp/cceUVVTy.s:253    .text.chPoolAlloc:00000000 .Loc.77
     /tmp/cceUVVTy.s:267    .text.chPoolAlloc:00000006 .Loc.78
     /tmp/cceUVVTy.s:268    .text.chPoolAlloc:00000006 .Loc.79
     /tmp/cceUVVTy.s:271    .text.chPoolAlloc:00000006 .Loc.80
     /tmp/cceUVVTy.s:273    .text.chPoolAlloc:00000006 .Loc.81
     /tmp/cceUVVTy.s:281    .text.chPoolAlloc:00000008 .Loc.82
     /tmp/cceUVVTy.s:282    .text.chPoolAlloc:00000008 .Loc.83
     /tmp/cceUVVTy.s:283    .text.chPoolAlloc:00000008 .Loc.84
     /tmp/cceUVVTy.s:287    .text.chPoolAlloc:00000008 .Loc.85
     /tmp/cceUVVTy.s:289    .text.chPoolAlloc:00000008 .Loc.86
     /tmp/cceUVVTy.s:290    .text.chPoolAlloc:00000008 .Loc.87
     /tmp/cceUVVTy.s:291    .text.chPoolAlloc:00000008 .Loc.88
     /tmp/cceUVVTy.s:292    .text.chPoolAlloc:00000008 .Loc.89
     /tmp/cceUVVTy.s:293    .text.chPoolAlloc:00000008 .Loc.90
     /tmp/cceUVVTy.s:294    .text.chPoolAlloc:00000008 .Loc.91
     /tmp/cceUVVTy.s:295    .text.chPoolAlloc:00000008 .Loc.92
     /tmp/cceUVVTy.s:300    .text.chPoolAlloc:0000000e .Loc.93
     /tmp/cceUVVTy.s:301    .text.chPoolAlloc:0000000e .Loc.94
     /tmp/cceUVVTy.s:304    .text.chPoolAlloc:00000012 .Loc.95
     /tmp/cceUVVTy.s:305    .text.chPoolAlloc:00000012 .Loc.96
     /tmp/cceUVVTy.s:309    .text.chPoolAlloc:00000016 .Loc.97
     /tmp/cceUVVTy.s:313    .text.chPoolAlloc:0000001a .Loc.98
     /tmp/cceUVVTy.s:314    .text.chPoolAlloc:0000001a .Loc.99
     /tmp/cceUVVTy.s:316    .text.chPoolAlloc:0000001a .Loc.100
     /tmp/cceUVVTy.s:319    .text.chPoolAlloc:0000001a .Loc.101
     /tmp/cceUVVTy.s:320    .text.chPoolAlloc:0000001a .Loc.102
     /tmp/cceUVVTy.s:323    .text.chPoolAlloc:0000001a .Loc.103
     /tmp/cceUVVTy.s:325    .text.chPoolAlloc:0000001a .Loc.104
     /tmp/cceUVVTy.s:333    .text.chPoolAlloc:0000001c .Loc.105
     /tmp/cceUVVTy.s:334    .text.chPoolAlloc:0000001c .Loc.106
     /tmp/cceUVVTy.s:335    .text.chPoolAlloc:0000001c .Loc.107
     /tmp/cceUVVTy.s:341    .text.chPoolAlloc:00000022 .Loc.108
     /tmp/cceUVVTy.s:349    .text.chPoolAlloc:00000024 .Loc.109
     /tmp/cceUVVTy.s:351    .text.chPoolAlloc:00000024 .Loc.110
     /tmp/cceUVVTy.s:352    .text.chPoolAlloc:00000024 .Loc.111
     /tmp/cceUVVTy.s:357    .text.chPoolAlloc:0000002c .Loc.112
     /tmp/cceUVVTy.s:360    .text.chPoolAlloc:00000030 .Loc.113
     /tmp/cceUVVTy.s:361    .text.chPoolAlloc:00000030 .Loc.114
     /tmp/cceUVVTy.s:370    .text.chPoolAlloc:0000003e .Loc.115
     /tmp/cceUVVTy.s:373    .text.chPoolAlloc:00000040 .Loc.116
     /tmp/cceUVVTy.s:376    .text.chPoolAlloc:00000042 .Loc.117
     /tmp/cceUVVTy.s:377    .text.chPoolAlloc:00000042 .Loc.118
     /tmp/cceUVVTy.s:378    .text.chPoolAlloc:00000042 .Loc.119
     /tmp/cceUVVTy.s:381    .text.chPoolAlloc:00000042 .Loc.120
     /tmp/cceUVVTy.s:382    .text.chPoolAlloc:00000042 .Loc.121
     /tmp/cceUVVTy.s:383    .text.chPoolAlloc:00000042 .Loc.122
     /tmp/cceUVVTy.s:386    .text.chPoolAlloc:00000042 .Loc.123
     /tmp/cceUVVTy.s:387    .text.chPoolAlloc:00000042 .Loc.124
     /tmp/cceUVVTy.s:389    .text.chPoolAlloc:00000042 .Loc.125
     /tmp/cceUVVTy.s:391    .text.chPoolAlloc:00000042 .Loc.126
     /tmp/cceUVVTy.s:399    .text.chPoolAlloc:00000044 .Loc.127
     /tmp/cceUVVTy.s:400    .text.chPoolAlloc:00000044 .Loc.128
     /tmp/cceUVVTy.s:401    .text.chPoolAlloc:00000044 .Loc.129
     /tmp/cceUVVTy.s:404    .text.chPoolAlloc:00000046 .Loc.130
     /tmp/cceUVVTy.s:408    .text.chPoolAlloc:0000004c L0
     /tmp/cceUVVTy.s:414    .text.chPoolFreeI:00000000 chPoolFreeI
     /tmp/cceUVVTy.s:417    .text.chPoolFreeI:00000000 .Loc.131
     /tmp/cceUVVTy.s:418    .text.chPoolFreeI:00000000 L0
     /tmp/cceUVVTy.s:423    .text.chPoolFreeI:00000000 .Loc.132
     /tmp/cceUVVTy.s:426    .text.chPoolFreeI:00000004 .Loc.133
     /tmp/cceUVVTy.s:428    .text.chPoolFreeI:00000004 .Loc.134
     /tmp/cceUVVTy.s:429    .text.chPoolFreeI:00000004 .Loc.135
     /tmp/cceUVVTy.s:430    .text.chPoolFreeI:00000004 .Loc.136
     /tmp/cceUVVTy.s:431    .text.chPoolFreeI:00000004 .Loc.137
     /tmp/cceUVVTy.s:432    .text.chPoolFreeI:00000004 .Loc.138
     /tmp/cceUVVTy.s:433    .text.chPoolFreeI:00000004 .Loc.139
     /tmp/cceUVVTy.s:437    .text.chPoolFreeI:00000008 .Loc.140
     /tmp/cceUVVTy.s:440    .text.chPoolFreeI:0000000c .Loc.141
     /tmp/cceUVVTy.s:441    .text.chPoolFreeI:0000000c .Loc.142
     /tmp/cceUVVTy.s:445    .text.chPoolFreeI:00000010 .Loc.143
     /tmp/cceUVVTy.s:447    .text.chPoolFreeI:00000012 L0
     /tmp/cceUVVTy.s:453    .text.chPoolFree:00000000 chPoolFree
     /tmp/cceUVVTy.s:456    .text.chPoolFree:00000000 .Loc.144
     /tmp/cceUVVTy.s:457    .text.chPoolFree:00000000 L0
     /tmp/cceUVVTy.s:462    .text.chPoolFree:00000000 .Loc.145
     /tmp/cceUVVTy.s:465    .text.chPoolFree:00000004 .Loc.146
     /tmp/cceUVVTy.s:468    .text.chPoolFree:00000004 .Loc.147
     /tmp/cceUVVTy.s:470    .text.chPoolFree:00000004 .Loc.148
     /tmp/cceUVVTy.s:478    .text.chPoolFree:00000006 .Loc.149
     /tmp/cceUVVTy.s:479    .text.chPoolFree:00000006 .Loc.150
     /tmp/cceUVVTy.s:480    .text.chPoolFree:00000006 .Loc.151
     /tmp/cceUVVTy.s:484    .text.chPoolFree:00000006 .Loc.152
     /tmp/cceUVVTy.s:486    .text.chPoolFree:00000006 .Loc.153
     /tmp/cceUVVTy.s:487    .text.chPoolFree:00000006 .Loc.154
     /tmp/cceUVVTy.s:488    .text.chPoolFree:00000006 .Loc.155
     /tmp/cceUVVTy.s:489    .text.chPoolFree:00000006 .Loc.156
     /tmp/cceUVVTy.s:490    .text.chPoolFree:00000006 .Loc.157
     /tmp/cceUVVTy.s:491    .text.chPoolFree:00000006 .Loc.158
     /tmp/cceUVVTy.s:492    .text.chPoolFree:00000006 .Loc.159
     /tmp/cceUVVTy.s:496    .text.chPoolFree:0000000a .Loc.160
     /tmp/cceUVVTy.s:499    .text.chPoolFree:0000000e .Loc.161
     /tmp/cceUVVTy.s:500    .text.chPoolFree:0000000e .Loc.162
     /tmp/cceUVVTy.s:504    .text.chPoolFree:00000012 .Loc.163
     /tmp/cceUVVTy.s:507    .text.chPoolFree:00000012 .Loc.164
     /tmp/cceUVVTy.s:508    .text.chPoolFree:00000012 .Loc.165
     /tmp/cceUVVTy.s:511    .text.chPoolFree:00000012 .Loc.166
     /tmp/cceUVVTy.s:513    .text.chPoolFree:00000012 .Loc.167
     /tmp/cceUVVTy.s:521    .text.chPoolFree:00000014 .Loc.168
     /tmp/cceUVVTy.s:523    .text.chPoolFree:00000014 .Loc.169
     /tmp/cceUVVTy.s:525    .text.chPoolFree:00000016 L0
     /tmp/cceUVVTy.s:531    .text.chGuardedPoolObjectInitAligned:00000000 chGuardedPoolObjectInitAligned
     /tmp/cceUVVTy.s:534    .text.chGuardedPoolObjectInitAligned:00000000 .Loc.170
     /tmp/cceUVVTy.s:535    .text.chGuardedPoolObjectInitAligned:00000000 L0
     /tmp/cceUVVTy.s:540    .text.chGuardedPoolObjectInitAligned:00000000 .Loc.171
     /tmp/cceUVVTy.s:542    .text.chGuardedPoolObjectInitAligned:00000002 .Loc.172
     /tmp/cceUVVTy.s:546    .text.chGuardedPoolObjectInitAligned:00000002 .Loc.173
     /tmp/cceUVVTy.s:548    .text.chGuardedPoolObjectInitAligned:00000002 .Loc.174
     /tmp/cceUVVTy.s:549    .text.chGuardedPoolObjectInitAligned:00000002 .Loc.175
     /tmp/cceUVVTy.s:550    .text.chGuardedPoolObjectInitAligned:00000002 .Loc.176
     /tmp/cceUVVTy.s:551    .text.chGuardedPoolObjectInitAligned:00000002 .Loc.177
     /tmp/cceUVVTy.s:552    .text.chGuardedPoolObjectInitAligned:00000002 .Loc.178
     /tmp/cceUVVTy.s:555    .text.chGuardedPoolObjectInitAligned:00000006 .Loc.179
     /tmp/cceUVVTy.s:556    .text.chGuardedPoolObjectInitAligned:00000006 .Loc.180
     /tmp/cceUVVTy.s:559    .text.chGuardedPoolObjectInitAligned:0000000a .Loc.181
     /tmp/cceUVVTy.s:560    .text.chGuardedPoolObjectInitAligned:0000000a .Loc.182
     /tmp/cceUVVTy.s:563    .text.chGuardedPoolObjectInitAligned:0000000e .Loc.183
     /tmp/cceUVVTy.s:564    .text.chGuardedPoolObjectInitAligned:0000000e .Loc.184
     /tmp/cceUVVTy.s:568    .text.chGuardedPoolObjectInitAligned:00000012 .Loc.185
     /tmp/cceUVVTy.s:571    .text.chGuardedPoolObjectInitAligned:00000012 .Loc.186
     /tmp/cceUVVTy.s:574    .text.chGuardedPoolObjectInitAligned:00000014 .Loc.187
     /tmp/cceUVVTy.s:576    .text.chGuardedPoolObjectInitAligned:00000016 L0
     /tmp/cceUVVTy.s:582    .text.chGuardedPoolLoadArray:00000000 chGuardedPoolLoadArray
     /tmp/cceUVVTy.s:585    .text.chGuardedPoolLoadArray:00000000 .Loc.188
     /tmp/cceUVVTy.s:586    .text.chGuardedPoolLoadArray:00000000 L0
     /tmp/cceUVVTy.s:587    .text.chGuardedPoolLoadArray:00000000 .Loc.189
     /tmp/cceUVVTy.s:619    .text.chGuardedPoolLoadArray:00000012 .Loc.190
     /tmp/cceUVVTy.s:620    .text.chGuardedPoolLoadArray:00000012 .Loc.191
     /tmp/cceUVVTy.s:621    .text.chGuardedPoolLoadArray:00000012 .Loc.192
     /tmp/cceUVVTy.s:622    .text.chGuardedPoolLoadArray:00000012 .Loc.193
     /tmp/cceUVVTy.s:623    .text.chGuardedPoolLoadArray:00000012 .Loc.194
     /tmp/cceUVVTy.s:628    .text.chGuardedPoolLoadArray:00000016 .Loc.195
     /tmp/cceUVVTy.s:631    .text.chGuardedPoolLoadArray:00000016 .Loc.196
     /tmp/cceUVVTy.s:632    .text.chGuardedPoolLoadArray:00000016 .Loc.197
     /tmp/cceUVVTy.s:635    .text.chGuardedPoolLoadArray:00000016 .Loc.198
     /tmp/cceUVVTy.s:637    .text.chGuardedPoolLoadArray:00000016 .Loc.199
     /tmp/cceUVVTy.s:640    .text.chGuardedPoolLoadArray:00000016 .Loc.200
     /tmp/cceUVVTy.s:642    .text.chGuardedPoolLoadArray:00000016 .Loc.201
     /tmp/cceUVVTy.s:650    .text.chGuardedPoolLoadArray:00000018 .Loc.202
     /tmp/cceUVVTy.s:651    .text.chGuardedPoolLoadArray:00000018 .Loc.203
     /tmp/cceUVVTy.s:652    .text.chGuardedPoolLoadArray:00000018 .Loc.204
     /tmp/cceUVVTy.s:656    .text.chGuardedPoolLoadArray:00000018 .Loc.205
     /tmp/cceUVVTy.s:658    .text.chGuardedPoolLoadArray:00000018 .Loc.206
     /tmp/cceUVVTy.s:661    .text.chGuardedPoolLoadArray:00000018 .Loc.207
     /tmp/cceUVVTy.s:663    .text.chGuardedPoolLoadArray:00000018 .Loc.208
     /tmp/cceUVVTy.s:664    .text.chGuardedPoolLoadArray:00000018 .Loc.209
     /tmp/cceUVVTy.s:665    .text.chGuardedPoolLoadArray:00000018 .Loc.210
     /tmp/cceUVVTy.s:666    .text.chGuardedPoolLoadArray:00000018 .Loc.211
     /tmp/cceUVVTy.s:667    .text.chGuardedPoolLoadArray:00000018 .Loc.212
     /tmp/cceUVVTy.s:668    .text.chGuardedPoolLoadArray:00000018 .Loc.213
     /tmp/cceUVVTy.s:669    .text.chGuardedPoolLoadArray:00000018 .Loc.214
     /tmp/cceUVVTy.s:675    .text.chGuardedPoolLoadArray:00000022 .Loc.215
     /tmp/cceUVVTy.s:676    .text.chGuardedPoolLoadArray:00000022 .Loc.216
     /tmp/cceUVVTy.s:680    .text.chGuardedPoolLoadArray:00000026 .Loc.217
     /tmp/cceUVVTy.s:683    .text.chGuardedPoolLoadArray:00000026 .Loc.218
     /tmp/cceUVVTy.s:687    .text.chGuardedPoolLoadArray:0000002c .Loc.219
     /tmp/cceUVVTy.s:690    .text.chGuardedPoolLoadArray:0000002c .Loc.220
     /tmp/cceUVVTy.s:693    .text.chGuardedPoolLoadArray:00000030 .Loc.221
     /tmp/cceUVVTy.s:694    .text.chGuardedPoolLoadArray:00000030 .Loc.222
     /tmp/cceUVVTy.s:697    .text.chGuardedPoolLoadArray:00000030 .Loc.223
     /tmp/cceUVVTy.s:699    .text.chGuardedPoolLoadArray:00000030 .Loc.224
     /tmp/cceUVVTy.s:707    .text.chGuardedPoolLoadArray:00000032 .Loc.225
     /tmp/cceUVVTy.s:709    .text.chGuardedPoolLoadArray:00000032 .Loc.226
     /tmp/cceUVVTy.s:713    .text.chGuardedPoolLoadArray:00000032 .Loc.227
     /tmp/cceUVVTy.s:714    .text.chGuardedPoolLoadArray:00000032 .Loc.228
     /tmp/cceUVVTy.s:721    .text.chGuardedPoolLoadArray:0000003c .Loc.229
     /tmp/cceUVVTy.s:722    .text.chGuardedPoolLoadArray:0000003c .Loc.230
     /tmp/cceUVVTy.s:727    .text.chGuardedPoolLoadArray:00000042 .Loc.231
     /tmp/cceUVVTy.s:732    .text.chGuardedPoolLoadArray:00000044 .Loc.232
     /tmp/cceUVVTy.s:736    .text.chGuardedPoolLoadArray:00000048 .Loc.233
     /tmp/cceUVVTy.s:740    .text.chGuardedPoolLoadArray:0000004c .Loc.234
     /tmp/cceUVVTy.s:744    .text.chGuardedPoolLoadArray:00000052 L0
     /tmp/cceUVVTy.s:750    .text.chGuardedPoolAllocTimeoutS:00000000 chGuardedPoolAllocTimeoutS
     /tmp/cceUVVTy.s:753    .text.chGuardedPoolAllocTimeoutS:00000000 .Loc.235
     /tmp/cceUVVTy.s:754    .text.chGuardedPoolAllocTimeoutS:00000000 L0
     /tmp/cceUVVTy.s:755    .text.chGuardedPoolAllocTimeoutS:00000000 .Loc.236
     /tmp/cceUVVTy.s:769    .text.chGuardedPoolAllocTimeoutS:00000006 .Loc.237
     /tmp/cceUVVTy.s:770    .text.chGuardedPoolAllocTimeoutS:00000006 .Loc.238
     /tmp/cceUVVTy.s:771    .text.chGuardedPoolAllocTimeoutS:00000006 .Loc.239
     /tmp/cceUVVTy.s:774    .text.chGuardedPoolAllocTimeoutS:0000000a .Loc.240
     /tmp/cceUVVTy.s:775    .text.chGuardedPoolAllocTimeoutS:0000000a .Loc.241
     /tmp/cceUVVTy.s:778    .text.chGuardedPoolAllocTimeoutS:0000000e .Loc.242
     /tmp/cceUVVTy.s:782    .text.chGuardedPoolAllocTimeoutS:0000000e .Loc.243
     /tmp/cceUVVTy.s:784    .text.chGuardedPoolAllocTimeoutS:0000000e .Loc.244
     /tmp/cceUVVTy.s:785    .text.chGuardedPoolAllocTimeoutS:0000000e .Loc.245
     /tmp/cceUVVTy.s:786    .text.chGuardedPoolAllocTimeoutS:0000000e .Loc.246
     /tmp/cceUVVTy.s:787    .text.chGuardedPoolAllocTimeoutS:0000000e .Loc.247
     /tmp/cceUVVTy.s:788    .text.chGuardedPoolAllocTimeoutS:0000000e .Loc.248
     /tmp/cceUVVTy.s:789    .text.chGuardedPoolAllocTimeoutS:0000000e .Loc.249
     /tmp/cceUVVTy.s:790    .text.chGuardedPoolAllocTimeoutS:0000000e .Loc.250
     /tmp/cceUVVTy.s:794    .text.chGuardedPoolAllocTimeoutS:00000012 .Loc.251
     /tmp/cceUVVTy.s:795    .text.chGuardedPoolAllocTimeoutS:00000012 .Loc.252
     /tmp/cceUVVTy.s:798    .text.chGuardedPoolAllocTimeoutS:00000016 .Loc.253
     /tmp/cceUVVTy.s:799    .text.chGuardedPoolAllocTimeoutS:00000016 .Loc.254
     /tmp/cceUVVTy.s:807    .text.chGuardedPoolAllocTimeoutS:00000020 .Loc.255
     /tmp/cceUVVTy.s:810    .text.chGuardedPoolAllocTimeoutS:00000020 .Loc.256
     /tmp/cceUVVTy.s:814    .text.chGuardedPoolAllocTimeoutS:00000024 .Loc.257
     /tmp/cceUVVTy.s:822    .text.chGuardedPoolAllocTimeoutS:00000026 .Loc.258
     /tmp/cceUVVTy.s:824    .text.chGuardedPoolAllocTimeoutS:00000026 .Loc.259
     /tmp/cceUVVTy.s:825    .text.chGuardedPoolAllocTimeoutS:00000026 .Loc.260
     /tmp/cceUVVTy.s:828    .text.chGuardedPoolAllocTimeoutS:0000002a .Loc.261
     /tmp/cceUVVTy.s:831    .text.chGuardedPoolAllocTimeoutS:0000002e .Loc.262
     /tmp/cceUVVTy.s:832    .text.chGuardedPoolAllocTimeoutS:0000002e .Loc.263
     /tmp/cceUVVTy.s:839    .text.chGuardedPoolAllocTimeoutS:00000036 .Loc.264
     /tmp/cceUVVTy.s:844    .text.chGuardedPoolAllocTimeoutS:00000036 .Loc.265
     /tmp/cceUVVTy.s:852    .text.chGuardedPoolAllocTimeoutS:0000003a .Loc.266
     /tmp/cceUVVTy.s:856    .text.chGuardedPoolAllocTimeoutS:0000003c .Loc.267
     /tmp/cceUVVTy.s:861    .text.chGuardedPoolAllocTimeoutS:0000003c .Loc.268
     /tmp/cceUVVTy.s:866    .text.chGuardedPoolAllocTimeoutS:00000040 .Loc.269
     /tmp/cceUVVTy.s:870    .text.chGuardedPoolAllocTimeoutS:00000044 .Loc.270
     /tmp/cceUVVTy.s:872    .text.chGuardedPoolAllocTimeoutS:00000046 L0
     /tmp/cceUVVTy.s:878    .text.chGuardedPoolAllocTimeout:00000000 chGuardedPoolAllocTimeout
     /tmp/cceUVVTy.s:881    .text.chGuardedPoolAllocTimeout:00000000 .Loc.271
     /tmp/cceUVVTy.s:882    .text.chGuardedPoolAllocTimeout:00000000 L0
     /tmp/cceUVVTy.s:883    .text.chGuardedPoolAllocTimeout:00000000 .Loc.272
     /tmp/cceUVVTy.s:905    .text.chGuardedPoolAllocTimeout:0000000a .Loc.273
     /tmp/cceUVVTy.s:906    .text.chGuardedPoolAllocTimeout:0000000a .Loc.274
     /tmp/cceUVVTy.s:909    .text.chGuardedPoolAllocTimeout:0000000a .Loc.275
     /tmp/cceUVVTy.s:911    .text.chGuardedPoolAllocTimeout:0000000a .Loc.276
     /tmp/cceUVVTy.s:919    .text.chGuardedPoolAllocTimeout:0000000c .Loc.277
     /tmp/cceUVVTy.s:920    .text.chGuardedPoolAllocTimeout:0000000c .Loc.278
     /tmp/cceUVVTy.s:921    .text.chGuardedPoolAllocTimeout:0000000c .Loc.279
     /tmp/cceUVVTy.s:925    .text.chGuardedPoolAllocTimeout:0000000c .Loc.280
     /tmp/cceUVVTy.s:927    .text.chGuardedPoolAllocTimeout:0000000c .Loc.281
     /tmp/cceUVVTy.s:928    .text.chGuardedPoolAllocTimeout:0000000c .Loc.282
     /tmp/cceUVVTy.s:929    .text.chGuardedPoolAllocTimeout:0000000c .Loc.283
     /tmp/cceUVVTy.s:932    .text.chGuardedPoolAllocTimeout:00000010 .Loc.284
     /tmp/cceUVVTy.s:933    .text.chGuardedPoolAllocTimeout:00000010 .Loc.285
     /tmp/cceUVVTy.s:936    .text.chGuardedPoolAllocTimeout:00000014 .Loc.286
     /tmp/cceUVVTy.s:939    .text.chGuardedPoolAllocTimeout:00000018 .Loc.287
     /tmp/cceUVVTy.s:943    .text.chGuardedPoolAllocTimeout:00000018 .Loc.288
     /tmp/cceUVVTy.s:945    .text.chGuardedPoolAllocTimeout:00000018 .Loc.289
     /tmp/cceUVVTy.s:946    .text.chGuardedPoolAllocTimeout:00000018 .Loc.290
     /tmp/cceUVVTy.s:947    .text.chGuardedPoolAllocTimeout:00000018 .Loc.291
     /tmp/cceUVVTy.s:948    .text.chGuardedPoolAllocTimeout:00000018 .Loc.292
     /tmp/cceUVVTy.s:949    .text.chGuardedPoolAllocTimeout:00000018 .Loc.293
     /tmp/cceUVVTy.s:950    .text.chGuardedPoolAllocTimeout:00000018 .Loc.294
     /tmp/cceUVVTy.s:951    .text.chGuardedPoolAllocTimeout:00000018 .Loc.295
     /tmp/cceUVVTy.s:955    .text.chGuardedPoolAllocTimeout:0000001c .Loc.296
     /tmp/cceUVVTy.s:956    .text.chGuardedPoolAllocTimeout:0000001c .Loc.297
     /tmp/cceUVVTy.s:960    .text.chGuardedPoolAllocTimeout:00000022 .Loc.298
     /tmp/cceUVVTy.s:961    .text.chGuardedPoolAllocTimeout:00000022 .Loc.299
     /tmp/cceUVVTy.s:966    .text.chGuardedPoolAllocTimeout:00000028 .Loc.300
     /tmp/cceUVVTy.s:971    .text.chGuardedPoolAllocTimeout:0000002c .Loc.301
     /tmp/cceUVVTy.s:976    .text.chGuardedPoolAllocTimeout:0000002c .Loc.302
     /tmp/cceUVVTy.s:977    .text.chGuardedPoolAllocTimeout:0000002c .Loc.303
     /tmp/cceUVVTy.s:980    .text.chGuardedPoolAllocTimeout:0000002c .Loc.304
     /tmp/cceUVVTy.s:982    .text.chGuardedPoolAllocTimeout:0000002c .Loc.305
     /tmp/cceUVVTy.s:990    .text.chGuardedPoolAllocTimeout:0000002e .Loc.306
     /tmp/cceUVVTy.s:991    .text.chGuardedPoolAllocTimeout:0000002e .Loc.307
     /tmp/cceUVVTy.s:992    .text.chGuardedPoolAllocTimeout:0000002e .Loc.308
     /tmp/cceUVVTy.s:998    .text.chGuardedPoolAllocTimeout:00000034 .Loc.309
     /tmp/cceUVVTy.s:1002   .text.chGuardedPoolAllocTimeout:00000038 .Loc.310
     /tmp/cceUVVTy.s:1012   .text.chGuardedPoolAllocTimeout:0000003a .Loc.311
     /tmp/cceUVVTy.s:1014   .text.chGuardedPoolAllocTimeout:0000003a .Loc.312
     /tmp/cceUVVTy.s:1015   .text.chGuardedPoolAllocTimeout:0000003a .Loc.313
     /tmp/cceUVVTy.s:1018   .text.chGuardedPoolAllocTimeout:0000003e .Loc.314
     /tmp/cceUVVTy.s:1021   .text.chGuardedPoolAllocTimeout:00000042 .Loc.315
     /tmp/cceUVVTy.s:1022   .text.chGuardedPoolAllocTimeout:00000042 .Loc.316
     /tmp/cceUVVTy.s:1028   .text.chGuardedPoolAllocTimeout:0000004a .Loc.317
     /tmp/cceUVVTy.s:1033   .text.chGuardedPoolAllocTimeout:0000004e .Loc.318
     /tmp/cceUVVTy.s:1034   .text.chGuardedPoolAllocTimeout:0000004e .Loc.319
     /tmp/cceUVVTy.s:1035   .text.chGuardedPoolAllocTimeout:0000004e .Loc.320
     /tmp/cceUVVTy.s:1042   .text.chGuardedPoolAllocTimeout:0000004e .Loc.321
     /tmp/cceUVVTy.s:1043   .text.chGuardedPoolAllocTimeout:0000004e .Loc.322
     /tmp/cceUVVTy.s:1045   .text.chGuardedPoolAllocTimeout:0000004e .Loc.323
     /tmp/cceUVVTy.s:1047   .text.chGuardedPoolAllocTimeout:0000004e .Loc.324
     /tmp/cceUVVTy.s:1055   .text.chGuardedPoolAllocTimeout:00000050 .Loc.325
     /tmp/cceUVVTy.s:1056   .text.chGuardedPoolAllocTimeout:00000050 .Loc.326
     /tmp/cceUVVTy.s:1057   .text.chGuardedPoolAllocTimeout:00000050 .Loc.327
     /tmp/cceUVVTy.s:1063   .text.chGuardedPoolAllocTimeout:00000056 .Loc.328
     /tmp/cceUVVTy.s:1067   .text.chGuardedPoolAllocTimeout:0000005a .Loc.329
     /tmp/cceUVVTy.s:1069   .text.chGuardedPoolAllocTimeout:0000005c L0
     /tmp/cceUVVTy.s:1075   .text.chGuardedPoolFree:00000000 chGuardedPoolFree
     /tmp/cceUVVTy.s:1078   .text.chGuardedPoolFree:00000000 .Loc.330
     /tmp/cceUVVTy.s:1079   .text.chGuardedPoolFree:00000000 L0
     /tmp/cceUVVTy.s:1084   .text.chGuardedPoolFree:00000000 .Loc.331
     /tmp/cceUVVTy.s:1087   .text.chGuardedPoolFree:00000004 .Loc.332
     /tmp/cceUVVTy.s:1090   .text.chGuardedPoolFree:00000004 .Loc.333
     /tmp/cceUVVTy.s:1092   .text.chGuardedPoolFree:00000004 .Loc.334
     /tmp/cceUVVTy.s:1100   .text.chGuardedPoolFree:00000006 .Loc.335
     /tmp/cceUVVTy.s:1101   .text.chGuardedPoolFree:00000006 .Loc.336
     /tmp/cceUVVTy.s:1102   .text.chGuardedPoolFree:00000006 .Loc.337
     /tmp/cceUVVTy.s:1106   .text.chGuardedPoolFree:00000006 .Loc.338
     /tmp/cceUVVTy.s:1108   .text.chGuardedPoolFree:00000006 .Loc.339
     /tmp/cceUVVTy.s:1111   .text.chGuardedPoolFree:00000006 .Loc.340
     /tmp/cceUVVTy.s:1113   .text.chGuardedPoolFree:00000006 .Loc.341
     /tmp/cceUVVTy.s:1114   .text.chGuardedPoolFree:00000006 .Loc.342
     /tmp/cceUVVTy.s:1115   .text.chGuardedPoolFree:00000006 .Loc.343
     /tmp/cceUVVTy.s:1116   .text.chGuardedPoolFree:00000006 .Loc.344
     /tmp/cceUVVTy.s:1117   .text.chGuardedPoolFree:00000006 .Loc.345
     /tmp/cceUVVTy.s:1118   .text.chGuardedPoolFree:00000006 .Loc.346
     /tmp/cceUVVTy.s:1119   .text.chGuardedPoolFree:00000006 .Loc.347
     /tmp/cceUVVTy.s:1123   .text.chGuardedPoolFree:0000000a .Loc.348
     /tmp/cceUVVTy.s:1126   .text.chGuardedPoolFree:0000000e .Loc.349
     /tmp/cceUVVTy.s:1127   .text.chGuardedPoolFree:0000000e .Loc.350
     /tmp/cceUVVTy.s:1131   .text.chGuardedPoolFree:00000012 .Loc.351
     /tmp/cceUVVTy.s:1134   .text.chGuardedPoolFree:00000012 .Loc.352
     /tmp/cceUVVTy.s:1138   .text.chGuardedPoolFree:00000018 .Loc.353
     /tmp/cceUVVTy.s:1141   .text.chGuardedPoolFree:00000018 .Loc.354
     /tmp/cceUVVTy.s:1144   .text.chGuardedPoolFree:0000001c .Loc.355
     /tmp/cceUVVTy.s:1145   .text.chGuardedPoolFree:0000001c .Loc.356
     /tmp/cceUVVTy.s:1148   .text.chGuardedPoolFree:0000001c .Loc.357
     /tmp/cceUVVTy.s:1150   .text.chGuardedPoolFree:0000001c .Loc.358
     /tmp/cceUVVTy.s:1158   .text.chGuardedPoolFree:0000001e .Loc.359
     /tmp/cceUVVTy.s:1160   .text.chGuardedPoolFree:0000001e .Loc.360
     /tmp/cceUVVTy.s:1162   .text.chGuardedPoolFree:00000020 L0
     /tmp/cceUVVTy.s:50     .text.chPoolObjectInitAligned:00000014 L0
     /tmp/cceUVVTy.s:170    .text.chPoolLoadArray:00000032 L0
     /tmp/cceUVVTy.s:245    .text.chPoolAllocI:00000036 L0
     /tmp/cceUVVTy.s:411    .text.chPoolAlloc:0000004c L0
     /tmp/cceUVVTy.s:450    .text.chPoolFreeI:00000012 L0
     /tmp/cceUVVTy.s:528    .text.chPoolFree:00000016 L0
     /tmp/cceUVVTy.s:579    .text.chGuardedPoolObjectInitAligned:00000016 L0
     /tmp/cceUVVTy.s:747    .text.chGuardedPoolLoadArray:00000052 L0
     /tmp/cceUVVTy.s:875    .text.chGuardedPoolAllocTimeoutS:00000046 L0
     /tmp/cceUVVTy.s:1072   .text.chGuardedPoolAllocTimeout:0000005c L0
     /tmp/cceUVVTy.s:1165   .text.chGuardedPoolFree:00000020 L0
                     .debug_frame:00000000 L0
     /tmp/cceUVVTy.s:163    .text.chPoolLoadArray:00000030 .L3
     /tmp/cceUVVTy.s:74     .text.chPoolLoadArray:0000000a .L5
     /tmp/cceUVVTy.s:207    .text.chPoolAllocI:00000018 .L11
     /tmp/cceUVVTy.s:235    .text.chPoolAllocI:00000034 .L10
     /tmp/cceUVVTy.s:344    .text.chPoolAlloc:00000024 .L17
     /tmp/cceUVVTy.s:312    .text.chPoolAlloc:0000001a .L18
     /tmp/cceUVVTy.s:730    .text.chGuardedPoolLoadArray:00000044 .L25
     /tmp/cceUVVTy.s:627    .text.chGuardedPoolLoadArray:00000016 .L27
     /tmp/cceUVVTy.s:855    .text.chGuardedPoolAllocTimeoutS:0000003c .L35
     /tmp/cceUVVTy.s:817    .text.chGuardedPoolAllocTimeoutS:00000026 .L34
     /tmp/cceUVVTy.s:805    .text.chGuardedPoolAllocTimeoutS:00000020 .L32
     /tmp/cceUVVTy.s:970    .text.chGuardedPoolAllocTimeout:0000002c .L40
     /tmp/cceUVVTy.s:1005   .text.chGuardedPoolAllocTimeout:0000003a .L41
     /tmp/cceUVVTy.s:2748   .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/cceUVVTy.s:5834   .debug_ranges:00000000 .Ldebug_ranges0
     /tmp/cceUVVTy.s:5898   .debug_line:00000000 .Ldebug_line0
     /tmp/cceUVVTy.s:880    .text.chGuardedPoolAllocTimeout:00000000 .LFB107
     /tmp/cceUVVTy.s:1070   .text.chGuardedPoolAllocTimeout:0000005c .LFE107
     /tmp/cceUVVTy.s:3919   .debug_loc:00000000 .LLST50
     /tmp/cceUVVTy.s:3963   .debug_loc:00000053 .LLST51
     /tmp/cceUVVTy.s:3952   .debug_loc:00000049 .LVUS51
     /tmp/cceUVVTy.s:4024   .debug_loc:000000b7 .LLST52
     /tmp/cceUVVTy.s:4019   .debug_loc:000000b3 .LVUS52
     /tmp/cceUVVTy.s:4058   .debug_loc:000000eb .LLST53
     /tmp/cceUVVTy.s:4049   .debug_loc:000000e3 .LVUS53
     /tmp/cceUVVTy.s:908    .text.chGuardedPoolAllocTimeout:0000000a .LBI134
     /tmp/cceUVVTy.s:907    .text.chGuardedPoolAllocTimeout:0000000a .LBB134
     /tmp/cceUVVTy.s:918    .text.chGuardedPoolAllocTimeout:0000000c .LBE134
     /tmp/cceUVVTy.s:924    .text.chGuardedPoolAllocTimeout:0000000c .LBI136
     /tmp/cceUVVTy.s:4104   .debug_loc:00000139 .LLST54
     /tmp/cceUVVTy.s:4097   .debug_loc:00000133 .LVUS54
     /tmp/cceUVVTy.s:4137   .debug_loc:00000173 .LLST55
     /tmp/cceUVVTy.s:4134   .debug_loc:00000171 .LVUS55
     /tmp/cceUVVTy.s:4154   .debug_loc:0000018f .LLST56
     /tmp/cceUVVTy.s:4149   .debug_loc:0000018b .LVUS56
     /tmp/cceUVVTy.s:942    .text.chGuardedPoolAllocTimeout:00000018 .LBI138
     /tmp/cceUVVTy.s:4180   .debug_loc:000001bb .LLST57
     /tmp/cceUVVTy.s:4175   .debug_loc:000001b7 .LVUS57
     /tmp/cceUVVTy.s:4200   .debug_loc:000001e1 .LLST58
     /tmp/cceUVVTy.s:4195   .debug_loc:000001dd .LVUS58
     /tmp/cceUVVTy.s:1011   .text.chGuardedPoolAllocTimeout:0000003a .LBI140
     /tmp/cceUVVTy.s:1010   .text.chGuardedPoolAllocTimeout:0000003a .LBB140
     /tmp/cceUVVTy.s:1037   .text.chGuardedPoolAllocTimeout:0000004e .LBE140
     /tmp/cceUVVTy.s:4224   .debug_loc:0000020b .LLST59
     /tmp/cceUVVTy.s:4221   .debug_loc:00000209 .LVUS59
     /tmp/cceUVVTy.s:4236   .debug_loc:00000222 .LLST60
     /tmp/cceUVVTy.s:4233   .debug_loc:00000220 .LVUS60
     /tmp/cceUVVTy.s:931    .text.chGuardedPoolAllocTimeout:00000010 .LVL59
     /tmp/cceUVVTy.s:979    .text.chGuardedPoolAllocTimeout:0000002c .LBI145
     /tmp/cceUVVTy.s:584    .text.chGuardedPoolLoadArray:00000000 .LFB105
     /tmp/cceUVVTy.s:745    .text.chGuardedPoolLoadArray:00000052 .LFE105
     /tmp/cceUVVTy.s:4248   .debug_loc:0000023a .LLST30
     /tmp/cceUVVTy.s:4300   .debug_loc:000002a3 .LLST31
     /tmp/cceUVVTy.s:4293   .debug_loc:0000029d .LVUS31
     /tmp/cceUVVTy.s:4339   .debug_loc:000002e3 .LLST32
     /tmp/cceUVVTy.s:4334   .debug_loc:000002df .LVUS32
     /tmp/cceUVVTy.s:4367   .debug_loc:00000311 .LLST33
     /tmp/cceUVVTy.s:4360   .debug_loc:0000030b .LVUS33
     /tmp/cceUVVTy.s:630    .text.chGuardedPoolLoadArray:00000016 .LBI99
     /tmp/cceUVVTy.s:629    .text.chGuardedPoolLoadArray:00000016 .LBB99
     /tmp/cceUVVTy.s:712    .text.chGuardedPoolLoadArray:00000032 .LBE99
     /tmp/cceUVVTy.s:4397   .debug_loc:00000348 .LLST34
     /tmp/cceUVVTy.s:4394   .debug_loc:00000346 .LVUS34
     /tmp/cceUVVTy.s:4412   .debug_loc:00000362 .LLST35
     /tmp/cceUVVTy.s:4409   .debug_loc:00000360 .LVUS35
     /tmp/cceUVVTy.s:634    .text.chGuardedPoolLoadArray:00000016 .LBI100
     /tmp/cceUVVTy.s:633    .text.chGuardedPoolLoadArray:00000016 .LBB100
     /tmp/cceUVVTy.s:711    .text.chGuardedPoolLoadArray:00000032 .LBE100
     /tmp/cceUVVTy.s:4427   .debug_loc:0000037c .LLST36
     /tmp/cceUVVTy.s:4424   .debug_loc:0000037a .LVUS36
     /tmp/cceUVVTy.s:4442   .debug_loc:00000396 .LLST37
     /tmp/cceUVVTy.s:4439   .debug_loc:00000394 .LVUS37
     /tmp/cceUVVTy.s:639    .text.chGuardedPoolLoadArray:00000016 .LBI102
     /tmp/cceUVVTy.s:638    .text.chGuardedPoolLoadArray:00000016 .LBB102
     /tmp/cceUVVTy.s:649    .text.chGuardedPoolLoadArray:00000018 .LBE102
     /tmp/cceUVVTy.s:655    .text.chGuardedPoolLoadArray:00000018 .LBI104
     /tmp/cceUVVTy.s:654    .text.chGuardedPoolLoadArray:00000018 .LBB104
     /tmp/cceUVVTy.s:689    .text.chGuardedPoolLoadArray:0000002c .LBE104
     /tmp/cceUVVTy.s:4457   .debug_loc:000003b0 .LLST38
     /tmp/cceUVVTy.s:4454   .debug_loc:000003ae .LVUS38
     /tmp/cceUVVTy.s:4472   .debug_loc:000003ca .LLST39
     /tmp/cceUVVTy.s:4469   .debug_loc:000003c8 .LVUS39
     /tmp/cceUVVTy.s:660    .text.chGuardedPoolLoadArray:00000018 .LBI106
     /tmp/cceUVVTy.s:659    .text.chGuardedPoolLoadArray:00000018 .LBB106
     /tmp/cceUVVTy.s:682    .text.chGuardedPoolLoadArray:00000026 .LBE106
     /tmp/cceUVVTy.s:4487   .debug_loc:000003e4 .LLST40
     /tmp/cceUVVTy.s:4484   .debug_loc:000003e2 .LVUS40
     /tmp/cceUVVTy.s:4499   .debug_loc:000003fb .LLST41
     /tmp/cceUVVTy.s:4496   .debug_loc:000003f9 .LVUS41
     /tmp/cceUVVTy.s:4514   .debug_loc:00000415 .LLST42
     /tmp/cceUVVTy.s:4511   .debug_loc:00000413 .LVUS42
     /tmp/cceUVVTy.s:686    .text.chGuardedPoolLoadArray:0000002c .LVL38
     /tmp/cceUVVTy.s:696    .text.chGuardedPoolLoadArray:00000030 .LBI108
     /tmp/cceUVVTy.s:695    .text.chGuardedPoolLoadArray:00000030 .LBB108
     /tmp/cceUVVTy.s:706    .text.chGuardedPoolLoadArray:00000032 .LBE108
     /tmp/cceUVVTy.s:692    .text.chGuardedPoolLoadArray:00000030 .LVL39
     /tmp/cceUVVTy.s:533    .text.chGuardedPoolObjectInitAligned:00000000 .LFB104
     /tmp/cceUVVTy.s:577    .text.chGuardedPoolObjectInitAligned:00000016 .LFE104
     /tmp/cceUVVTy.s:545    .text.chGuardedPoolObjectInitAligned:00000002 .LBI85
     /tmp/cceUVVTy.s:544    .text.chGuardedPoolObjectInitAligned:00000002 .LBB85
     /tmp/cceUVVTy.s:570    .text.chGuardedPoolObjectInitAligned:00000012 .LBE85
     /tmp/cceUVVTy.s:4529   .debug_loc:0000042f .LLST26
     /tmp/cceUVVTy.s:4526   .debug_loc:0000042d .LVUS26
     /tmp/cceUVVTy.s:4541   .debug_loc:00000446 .LLST27
     /tmp/cceUVVTy.s:4538   .debug_loc:00000444 .LVUS27
     /tmp/cceUVVTy.s:4556   .debug_loc:00000460 .LLST28
     /tmp/cceUVVTy.s:4553   .debug_loc:0000045e .LVUS28
     /tmp/cceUVVTy.s:4571   .debug_loc:0000047a .LLST29
     /tmp/cceUVVTy.s:4568   .debug_loc:00000478 .LVUS29
     /tmp/cceUVVTy.s:250    .text.chPoolAlloc:00000000 .LFB101
     /tmp/cceUVVTy.s:409    .text.chPoolAlloc:0000004c .LFE101
     /tmp/cceUVVTy.s:4579   .debug_loc:0000048e .LLST13
     /tmp/cceUVVTy.s:4611   .debug_loc:000004c7 .LLST14
     /tmp/cceUVVTy.s:4600   .debug_loc:000004bd .LVUS14
     /tmp/cceUVVTy.s:4670   .debug_loc:00000529 .LLST15
     /tmp/cceUVVTy.s:4663   .debug_loc:00000523 .LVUS15
     /tmp/cceUVVTy.s:270    .text.chPoolAlloc:00000006 .LBI67
     /tmp/cceUVVTy.s:269    .text.chPoolAlloc:00000006 .LBB67
     /tmp/cceUVVTy.s:280    .text.chPoolAlloc:00000008 .LBE67
     /tmp/cceUVVTy.s:286    .text.chPoolAlloc:00000008 .LBI69
     /tmp/cceUVVTy.s:4711   .debug_loc:0000056b .LLST16
     /tmp/cceUVVTy.s:4700   .debug_loc:00000561 .LVUS16
     /tmp/cceUVVTy.s:4770   .debug_loc:000005cd .LLST17
     /tmp/cceUVVTy.s:4763   .debug_loc:000005c7 .LVUS17
     /tmp/cceUVVTy.s:348    .text.chPoolAlloc:00000024 .LBI71
     /tmp/cceUVVTy.s:347    .text.chPoolAlloc:00000024 .LBB71
     /tmp/cceUVVTy.s:380    .text.chPoolAlloc:00000042 .LBE71
     /tmp/cceUVVTy.s:4807   .debug_loc:0000060b .LLST18
     /tmp/cceUVVTy.s:4800   .debug_loc:00000605 .LVUS18
     /tmp/cceUVVTy.s:4844   .debug_loc:00000649 .LLST19
     /tmp/cceUVVTy.s:4841   .debug_loc:00000647 .LVUS19
     /tmp/cceUVVTy.s:322    .text.chPoolAlloc:0000001a .LBI74
     /tmp/cceUVVTy.s:55     .text.chPoolLoadArray:00000000 .LFB99
     /tmp/cceUVVTy.s:168    .text.chPoolLoadArray:00000032 .LFE99
     /tmp/cceUVVTy.s:4861   .debug_loc:00000665 .LLST0
     /tmp/cceUVVTy.s:4856   .debug_loc:00000661 .LVUS0
     /tmp/cceUVVTy.s:4887   .debug_loc:00000691 .LLST1
     /tmp/cceUVVTy.s:4882   .debug_loc:0000068d .LVUS1
     /tmp/cceUVVTy.s:4915   .debug_loc:000006bf .LLST2
     /tmp/cceUVVTy.s:4908   .debug_loc:000006b9 .LVUS2
     /tmp/cceUVVTy.s:77     .text.chPoolLoadArray:0000000a .LBI47
     /tmp/cceUVVTy.s:76     .text.chPoolLoadArray:0000000a .LBB47
     /tmp/cceUVVTy.s:145    .text.chPoolLoadArray:0000001e .LBE47
     /tmp/cceUVVTy.s:4945   .debug_loc:000006f6 .LLST3
     /tmp/cceUVVTy.s:4942   .debug_loc:000006f4 .LVUS3
     /tmp/cceUVVTy.s:4960   .debug_loc:00000710 .LLST4
     /tmp/cceUVVTy.s:4957   .debug_loc:0000070e .LVUS4
     /tmp/cceUVVTy.s:82     .text.chPoolLoadArray:0000000a .LBI48
     /tmp/cceUVVTy.s:81     .text.chPoolLoadArray:0000000a .LBB48
     /tmp/cceUVVTy.s:144    .text.chPoolLoadArray:0000001e .LBE48
     /tmp/cceUVVTy.s:4975   .debug_loc:0000072a .LLST5
     /tmp/cceUVVTy.s:4972   .debug_loc:00000728 .LVUS5
     /tmp/cceUVVTy.s:4990   .debug_loc:00000744 .LLST6
     /tmp/cceUVVTy.s:4987   .debug_loc:00000742 .LVUS6
     /tmp/cceUVVTy.s:86     .text.chPoolLoadArray:0000000a .LBI49
     /tmp/cceUVVTy.s:85     .text.chPoolLoadArray:0000000a .LBB49
     /tmp/cceUVVTy.s:97     .text.chPoolLoadArray:0000000c .LBE49
     /tmp/cceUVVTy.s:103    .text.chPoolLoadArray:0000000c .LBI51
     /tmp/cceUVVTy.s:102    .text.chPoolLoadArray:0000000c .LBB51
     /tmp/cceUVVTy.s:126    .text.chPoolLoadArray:0000001c .LBE51
     /tmp/cceUVVTy.s:5005   .debug_loc:0000075e .LLST7
     /tmp/cceUVVTy.s:5002   .debug_loc:0000075c .LVUS7
     /tmp/cceUVVTy.s:5020   .debug_loc:00000778 .LLST8
     /tmp/cceUVVTy.s:5017   .debug_loc:00000776 .LVUS8
     /tmp/cceUVVTy.s:5037   .debug_loc:00000794 .LLST9
     /tmp/cceUVVTy.s:5032   .debug_loc:00000790 .LVUS9
     /tmp/cceUVVTy.s:130    .text.chPoolLoadArray:0000001c .LBI53
     /tmp/cceUVVTy.s:129    .text.chPoolLoadArray:0000001c .LBB53
     /tmp/cceUVVTy.s:140    .text.chPoolLoadArray:0000001e .LBE53
     /tmp/cceUVVTy.s:16     .text.chPoolObjectInitAligned:00000000 .LFB98
     /tmp/cceUVVTy.s:48     .text.chPoolObjectInitAligned:00000014 .LFE98
     /tmp/cceUVVTy.s:175    .text.chPoolAllocI:00000000 .LFB100
     /tmp/cceUVVTy.s:243    .text.chPoolAllocI:00000036 .LFE100
     /tmp/cceUVVTy.s:5063   .debug_loc:000007c0 .LLST10
     /tmp/cceUVVTy.s:5054   .debug_loc:000007b8 .LVUS10
     /tmp/cceUVVTy.s:5113   .debug_loc:00000812 .LLST11
     /tmp/cceUVVTy.s:5106   .debug_loc:0000080c .LVUS11
     /tmp/cceUVVTy.s:210    .text.chPoolAllocI:00000018 .LBI57
     /tmp/cceUVVTy.s:209    .text.chPoolAllocI:00000018 .LBB57
     /tmp/cceUVVTy.s:239    .text.chPoolAllocI:00000034 .LBE57
     /tmp/cceUVVTy.s:5146   .debug_loc:0000084c .LLST12
     /tmp/cceUVVTy.s:5139   .debug_loc:00000846 .LVUS12
     /tmp/cceUVVTy.s:416    .text.chPoolFreeI:00000000 .LFB102
     /tmp/cceUVVTy.s:448    .text.chPoolFreeI:00000012 .LFE102
     /tmp/cceUVVTy.s:5185   .debug_loc:0000088c .LLST20
     /tmp/cceUVVTy.s:5180   .debug_loc:00000888 .LVUS20
     /tmp/cceUVVTy.s:5209   .debug_loc:000008b6 .LLST21
     /tmp/cceUVVTy.s:5206   .debug_loc:000008b4 .LVUS21
     /tmp/cceUVVTy.s:455    .text.chPoolFree:00000000 .LFB103
     /tmp/cceUVVTy.s:526    .text.chPoolFree:00000016 .LFE103
     /tmp/cceUVVTy.s:5226   .debug_loc:000008d2 .LLST22
     /tmp/cceUVVTy.s:5221   .debug_loc:000008ce .LVUS22
     /tmp/cceUVVTy.s:467    .text.chPoolFree:00000004 .LBI79
     /tmp/cceUVVTy.s:466    .text.chPoolFree:00000004 .LBB79
     /tmp/cceUVVTy.s:477    .text.chPoolFree:00000006 .LBE79
     /tmp/cceUVVTy.s:483    .text.chPoolFree:00000006 .LBI81
     /tmp/cceUVVTy.s:482    .text.chPoolFree:00000006 .LBB81
     /tmp/cceUVVTy.s:506    .text.chPoolFree:00000012 .LBE81
     /tmp/cceUVVTy.s:5252   .debug_loc:000008fe .LLST23
     /tmp/cceUVVTy.s:5247   .debug_loc:000008fa .LVUS23
     /tmp/cceUVVTy.s:5276   .debug_loc:00000928 .LLST24
     /tmp/cceUVVTy.s:5273   .debug_loc:00000926 .LVUS24
     /tmp/cceUVVTy.s:5291   .debug_loc:00000942 .LLST25
     /tmp/cceUVVTy.s:5288   .debug_loc:00000940 .LVUS25
     /tmp/cceUVVTy.s:510    .text.chPoolFree:00000012 .LBI83
     /tmp/cceUVVTy.s:509    .text.chPoolFree:00000012 .LBB83
     /tmp/cceUVVTy.s:520    .text.chPoolFree:00000014 .LBE83
     /tmp/cceUVVTy.s:752    .text.chGuardedPoolAllocTimeoutS:00000000 .LFB106
     /tmp/cceUVVTy.s:873    .text.chGuardedPoolAllocTimeoutS:00000046 .LFE106
     /tmp/cceUVVTy.s:5303   .debug_loc:0000095a .LLST43
     /tmp/cceUVVTy.s:5339   .debug_loc:00000997 .LLST44
     /tmp/cceUVVTy.s:5324   .debug_loc:00000989 .LVUS44
     /tmp/cceUVVTy.s:5422   .debug_loc:00000a1f .LLST45
     /tmp/cceUVVTy.s:5417   .debug_loc:00000a1b .LVUS45
     /tmp/cceUVVTy.s:5452   .debug_loc:00000a4f .LLST46
     /tmp/cceUVVTy.s:5447   .debug_loc:00000a4b .LVUS46
     /tmp/cceUVVTy.s:781    .text.chGuardedPoolAllocTimeoutS:0000000e .LBI114
     /tmp/cceUVVTy.s:5482   .debug_loc:00000a7f .LLST47
     /tmp/cceUVVTy.s:5473   .debug_loc:00000a77 .LVUS47
     /tmp/cceUVVTy.s:5534   .debug_loc:00000ad3 .LLST48
     /tmp/cceUVVTy.s:5527   .debug_loc:00000acd .LVUS48
     /tmp/cceUVVTy.s:821    .text.chGuardedPoolAllocTimeoutS:00000026 .LBI116
     /tmp/cceUVVTy.s:5570   .debug_loc:00000b10 .LLST49
     /tmp/cceUVVTy.s:5565   .debug_loc:00000b0c .LVUS49
     /tmp/cceUVVTy.s:773    .text.chGuardedPoolAllocTimeoutS:0000000a .LVL47
     /tmp/cceUVVTy.s:1077   .text.chGuardedPoolFree:00000000 .LFB108
     /tmp/cceUVVTy.s:1163   .text.chGuardedPoolFree:00000020 .LFE108
     /tmp/cceUVVTy.s:5601   .debug_loc:00000b41 .LLST61
     /tmp/cceUVVTy.s:5594   .debug_loc:00000b3b .LVUS61
     /tmp/cceUVVTy.s:5640   .debug_loc:00000b81 .LLST62
     /tmp/cceUVVTy.s:5635   .debug_loc:00000b7d .LVUS62
     /tmp/cceUVVTy.s:1089   .text.chGuardedPoolFree:00000004 .LBI150
     /tmp/cceUVVTy.s:1088   .text.chGuardedPoolFree:00000004 .LBB150
     /tmp/cceUVVTy.s:1099   .text.chGuardedPoolFree:00000006 .LBE150
     /tmp/cceUVVTy.s:1105   .text.chGuardedPoolFree:00000006 .LBI152
     /tmp/cceUVVTy.s:1104   .text.chGuardedPoolFree:00000006 .LBB152
     /tmp/cceUVVTy.s:1140   .text.chGuardedPoolFree:00000018 .LBE152
     /tmp/cceUVVTy.s:5672   .debug_loc:00000bb3 .LLST63
     /tmp/cceUVVTy.s:5665   .debug_loc:00000bad .LVUS63
     /tmp/cceUVVTy.s:5711   .debug_loc:00000bf3 .LLST64
     /tmp/cceUVVTy.s:5706   .debug_loc:00000bef .LVUS64
     /tmp/cceUVVTy.s:1110   .text.chGuardedPoolFree:00000006 .LBI154
     /tmp/cceUVVTy.s:1109   .text.chGuardedPoolFree:00000006 .LBB154
     /tmp/cceUVVTy.s:1133   .text.chGuardedPoolFree:00000012 .LBE154
     /tmp/cceUVVTy.s:5741   .debug_loc:00000c23 .LLST65
     /tmp/cceUVVTy.s:5736   .debug_loc:00000c1f .LVUS65
     /tmp/cceUVVTy.s:5759   .debug_loc:00000c47 .LLST66
     /tmp/cceUVVTy.s:5756   .debug_loc:00000c45 .LVUS66
     /tmp/cceUVVTy.s:5776   .debug_loc:00000c63 .LLST67
     /tmp/cceUVVTy.s:5771   .debug_loc:00000c5f .LVUS67
     /tmp/cceUVVTy.s:1137   .text.chGuardedPoolFree:00000018 .LVL76
     /tmp/cceUVVTy.s:1147   .text.chGuardedPoolFree:0000001c .LBI156
     /tmp/cceUVVTy.s:1146   .text.chGuardedPoolFree:0000001c .LBB156
     /tmp/cceUVVTy.s:1157   .text.chGuardedPoolFree:0000001e .LBE156
     /tmp/cceUVVTy.s:1143   .text.chGuardedPoolFree:0000001c .LVL77
     /tmp/cceUVVTy.s:885    .text.chGuardedPoolAllocTimeout:00000002 .LCFI10
     /tmp/cceUVVTy.s:889    .text.chGuardedPoolAllocTimeout:00000004 .LCFI11
     /tmp/cceUVVTy.s:893    .text.chGuardedPoolAllocTimeout:00000006 .LCFI12
     /tmp/cceUVVTy.s:897    .text.chGuardedPoolAllocTimeout:00000008 .LCFI13
     /tmp/cceUVVTy.s:879    .text.chGuardedPoolAllocTimeout:00000000 .LVL57
     /tmp/cceUVVTy.s:997    .text.chGuardedPoolAllocTimeout:00000034 .LVL64
     /tmp/cceUVVTy.s:1004   .text.chGuardedPoolAllocTimeout:0000003a .LVL66
     /tmp/cceUVVTy.s:1062   .text.chGuardedPoolAllocTimeout:00000056 .LVL70
     /tmp/cceUVVTy.s:969    .text.chGuardedPoolAllocTimeout:0000002c .LVL63
     /tmp/cceUVVTy.s:1001   .text.chGuardedPoolAllocTimeout:00000038 .LVL65
     /tmp/cceUVVTy.s:1032   .text.chGuardedPoolAllocTimeout:0000004e .LVL69
     /tmp/cceUVVTy.s:1066   .text.chGuardedPoolAllocTimeout:0000005a .LVL71
     /tmp/cceUVVTy.s:922    .text.chGuardedPoolAllocTimeout:0000000c .LVL58
     /tmp/cceUVVTy.s:965    .text.chGuardedPoolAllocTimeout:00000028 .LVL62
     /tmp/cceUVVTy.s:1027   .text.chGuardedPoolAllocTimeout:0000004a .LVL67
     /tmp/cceUVVTy.s:940    .text.chGuardedPoolAllocTimeout:00000018 .LVL60
     /tmp/cceUVVTy.s:954    .text.chGuardedPoolAllocTimeout:0000001c .LVL61
     /tmp/cceUVVTy.s:589    .text.chGuardedPoolLoadArray:00000002 .LCFI2
     /tmp/cceUVVTy.s:593    .text.chGuardedPoolLoadArray:00000004 .LCFI3
     /tmp/cceUVVTy.s:597    .text.chGuardedPoolLoadArray:00000006 .LCFI4
     /tmp/cceUVVTy.s:601    .text.chGuardedPoolLoadArray:00000008 .LCFI5
     /tmp/cceUVVTy.s:605    .text.chGuardedPoolLoadArray:0000000a .LCFI6
     /tmp/cceUVVTy.s:609    .text.chGuardedPoolLoadArray:0000000c .LCFI7
     /tmp/cceUVVTy.s:583    .text.chGuardedPoolLoadArray:00000000 .LVL34
     /tmp/cceUVVTy.s:626    .text.chGuardedPoolLoadArray:00000016 .LVL35
     /tmp/cceUVVTy.s:739    .text.chGuardedPoolLoadArray:0000004c .LVL45
     /tmp/cceUVVTy.s:735    .text.chGuardedPoolLoadArray:00000048 .LVL44
     /tmp/cceUVVTy.s:726    .text.chGuardedPoolLoadArray:00000042 .LVL42
     /tmp/cceUVVTy.s:729    .text.chGuardedPoolLoadArray:00000044 .LVL43
     /tmp/cceUVVTy.s:708    .text.chGuardedPoolLoadArray:00000032 .LVL40
     /tmp/cceUVVTy.s:653    .text.chGuardedPoolLoadArray:00000018 .LVL36
     /tmp/cceUVVTy.s:679    .text.chGuardedPoolLoadArray:00000026 .LVL37
     /tmp/cceUVVTy.s:720    .text.chGuardedPoolLoadArray:0000003c .LVL41
     /tmp/cceUVVTy.s:543    .text.chGuardedPoolObjectInitAligned:00000002 .LVL32
     /tmp/cceUVVTy.s:567    .text.chGuardedPoolObjectInitAligned:00000012 .LVL33
     /tmp/cceUVVTy.s:255    .text.chPoolAlloc:00000002 .LCFI0
     /tmp/cceUVVTy.s:259    .text.chPoolAlloc:00000004 .LCFI1
     /tmp/cceUVVTy.s:249    .text.chPoolAlloc:00000000 .LVL14
     /tmp/cceUVVTy.s:308    .text.chPoolAlloc:00000016 .LVL17
     /tmp/cceUVVTy.s:343    .text.chPoolAlloc:00000024 .LVL20
     /tmp/cceUVVTy.s:369    .text.chPoolAlloc:0000003e .LVL21
     /tmp/cceUVVTy.s:372    .text.chPoolAlloc:00000040 .LVL22
     /tmp/cceUVVTy.s:315    .text.chPoolAlloc:0000001a .LVL18
     /tmp/cceUVVTy.s:340    .text.chPoolAlloc:00000022 .LVL19
     /tmp/cceUVVTy.s:375    .text.chPoolAlloc:00000042 .LVL23
     /tmp/cceUVVTy.s:284    .text.chPoolAlloc:00000008 .LVL15
     /tmp/cceUVVTy.s:299    .text.chPoolAlloc:0000000e .LVL16
     /tmp/cceUVVTy.s:54     .text.chPoolLoadArray:00000000 .LVL1
     /tmp/cceUVVTy.s:73     .text.chPoolLoadArray:0000000a .LVL2
     /tmp/cceUVVTy.s:159    .text.chPoolLoadArray:0000002e .LVL7
     /tmp/cceUVVTy.s:162    .text.chPoolLoadArray:00000030 .LVL8
     /tmp/cceUVVTy.s:142    .text.chPoolLoadArray:0000001e .LVL5
     /tmp/cceUVVTy.s:101    .text.chPoolLoadArray:0000000c .LVL3
     /tmp/cceUVVTy.s:123    .text.chPoolLoadArray:0000001c .LVL4
     /tmp/cceUVVTy.s:154    .text.chPoolLoadArray:0000002a .LVL6
     /tmp/cceUVVTy.s:174    .text.chPoolAllocI:00000000 .LVL9
     /tmp/cceUVVTy.s:194    .text.chPoolAllocI:00000008 .LVL10
     /tmp/cceUVVTy.s:234    .text.chPoolAllocI:00000034 .LVL13
     /tmp/cceUVVTy.s:231    .text.chPoolAllocI:00000032 .LVL12
     /tmp/cceUVVTy.s:208    .text.chPoolAllocI:00000018 .LVL11
     /tmp/cceUVVTy.s:415    .text.chPoolFreeI:00000000 .LVL24
     /tmp/cceUVVTy.s:436    .text.chPoolFreeI:00000008 .LVL26
     /tmp/cceUVVTy.s:427    .text.chPoolFreeI:00000004 .LVL25
     /tmp/cceUVVTy.s:454    .text.chPoolFree:00000000 .LVL27
     /tmp/cceUVVTy.s:495    .text.chPoolFree:0000000a .LVL29
     /tmp/cceUVVTy.s:481    .text.chPoolFree:00000006 .LVL28
     /tmp/cceUVVTy.s:503    .text.chPoolFree:00000012 .LVL30
     /tmp/cceUVVTy.s:757    .text.chGuardedPoolAllocTimeoutS:00000002 .LCFI8
     /tmp/cceUVVTy.s:761    .text.chGuardedPoolAllocTimeoutS:00000004 .LCFI9
     /tmp/cceUVVTy.s:751    .text.chGuardedPoolAllocTimeoutS:00000000 .LVL46
     /tmp/cceUVVTy.s:813    .text.chGuardedPoolAllocTimeoutS:00000024 .LVL50
     /tmp/cceUVVTy.s:816    .text.chGuardedPoolAllocTimeoutS:00000026 .LVL51
     /tmp/cceUVVTy.s:847    .text.chGuardedPoolAllocTimeoutS:0000003a .LVL53
     /tmp/cceUVVTy.s:854    .text.chGuardedPoolAllocTimeoutS:0000003c .LVL54
     /tmp/cceUVVTy.s:869    .text.chGuardedPoolAllocTimeoutS:00000044 .LVL56
     /tmp/cceUVVTy.s:793    .text.chGuardedPoolAllocTimeoutS:00000012 .LVL49
     /tmp/cceUVVTy.s:864    .text.chGuardedPoolAllocTimeoutS:00000040 .LVL55
     /tmp/cceUVVTy.s:779    .text.chGuardedPoolAllocTimeoutS:0000000e .LVL48
     /tmp/cceUVVTy.s:837    .text.chGuardedPoolAllocTimeoutS:00000036 .LVL52
     /tmp/cceUVVTy.s:1076   .text.chGuardedPoolFree:00000000 .LVL72
     /tmp/cceUVVTy.s:1122   .text.chGuardedPoolFree:0000000a .LVL74
     /tmp/cceUVVTy.s:1103   .text.chGuardedPoolFree:00000006 .LVL73
     /tmp/cceUVVTy.s:1130   .text.chGuardedPoolFree:00000012 .LVL75
     /tmp/cceUVVTy.s:1174   .debug_info:00000000 .Ldebug_info0
     /tmp/cceUVVTy.s:285    .text.chPoolAlloc:00000008 .LBB69
     /tmp/cceUVVTy.s:318    .text.chPoolAlloc:0000001a .LBE69
     /tmp/cceUVVTy.s:345    .text.chPoolAlloc:00000024 .LBB77
     /tmp/cceUVVTy.s:385    .text.chPoolAlloc:00000042 .LBE77
     /tmp/cceUVVTy.s:321    .text.chPoolAlloc:0000001a .LBB74
     /tmp/cceUVVTy.s:332    .text.chPoolAlloc:0000001c .LBE74
     /tmp/cceUVVTy.s:388    .text.chPoolAlloc:00000042 .LBB78
     /tmp/cceUVVTy.s:398    .text.chPoolAlloc:00000044 .LBE78
     /tmp/cceUVVTy.s:780    .text.chGuardedPoolAllocTimeoutS:0000000e .LBB114
     /tmp/cceUVVTy.s:809    .text.chGuardedPoolAllocTimeoutS:00000020 .LBE114
     /tmp/cceUVVTy.s:818    .text.chGuardedPoolAllocTimeoutS:00000026 .LBB122
     /tmp/cceUVVTy.s:843    .text.chGuardedPoolAllocTimeoutS:00000036 .LBE122
     /tmp/cceUVVTy.s:848    .text.chGuardedPoolAllocTimeoutS:0000003a .LBB123
     /tmp/cceUVVTy.s:860    .text.chGuardedPoolAllocTimeoutS:0000003c .LBE123
     /tmp/cceUVVTy.s:923    .text.chGuardedPoolAllocTimeout:0000000c .LBB136
     /tmp/cceUVVTy.s:975    .text.chGuardedPoolAllocTimeout:0000002c .LBE136
     /tmp/cceUVVTy.s:1006   .text.chGuardedPoolAllocTimeout:0000003a .LBB148
     /tmp/cceUVVTy.s:1041   .text.chGuardedPoolAllocTimeout:0000004e .LBE148
     /tmp/cceUVVTy.s:941    .text.chGuardedPoolAllocTimeout:00000018 .LBB138
     /tmp/cceUVVTy.s:973    .text.chGuardedPoolAllocTimeout:0000002c .LBE138
     /tmp/cceUVVTy.s:1008   .text.chGuardedPoolAllocTimeout:0000003a .LBB143
     /tmp/cceUVVTy.s:1039   .text.chGuardedPoolAllocTimeout:0000004e .LBE143
     /tmp/cceUVVTy.s:978    .text.chGuardedPoolAllocTimeout:0000002c .LBB145
     /tmp/cceUVVTy.s:989    .text.chGuardedPoolAllocTimeout:0000002e .LBE145
     /tmp/cceUVVTy.s:1044   .text.chGuardedPoolAllocTimeout:0000004e .LBB149
     /tmp/cceUVVTy.s:1054   .text.chGuardedPoolAllocTimeout:00000050 .LBE149

UNDEFINED SYMBOLS
chSemSignalI
chSchRescheduleS
chSemWaitTimeoutS
