   1               		.file	"hal_pal.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 1 "../../os/hal/src/hal_pal.c"
  11               		.section	.text.palReadBus,"ax",@progbits
  12               	.global	palReadBus
  14               	palReadBus:
  15               	.LVL0:
  16               	.LFB146:
   1:../../os/hal/src/hal_pal.c **** /*
   2:../../os/hal/src/hal_pal.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../os/hal/src/hal_pal.c **** 
   4:../../os/hal/src/hal_pal.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../os/hal/src/hal_pal.c ****     you may not use this file except in compliance with the License.
   6:../../os/hal/src/hal_pal.c ****     You may obtain a copy of the License at
   7:../../os/hal/src/hal_pal.c **** 
   8:../../os/hal/src/hal_pal.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../os/hal/src/hal_pal.c **** 
  10:../../os/hal/src/hal_pal.c ****     Unless required by applicable law or agreed to in writing, software
  11:../../os/hal/src/hal_pal.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../os/hal/src/hal_pal.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../os/hal/src/hal_pal.c ****     See the License for the specific language governing permissions and
  14:../../os/hal/src/hal_pal.c ****     limitations under the License.
  15:../../os/hal/src/hal_pal.c **** */
  16:../../os/hal/src/hal_pal.c **** 
  17:../../os/hal/src/hal_pal.c **** /**
  18:../../os/hal/src/hal_pal.c ****  * @file    hal_pal.c
  19:../../os/hal/src/hal_pal.c ****  * @brief   I/O Ports Abstraction Layer code.
  20:../../os/hal/src/hal_pal.c ****  *
  21:../../os/hal/src/hal_pal.c ****  * @addtogroup PAL
  22:../../os/hal/src/hal_pal.c ****  * @{
  23:../../os/hal/src/hal_pal.c ****  */
  24:../../os/hal/src/hal_pal.c **** 
  25:../../os/hal/src/hal_pal.c **** #include "hal.h"
  26:../../os/hal/src/hal_pal.c **** 
  27:../../os/hal/src/hal_pal.c **** #if (HAL_USE_PAL == TRUE) || defined(__DOXYGEN__)
  28:../../os/hal/src/hal_pal.c **** 
  29:../../os/hal/src/hal_pal.c **** /*===========================================================================*/
  30:../../os/hal/src/hal_pal.c **** /* Driver local definitions.                                                 */
  31:../../os/hal/src/hal_pal.c **** /*===========================================================================*/
  32:../../os/hal/src/hal_pal.c **** 
  33:../../os/hal/src/hal_pal.c **** /*===========================================================================*/
  34:../../os/hal/src/hal_pal.c **** /* Driver exported variables.                                                */
  35:../../os/hal/src/hal_pal.c **** /*===========================================================================*/
  36:../../os/hal/src/hal_pal.c **** 
  37:../../os/hal/src/hal_pal.c **** /*===========================================================================*/
  38:../../os/hal/src/hal_pal.c **** /* Driver local variables and types.                                         */
  39:../../os/hal/src/hal_pal.c **** /*===========================================================================*/
  40:../../os/hal/src/hal_pal.c **** 
  41:../../os/hal/src/hal_pal.c **** /*===========================================================================*/
  42:../../os/hal/src/hal_pal.c **** /* Driver local functions.                                                   */
  43:../../os/hal/src/hal_pal.c **** /*===========================================================================*/
  44:../../os/hal/src/hal_pal.c **** 
  45:../../os/hal/src/hal_pal.c **** /*===========================================================================*/
  46:../../os/hal/src/hal_pal.c **** /* Driver exported functions.                                                */
  47:../../os/hal/src/hal_pal.c **** /*===========================================================================*/
  48:../../os/hal/src/hal_pal.c **** 
  49:../../os/hal/src/hal_pal.c **** /**
  50:../../os/hal/src/hal_pal.c ****  * @brief   Read from an I/O bus.
  51:../../os/hal/src/hal_pal.c ****  * @note    The operation is not guaranteed to be atomic on all the
  52:../../os/hal/src/hal_pal.c ****  *          architectures, for atomicity and/or portability reasons you may
  53:../../os/hal/src/hal_pal.c ****  *          need to enclose port I/O operations between @p osalSysLock() and
  54:../../os/hal/src/hal_pal.c ****  *          @p osalSysUnlock().
  55:../../os/hal/src/hal_pal.c ****  * @note    The function internally uses the @p palReadGroup() macro. The use
  56:../../os/hal/src/hal_pal.c ****  *          of this function is preferred when you value code size, readability
  57:../../os/hal/src/hal_pal.c ****  *          and error checking over speed.
  58:../../os/hal/src/hal_pal.c ****  * @note    The function can be called from any context.
  59:../../os/hal/src/hal_pal.c ****  *
  60:../../os/hal/src/hal_pal.c ****  * @param[in] bus       the I/O bus, pointer to a @p IOBus structure
  61:../../os/hal/src/hal_pal.c ****  * @return              The bus logical states.
  62:../../os/hal/src/hal_pal.c ****  *
  63:../../os/hal/src/hal_pal.c ****  * @special
  64:../../os/hal/src/hal_pal.c ****  */
  65:../../os/hal/src/hal_pal.c **** ioportmask_t palReadBus(const IOBus *bus) {
  17               		.loc 1 65 43 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 65 43 is_stmt 0 view .LVU1
  24 0000 FC01      		movw r30,r24
  66:../../os/hal/src/hal_pal.c **** 
  67:../../os/hal/src/hal_pal.c ****   osalDbgCheck((bus != NULL) && (bus->offset < PAL_IOPORTS_WIDTH));
  25               		.loc 1 67 3 is_stmt 1 view .LVU2
  26               		.loc 1 67 3 view .LVU3
  27               		.loc 1 67 3 discriminator 7 view .LVU4
  68:../../os/hal/src/hal_pal.c **** 
  69:../../os/hal/src/hal_pal.c ****   return palReadGroup(bus->portid, bus->mask, bus->offset);
  28               		.loc 1 69 3 view .LVU5
  29               		.loc 1 69 10 is_stmt 0 view .LVU6
  30 0002 A081      		ld r26,Z
  31 0004 B181      		ldd r27,Z+1
  32 0006 8C91      		ld r24,X
  33               	.LVL1:
  34               		.loc 1 69 10 view .LVU7
  35 0008 90E0      		ldi r25,0
  36 000a 2381      		ldd r18,Z+3
  37 000c 00C0      		rjmp 2f
  38               		1:
  39 000e 9595      		asr r25
  40 0010 8795      		ror r24
  41               		2:
  42 0012 2A95      		dec r18
  43 0014 02F4      		brpl 1b
  44 0016 9281      		ldd r25,Z+2
  70:../../os/hal/src/hal_pal.c **** }
  45               		.loc 1 70 1 view .LVU8
  46 0018 8923      		and r24,r25
  47               	/* epilogue start */
  48 001a 0895      		ret
  49               		.cfi_endproc
  50               	.LFE146:
  52               		.section	.text.palWriteBus,"ax",@progbits
  53               	.global	palWriteBus
  55               	palWriteBus:
  56               	.LVL2:
  57               	.LFB147:
  71:../../os/hal/src/hal_pal.c **** 
  72:../../os/hal/src/hal_pal.c **** /**
  73:../../os/hal/src/hal_pal.c ****  * @brief   Write to an I/O bus.
  74:../../os/hal/src/hal_pal.c ****  * @note    The operation is not guaranteed to be atomic on all the
  75:../../os/hal/src/hal_pal.c ****  *          architectures, for atomicity and/or portability reasons you may
  76:../../os/hal/src/hal_pal.c ****  *          need to enclose port I/O operations between @p osalSysLock() and
  77:../../os/hal/src/hal_pal.c ****  *          @p osalSysUnlock().
  78:../../os/hal/src/hal_pal.c ****  * @note    The default implementation is non atomic and not necessarily
  79:../../os/hal/src/hal_pal.c ****  *          optimal. Low level drivers may  optimize the function by using
  80:../../os/hal/src/hal_pal.c ****  *          specific hardware or coding.
  81:../../os/hal/src/hal_pal.c ****  * @note    The function can be called from any context.
  82:../../os/hal/src/hal_pal.c ****  *
  83:../../os/hal/src/hal_pal.c ****  * @param[in] bus       the I/O bus, pointer to a @p IOBus structure
  84:../../os/hal/src/hal_pal.c ****  * @param[in] bits      the bits to be written on the I/O bus. Values exceeding
  85:../../os/hal/src/hal_pal.c ****  *                      the bus width are masked so most significant bits are
  86:../../os/hal/src/hal_pal.c ****  *                      lost.
  87:../../os/hal/src/hal_pal.c ****  *
  88:../../os/hal/src/hal_pal.c ****  * @special
  89:../../os/hal/src/hal_pal.c ****  */
  90:../../os/hal/src/hal_pal.c **** void palWriteBus(const IOBus *bus, ioportmask_t bits) {
  58               		.loc 1 90 55 is_stmt 1 view -0
  59               		.cfi_startproc
  60               	/* prologue: function */
  61               	/* frame size = 0 */
  62               	/* stack size = 0 */
  63               	.L__stack_usage = 0
  64               		.loc 1 90 55 is_stmt 0 view .LVU10
  65 0000 FC01      		movw r30,r24
  91:../../os/hal/src/hal_pal.c **** 
  92:../../os/hal/src/hal_pal.c ****   osalDbgCheck((bus != NULL) && (bus->offset < PAL_IOPORTS_WIDTH));
  66               		.loc 1 92 3 is_stmt 1 view .LVU11
  67               		.loc 1 92 3 view .LVU12
  68               		.loc 1 92 3 discriminator 7 view .LVU13
  93:../../os/hal/src/hal_pal.c **** 
  94:../../os/hal/src/hal_pal.c ****   palWriteGroup(bus->portid, bus->mask, bus->offset, bits);
  69               		.loc 1 94 3 view .LVU14
  70 0002 A081      		ld r26,Z
  71 0004 B181      		ldd r27,Z+1
  72 0006 1296      		adiw r26,2
  73 0008 4C91      		ld r20,X
  74 000a 1297      		sbiw r26,2
  75 000c 2281      		ldd r18,Z+2
  76 000e 3381      		ldd r19,Z+3
  77 0010 822F      		mov r24,r18
  78               	.LVL3:
  79               		.loc 1 94 3 is_stmt 0 view .LVU15
  80 0012 032E      		mov r0,r19
  81 0014 00C0      		rjmp 2f
  82               		1:
  83 0016 880F      		lsl r24
  84               		2:
  85 0018 0A94      		dec r0
  86 001a 02F4      		brpl 1b
  87 001c 8095      		com r24
  88 001e 8423      		and r24,r20
  89 0020 2623      		and r18,r22
  90 0022 622F      		mov r22,r18
  91               	.LVL4:
  92               		.loc 1 94 3 view .LVU16
  93 0024 00C0      		rjmp 2f
  94               		1:
  95 0026 660F      		lsl r22
  96               		2:
  97 0028 3A95      		dec r19
  98 002a 02F4      		brpl 1b
  99 002c 862B      		or r24,r22
 100 002e 1296      		adiw r26,2
 101 0030 8C93      		st X,r24
 102               	/* epilogue start */
  95:../../os/hal/src/hal_pal.c **** }
 103               		.loc 1 95 1 view .LVU17
 104 0032 0895      		ret
 105               		.cfi_endproc
 106               	.LFE147:
 108               		.section	.text.palSetBusMode,"ax",@progbits
 109               	.global	palSetBusMode
 111               	palSetBusMode:
 112               	.LVL5:
 113               	.LFB148:
  96:../../os/hal/src/hal_pal.c **** 
  97:../../os/hal/src/hal_pal.c **** /**
  98:../../os/hal/src/hal_pal.c ****  * @brief   Programs a bus with the specified mode.
  99:../../os/hal/src/hal_pal.c ****  * @note    The operation is not guaranteed to be atomic on all the
 100:../../os/hal/src/hal_pal.c ****  *          architectures, for atomicity and/or portability reasons you may
 101:../../os/hal/src/hal_pal.c ****  *          need to enclose port I/O operations between @p osalSysLock() and
 102:../../os/hal/src/hal_pal.c ****  *          @p osalSysUnlock().
 103:../../os/hal/src/hal_pal.c ****  * @note    The default implementation is non atomic and not necessarily
 104:../../os/hal/src/hal_pal.c ****  *          optimal. Low level drivers may  optimize the function by using
 105:../../os/hal/src/hal_pal.c ****  *          specific hardware or coding.
 106:../../os/hal/src/hal_pal.c ****  * @note    The function can be called from any context.
 107:../../os/hal/src/hal_pal.c ****  *
 108:../../os/hal/src/hal_pal.c ****  * @param[in] bus       the I/O bus, pointer to a @p IOBus structure
 109:../../os/hal/src/hal_pal.c ****  * @param[in] mode      the mode
 110:../../os/hal/src/hal_pal.c ****  *
 111:../../os/hal/src/hal_pal.c ****  * @special
 112:../../os/hal/src/hal_pal.c ****  */
 113:../../os/hal/src/hal_pal.c **** void palSetBusMode(const IOBus *bus, iomode_t mode) {
 114               		.loc 1 113 53 is_stmt 1 view -0
 115               		.cfi_startproc
 116               	/* prologue: function */
 117               	/* frame size = 0 */
 118               	/* stack size = 0 */
 119               	.L__stack_usage = 0
 120               		.loc 1 113 53 is_stmt 0 view .LVU19
 121 0000 FC01      		movw r30,r24
 122 0002 462F      		mov r20,r22
 114:../../os/hal/src/hal_pal.c **** 
 115:../../os/hal/src/hal_pal.c ****   osalDbgCheck((bus != NULL) && (bus->offset < PAL_IOPORTS_WIDTH));
 123               		.loc 1 115 3 is_stmt 1 view .LVU20
 124               		.loc 1 115 3 view .LVU21
 125               		.loc 1 115 3 discriminator 7 view .LVU22
 116:../../os/hal/src/hal_pal.c **** 
 117:../../os/hal/src/hal_pal.c ****   palSetGroupMode(bus->portid, bus->mask, bus->offset, mode);
 126               		.loc 1 117 3 view .LVU23
 127 0004 8281      		ldd r24,Z+2
 128               	.LVL6:
 129               		.loc 1 117 3 is_stmt 0 view .LVU24
 130 0006 682F      		mov r22,r24
 131               	.LVL7:
 132               		.loc 1 117 3 view .LVU25
 133 0008 8381      		ldd r24,Z+3
 134 000a 00C0      		rjmp 2f
 135               		1:
 136 000c 660F      		lsl r22
 137               		2:
 138 000e 8A95      		dec r24
 139 0010 02F4      		brpl 1b
 140 0012 8081      		ld r24,Z
 141 0014 9181      		ldd r25,Z+1
 142 0016 0C94 0000 		jmp _pal_lld_setgroupmode
 143               	.LVL8:
 144               		.loc 1 117 3 view .LVU26
 145               		.cfi_endproc
 146               	.LFE148:
 148               		.text
 149               	.Letext0:
 150               		.file 2 "/usr/avr/include/stdint.h"
 151               		.file 3 "../../os/hal/ports/AVR/MEGA/LLD/GPIOv1/hal_pal_lld.h"
 152               		.file 4 "../../os/hal/include/hal_pal.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hal_pal.c
     /tmp/ccsp5hQN.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccsp5hQN.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccsp5hQN.s:4      *ABS*:0000003f __SREG__
     /tmp/ccsp5hQN.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccsp5hQN.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccsp5hQN.s:14     .text.palReadBus:00000000 palReadBus
     /tmp/ccsp5hQN.s:17     .text.palReadBus:00000000 .Loc.0
     /tmp/ccsp5hQN.s:18     .text.palReadBus:00000000 L0
     /tmp/ccsp5hQN.s:23     .text.palReadBus:00000000 .Loc.1
     /tmp/ccsp5hQN.s:25     .text.palReadBus:00000002 .Loc.2
     /tmp/ccsp5hQN.s:26     .text.palReadBus:00000002 .Loc.3
     /tmp/ccsp5hQN.s:27     .text.palReadBus:00000002 .Loc.4
     /tmp/ccsp5hQN.s:28     .text.palReadBus:00000002 .Loc.5
     /tmp/ccsp5hQN.s:29     .text.palReadBus:00000002 .Loc.6
     /tmp/ccsp5hQN.s:34     .text.palReadBus:00000008 .Loc.7
     /tmp/ccsp5hQN.s:45     .text.palReadBus:00000018 .Loc.8
     /tmp/ccsp5hQN.s:49     .text.palReadBus:0000001c L0
     /tmp/ccsp5hQN.s:55     .text.palWriteBus:00000000 palWriteBus
     /tmp/ccsp5hQN.s:58     .text.palWriteBus:00000000 .Loc.9
     /tmp/ccsp5hQN.s:59     .text.palWriteBus:00000000 L0
     /tmp/ccsp5hQN.s:64     .text.palWriteBus:00000000 .Loc.10
     /tmp/ccsp5hQN.s:66     .text.palWriteBus:00000002 .Loc.11
     /tmp/ccsp5hQN.s:67     .text.palWriteBus:00000002 .Loc.12
     /tmp/ccsp5hQN.s:68     .text.palWriteBus:00000002 .Loc.13
     /tmp/ccsp5hQN.s:69     .text.palWriteBus:00000002 .Loc.14
     /tmp/ccsp5hQN.s:79     .text.palWriteBus:00000012 .Loc.15
     /tmp/ccsp5hQN.s:92     .text.palWriteBus:00000024 .Loc.16
     /tmp/ccsp5hQN.s:103    .text.palWriteBus:00000032 .Loc.17
     /tmp/ccsp5hQN.s:105    .text.palWriteBus:00000034 L0
     /tmp/ccsp5hQN.s:111    .text.palSetBusMode:00000000 palSetBusMode
     /tmp/ccsp5hQN.s:114    .text.palSetBusMode:00000000 .Loc.18
     /tmp/ccsp5hQN.s:115    .text.palSetBusMode:00000000 L0
     /tmp/ccsp5hQN.s:120    .text.palSetBusMode:00000000 .Loc.19
     /tmp/ccsp5hQN.s:123    .text.palSetBusMode:00000004 .Loc.20
     /tmp/ccsp5hQN.s:124    .text.palSetBusMode:00000004 .Loc.21
     /tmp/ccsp5hQN.s:125    .text.palSetBusMode:00000004 .Loc.22
     /tmp/ccsp5hQN.s:126    .text.palSetBusMode:00000004 .Loc.23
     /tmp/ccsp5hQN.s:129    .text.palSetBusMode:00000006 .Loc.24
     /tmp/ccsp5hQN.s:132    .text.palSetBusMode:00000008 .Loc.25
     /tmp/ccsp5hQN.s:144    .text.palSetBusMode:0000001a .Loc.26
     /tmp/ccsp5hQN.s:145    .text.palSetBusMode:0000001a L0
     /tmp/ccsp5hQN.s:52     .text.palReadBus:0000001c L0
     /tmp/ccsp5hQN.s:108    .text.palWriteBus:00000034 L0
     /tmp/ccsp5hQN.s:148    .text.palSetBusMode:0000001a L0
                     .debug_frame:00000000 L0
     /tmp/ccsp5hQN.s:41     .text.palReadBus:00000012 .L21
     /tmp/ccsp5hQN.s:38     .text.palReadBus:0000000e .L11
     /tmp/ccsp5hQN.s:84     .text.palWriteBus:00000018 .L22
     /tmp/ccsp5hQN.s:82     .text.palWriteBus:00000016 .L12
     /tmp/ccsp5hQN.s:96     .text.palWriteBus:00000028 .L23
     /tmp/ccsp5hQN.s:94     .text.palWriteBus:00000026 .L13
     /tmp/ccsp5hQN.s:137    .text.palSetBusMode:0000000e .L24
     /tmp/ccsp5hQN.s:135    .text.palSetBusMode:0000000c .L14
     /tmp/ccsp5hQN.s:500    .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/ccsp5hQN.s:971    .debug_ranges:00000000 .Ldebug_ranges0
     /tmp/ccsp5hQN.s:981    .debug_line:00000000 .Ldebug_line0
     /tmp/ccsp5hQN.s:113    .text.palSetBusMode:00000000 .LFB148
     /tmp/ccsp5hQN.s:146    .text.palSetBusMode:0000001a .LFE148
     /tmp/ccsp5hQN.s:812    .debug_loc:00000006 .LLST3
     /tmp/ccsp5hQN.s:805    .debug_loc:00000000 .LVUS3
     /tmp/ccsp5hQN.s:853    .debug_loc:00000048 .LLST4
     /tmp/ccsp5hQN.s:846    .debug_loc:00000042 .LVUS4
     /tmp/ccsp5hQN.s:143    .text.palSetBusMode:0000001a .LVL8
     /tmp/ccsp5hQN.s:57     .text.palWriteBus:00000000 .LFB147
     /tmp/ccsp5hQN.s:106    .text.palWriteBus:00000034 .LFE147
     /tmp/ccsp5hQN.s:882    .debug_loc:0000007e .LLST1
     /tmp/ccsp5hQN.s:877    .debug_loc:0000007a .LVUS1
     /tmp/ccsp5hQN.s:908    .debug_loc:000000aa .LLST2
     /tmp/ccsp5hQN.s:903    .debug_loc:000000a6 .LVUS2
     /tmp/ccsp5hQN.s:16     .text.palReadBus:00000000 .LFB146
     /tmp/ccsp5hQN.s:50     .text.palReadBus:0000001c .LFE146
     /tmp/ccsp5hQN.s:933    .debug_loc:000000d5 .LLST0
     /tmp/ccsp5hQN.s:928    .debug_loc:000000d1 .LVUS0
     /tmp/ccsp5hQN.s:112    .text.palSetBusMode:00000000 .LVL5
     /tmp/ccsp5hQN.s:128    .text.palSetBusMode:00000006 .LVL6
     /tmp/ccsp5hQN.s:131    .text.palSetBusMode:00000008 .LVL7
     /tmp/ccsp5hQN.s:56     .text.palWriteBus:00000000 .LVL2
     /tmp/ccsp5hQN.s:78     .text.palWriteBus:00000012 .LVL3
     /tmp/ccsp5hQN.s:91     .text.palWriteBus:00000024 .LVL4
     /tmp/ccsp5hQN.s:15     .text.palReadBus:00000000 .LVL0
     /tmp/ccsp5hQN.s:33     .text.palReadBus:00000008 .LVL1
     /tmp/ccsp5hQN.s:154    .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
_pal_lld_setgroupmode
