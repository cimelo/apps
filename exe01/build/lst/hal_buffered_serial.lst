   1               		.file	"hal_buffered_serial.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 1 "../../os/hal/src/hal_buffered_serial.c"
  11               		.section	.text.bsIncomingDataI,"ax",@progbits
  12               	.global	bsIncomingDataI
  14               	bsIncomingDataI:
  15               	.LVL0:
  16               	.LFB146:
   1:../../os/hal/src/hal_buffered_serial.c **** /*
   2:../../os/hal/src/hal_buffered_serial.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../os/hal/src/hal_buffered_serial.c **** 
   4:../../os/hal/src/hal_buffered_serial.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../os/hal/src/hal_buffered_serial.c ****     you may not use this file except in compliance with the License.
   6:../../os/hal/src/hal_buffered_serial.c ****     You may obtain a copy of the License at
   7:../../os/hal/src/hal_buffered_serial.c **** 
   8:../../os/hal/src/hal_buffered_serial.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../os/hal/src/hal_buffered_serial.c **** 
  10:../../os/hal/src/hal_buffered_serial.c ****     Unless required by applicable law or agreed to in writing, software
  11:../../os/hal/src/hal_buffered_serial.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../os/hal/src/hal_buffered_serial.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../os/hal/src/hal_buffered_serial.c ****     See the License for the specific language governing permissions and
  14:../../os/hal/src/hal_buffered_serial.c ****     limitations under the License.
  15:../../os/hal/src/hal_buffered_serial.c **** */
  16:../../os/hal/src/hal_buffered_serial.c **** 
  17:../../os/hal/src/hal_buffered_serial.c **** /**
  18:../../os/hal/src/hal_buffered_serial.c ****  * @file    hal_buffered_serial.h
  19:../../os/hal/src/hal_buffered_serial.c ****  * @brief   Buffered Serial Driver code.
  20:../../os/hal/src/hal_buffered_serial.c ****  *
  21:../../os/hal/src/hal_buffered_serial.c ****  * @addtogroup HAL_BUFFERED_SERIAL
  22:../../os/hal/src/hal_buffered_serial.c ****  * @{
  23:../../os/hal/src/hal_buffered_serial.c ****  */
  24:../../os/hal/src/hal_buffered_serial.c **** 
  25:../../os/hal/src/hal_buffered_serial.c **** #include "hal.h"
  26:../../os/hal/src/hal_buffered_serial.c **** 
  27:../../os/hal/src/hal_buffered_serial.c **** /*===========================================================================*/
  28:../../os/hal/src/hal_buffered_serial.c **** /* Driver local definitions.                                                 */
  29:../../os/hal/src/hal_buffered_serial.c **** /*===========================================================================*/
  30:../../os/hal/src/hal_buffered_serial.c **** 
  31:../../os/hal/src/hal_buffered_serial.c **** /*===========================================================================*/
  32:../../os/hal/src/hal_buffered_serial.c **** /* Driver exported variables.                                                */
  33:../../os/hal/src/hal_buffered_serial.c **** /*===========================================================================*/
  34:../../os/hal/src/hal_buffered_serial.c **** 
  35:../../os/hal/src/hal_buffered_serial.c **** /*===========================================================================*/
  36:../../os/hal/src/hal_buffered_serial.c **** /* Driver local variables and types.                                         */
  37:../../os/hal/src/hal_buffered_serial.c **** /*===========================================================================*/
  38:../../os/hal/src/hal_buffered_serial.c **** 
  39:../../os/hal/src/hal_buffered_serial.c **** /*===========================================================================*/
  40:../../os/hal/src/hal_buffered_serial.c **** /* Driver local functions.                                                   */
  41:../../os/hal/src/hal_buffered_serial.c **** /*===========================================================================*/
  42:../../os/hal/src/hal_buffered_serial.c **** 
  43:../../os/hal/src/hal_buffered_serial.c **** /*===========================================================================*/
  44:../../os/hal/src/hal_buffered_serial.c **** /* Driver exported functions.                                                */
  45:../../os/hal/src/hal_buffered_serial.c **** /*===========================================================================*/
  46:../../os/hal/src/hal_buffered_serial.c **** 
  47:../../os/hal/src/hal_buffered_serial.c **** /**
  48:../../os/hal/src/hal_buffered_serial.c ****  * @brief   Handles incoming data.
  49:../../os/hal/src/hal_buffered_serial.c ****  * @details This function must be called from the input interrupt service
  50:../../os/hal/src/hal_buffered_serial.c ****  *          routine in order to enqueue incoming data and generate the
  51:../../os/hal/src/hal_buffered_serial.c ****  *          related events.
  52:../../os/hal/src/hal_buffered_serial.c ****  * @note    The incoming data event is only generated when the input queue
  53:../../os/hal/src/hal_buffered_serial.c ****  *          becomes non-empty.
  54:../../os/hal/src/hal_buffered_serial.c ****  *
  55:../../os/hal/src/hal_buffered_serial.c ****  * @param[in] bsp       pointer to a @p BufferedSerial structure
  56:../../os/hal/src/hal_buffered_serial.c ****  * @param[in] b         the byte to be written in the driver's Input Queue
  57:../../os/hal/src/hal_buffered_serial.c ****  *
  58:../../os/hal/src/hal_buffered_serial.c ****  * @iclass
  59:../../os/hal/src/hal_buffered_serial.c ****  */
  60:../../os/hal/src/hal_buffered_serial.c **** void bsIncomingDataI(BufferedSerial *bsp, uint8_t b) {
  17               		.loc 1 60 54 view -0
  18               		.cfi_startproc
  19               		.loc 1 60 54 is_stmt 0 view .LVU1
  20 0000 1F93      		push r17
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 17, -2
  24 0002 CF93      		push r28
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 28, -3
  28 0004 DF93      		push r29
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 29, -4
  32               	/* prologue: function */
  33               	/* frame size = 0 */
  34               	/* stack size = 3 */
  35               	.L__stack_usage = 3
  36 0006 EC01      		movw r28,r24
  37 0008 162F      		mov r17,r22
  61:../../os/hal/src/hal_buffered_serial.c **** 
  62:../../os/hal/src/hal_buffered_serial.c ****   osalDbgCheckClassI();
  38               		.loc 1 62 23 is_stmt 1 view .LVU2
  63:../../os/hal/src/hal_buffered_serial.c ****   osalDbgCheck(bsp != NULL);
  39               		.loc 1 63 3 view .LVU3
  40               		.loc 1 63 3 view .LVU4
  41               		.loc 1 63 3 discriminator 5 view .LVU5
  64:../../os/hal/src/hal_buffered_serial.c **** 
  65:../../os/hal/src/hal_buffered_serial.c ****   if (iqIsEmptyI(&bsp->iqueue)) {
  42               		.loc 1 65 3 view .LVU6
  43               		.loc 1 65 7 is_stmt 0 view .LVU7
  44 000a 8E81      		ldd r24,Y+6
  45 000c 9F81      		ldd r25,Y+7
  46               	.LVL1:
  47               		.loc 1 65 6 view .LVU8
  48 000e 892B      		or r24,r25
  49 0010 01F0      		breq .L5
  66:../../os/hal/src/hal_buffered_serial.c ****     chnAddFlagsI(bsp, CHN_INPUT_AVAILABLE);
  50               		.loc 1 66 43 is_stmt 1 discriminator 1 view .LVU9
  67:../../os/hal/src/hal_buffered_serial.c ****   }
  68:../../os/hal/src/hal_buffered_serial.c **** 
  69:../../os/hal/src/hal_buffered_serial.c ****   if (iqPutI(&bsp->iqueue, b) < MSG_OK) {
  51               		.loc 1 69 3 view .LVU10
  52               		.loc 1 69 7 is_stmt 0 view .LVU11
  53 0012 612F      		mov r22,r17
  54               	.LVL2:
  55               		.loc 1 69 7 view .LVU12
  56 0014 CE01      		movw r24,r28
  57 0016 0596      		adiw r24,5
  58 0018 0E94 0000 		call iqPutI
  59               	.LVL3:
  60               		.loc 1 69 6 discriminator 1 view .LVU13
  61 001c 97FD      		sbrc r25,7
  62 001e 00C0      		rjmp .L6
  63               	.L1:
  64               	/* epilogue start */
  70:../../os/hal/src/hal_buffered_serial.c ****     chnAddFlagsI(bsp, SD_QUEUE_FULL_ERROR);
  71:../../os/hal/src/hal_buffered_serial.c ****   }
  72:../../os/hal/src/hal_buffered_serial.c **** }
  65               		.loc 1 72 1 view .LVU14
  66 0020 DF91      		pop r29
  67 0022 CF91      		pop r28
  68               	.LVL4:
  69               		.loc 1 72 1 view .LVU15
  70 0024 1F91      		pop r17
  71               	.LVL5:
  72               		.loc 1 72 1 view .LVU16
  73 0026 0895      		ret
  74               	.LVL6:
  75               	.L5:
  66:../../os/hal/src/hal_buffered_serial.c ****   }
  76               		.loc 1 66 5 is_stmt 1 view .LVU17
  77               	.LBB8:
  78               	.LBI8:
  79               		.file 2 "../../os/hal/osal/rt-nil/osal.h"
   1:../../os/hal/osal/rt-nil/osal.h **** /*
   2:../../os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../os/hal/osal/rt-nil/osal.h **** 
   4:../../os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:../../os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:../../os/hal/osal/rt-nil/osal.h **** 
   8:../../os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../os/hal/osal/rt-nil/osal.h **** 
  10:../../os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:../../os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:../../os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:../../os/hal/osal/rt-nil/osal.h **** */
  16:../../os/hal/osal/rt-nil/osal.h **** 
  17:../../os/hal/osal/rt-nil/osal.h **** /**
  18:../../os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:../../os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:../../os/hal/osal/rt-nil/osal.h ****  *
  21:../../os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:../../os/hal/osal/rt-nil/osal.h ****  * @{
  23:../../os/hal/osal/rt-nil/osal.h ****  */
  24:../../os/hal/osal/rt-nil/osal.h **** 
  25:../../os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:../../os/hal/osal/rt-nil/osal.h **** 
  28:../../os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:../../os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:../../os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:../../os/hal/osal/rt-nil/osal.h **** 
  32:../../os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:../../os/hal/osal/rt-nil/osal.h **** 
  34:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:../../os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:../../os/hal/osal/rt-nil/osal.h **** 
  38:../../os/hal/osal/rt-nil/osal.h **** /**
  39:../../os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:../../os/hal/osal/rt-nil/osal.h ****  * @{
  41:../../os/hal/osal/rt-nil/osal.h ****  */
  42:../../os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:../../os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:../../os/hal/osal/rt-nil/osal.h **** #endif
  45:../../os/hal/osal/rt-nil/osal.h **** 
  46:../../os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:../../os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:../../os/hal/osal/rt-nil/osal.h **** #endif
  49:../../os/hal/osal/rt-nil/osal.h **** 
  50:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:../../os/hal/osal/rt-nil/osal.h **** /** @} */
  53:../../os/hal/osal/rt-nil/osal.h **** 
  54:../../os/hal/osal/rt-nil/osal.h **** #if 0
  55:../../os/hal/osal/rt-nil/osal.h **** /**
  56:../../os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:../../os/hal/osal/rt-nil/osal.h ****  * @{
  58:../../os/hal/osal/rt-nil/osal.h ****  */
  59:../../os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:../../os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:../../os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:../../os/hal/osal/rt-nil/osal.h **** /** @} */
  63:../../os/hal/osal/rt-nil/osal.h **** #endif
  64:../../os/hal/osal/rt-nil/osal.h **** 
  65:../../os/hal/osal/rt-nil/osal.h **** #if 0
  66:../../os/hal/osal/rt-nil/osal.h **** /**
  67:../../os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:../../os/hal/osal/rt-nil/osal.h ****  * @{
  69:../../os/hal/osal/rt-nil/osal.h ****  */
  70:../../os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:../../os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:../../os/hal/osal/rt-nil/osal.h **** /** @} */
  73:../../os/hal/osal/rt-nil/osal.h **** #endif
  74:../../os/hal/osal/rt-nil/osal.h **** 
  75:../../os/hal/osal/rt-nil/osal.h **** /**
  76:../../os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:../../os/hal/osal/rt-nil/osal.h ****  * @{
  78:../../os/hal/osal/rt-nil/osal.h ****  */
  79:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:../../os/hal/osal/rt-nil/osal.h **** /** @} */
  83:../../os/hal/osal/rt-nil/osal.h **** 
  84:../../os/hal/osal/rt-nil/osal.h **** /**
  85:../../os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:../../os/hal/osal/rt-nil/osal.h ****  * @{
  87:../../os/hal/osal/rt-nil/osal.h ****  */
  88:../../os/hal/osal/rt-nil/osal.h **** /**
  89:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:../../os/hal/osal/rt-nil/osal.h ****  */
  91:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:../../os/hal/osal/rt-nil/osal.h **** 
  93:../../os/hal/osal/rt-nil/osal.h **** /**
  94:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:../../os/hal/osal/rt-nil/osal.h ****  */
  96:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:../../os/hal/osal/rt-nil/osal.h **** 
  98:../../os/hal/osal/rt-nil/osal.h **** /**
  99:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:../../os/hal/osal/rt-nil/osal.h ****  */
 101:../../os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:../../os/hal/osal/rt-nil/osal.h **** #else
 104:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:../../os/hal/osal/rt-nil/osal.h **** #endif
 106:../../os/hal/osal/rt-nil/osal.h **** /** @} */
 107:../../os/hal/osal/rt-nil/osal.h **** 
 108:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:../../os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:../../os/hal/osal/rt-nil/osal.h **** 
 112:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:../../os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:../../os/hal/osal/rt-nil/osal.h **** 
 116:../../os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:../../os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:../../os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:../../os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:../../os/hal/osal/rt-nil/osal.h **** #endif
 121:../../os/hal/osal/rt-nil/osal.h **** 
 122:../../os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32) &&             \
 123:../../os/hal/osal/rt-nil/osal.h ****     (OSAL_ST_RESOLUTION != 64)
 124:../../os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16, 32 or 64"
 125:../../os/hal/osal/rt-nil/osal.h **** #endif
 126:../../os/hal/osal/rt-nil/osal.h **** 
 127:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 128:../../os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 129:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 130:../../os/hal/osal/rt-nil/osal.h **** 
 131:../../os/hal/osal/rt-nil/osal.h **** #if 0
 132:../../os/hal/osal/rt-nil/osal.h **** /**
 133:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 134:../../os/hal/osal/rt-nil/osal.h ****  */
 135:../../os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 136:../../os/hal/osal/rt-nil/osal.h **** #endif
 137:../../os/hal/osal/rt-nil/osal.h **** 
 138:../../os/hal/osal/rt-nil/osal.h **** #if 0
 139:../../os/hal/osal/rt-nil/osal.h **** /**
 140:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 141:../../os/hal/osal/rt-nil/osal.h ****  */
 142:../../os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 143:../../os/hal/osal/rt-nil/osal.h **** #endif
 144:../../os/hal/osal/rt-nil/osal.h **** 
 145:../../os/hal/osal/rt-nil/osal.h **** #if 0
 146:../../os/hal/osal/rt-nil/osal.h **** /**
 147:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 148:../../os/hal/osal/rt-nil/osal.h ****  */
 149:../../os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 150:../../os/hal/osal/rt-nil/osal.h **** #endif
 151:../../os/hal/osal/rt-nil/osal.h **** 
 152:../../os/hal/osal/rt-nil/osal.h **** #if 0
 153:../../os/hal/osal/rt-nil/osal.h **** /**
 154:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 155:../../os/hal/osal/rt-nil/osal.h ****  */
 156:../../os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 157:../../os/hal/osal/rt-nil/osal.h **** #endif
 158:../../os/hal/osal/rt-nil/osal.h **** 
 159:../../os/hal/osal/rt-nil/osal.h **** #if 0
 160:../../os/hal/osal/rt-nil/osal.h **** /**
 161:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of time conversion variable.
 162:../../os/hal/osal/rt-nil/osal.h ****  * @note    This type must have double width than other time types, it is
 163:../../os/hal/osal/rt-nil/osal.h ****  *          only used internally for conversions.
 164:../../os/hal/osal/rt-nil/osal.h ****  */
 165:../../os/hal/osal/rt-nil/osal.h **** typedef uint64_t time_conv_t;
 166:../../os/hal/osal/rt-nil/osal.h **** #endif
 167:../../os/hal/osal/rt-nil/osal.h **** 
 168:../../os/hal/osal/rt-nil/osal.h **** #if 0
 169:../../os/hal/osal/rt-nil/osal.h **** /**
 170:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 171:../../os/hal/osal/rt-nil/osal.h ****  */
 172:../../os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 173:../../os/hal/osal/rt-nil/osal.h **** #endif
 174:../../os/hal/osal/rt-nil/osal.h **** 
 175:../../os/hal/osal/rt-nil/osal.h **** #if 0
 176:../../os/hal/osal/rt-nil/osal.h **** /**
 177:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 178:../../os/hal/osal/rt-nil/osal.h ****  */
 179:../../os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 180:../../os/hal/osal/rt-nil/osal.h **** #endif
 181:../../os/hal/osal/rt-nil/osal.h **** 
 182:../../os/hal/osal/rt-nil/osal.h **** #if 0
 183:../../os/hal/osal/rt-nil/osal.h **** /**
 184:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 185:../../os/hal/osal/rt-nil/osal.h ****  */
 186:../../os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 187:../../os/hal/osal/rt-nil/osal.h **** #endif
 188:../../os/hal/osal/rt-nil/osal.h **** 
 189:../../os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 190:../../os/hal/osal/rt-nil/osal.h **** /**
 191:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 192:../../os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 193:../../os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 194:../../os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 195:../../os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 196:../../os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 197:../../os/hal/osal/rt-nil/osal.h ****  */
 198:../../os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 199:../../os/hal/osal/rt-nil/osal.h **** 
 200:../../os/hal/osal/rt-nil/osal.h **** /**
 201:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 202:../../os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 203:../../os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 204:../../os/hal/osal/rt-nil/osal.h ****  */
 205:../../os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 206:../../os/hal/osal/rt-nil/osal.h **** 
 207:../../os/hal/osal/rt-nil/osal.h **** /**
 208:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 209:../../os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 210:../../os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 211:../../os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 212:../../os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 213:../../os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 214:../../os/hal/osal/rt-nil/osal.h ****  */
 215:../../os/hal/osal/rt-nil/osal.h **** struct event_source {
 216:../../os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 217:../../os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 218:../../os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 219:../../os/hal/osal/rt-nil/osal.h **** };
 220:../../os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 221:../../os/hal/osal/rt-nil/osal.h **** 
 222:../../os/hal/osal/rt-nil/osal.h **** /**
 223:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 224:../../os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 225:../../os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 226:../../os/hal/osal/rt-nil/osal.h ****  */
 227:../../os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 228:../../os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 229:../../os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 230:../../os/hal/osal/rt-nil/osal.h **** #else
 231:../../os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 232:../../os/hal/osal/rt-nil/osal.h **** #endif
 233:../../os/hal/osal/rt-nil/osal.h **** 
 234:../../os/hal/osal/rt-nil/osal.h **** #if 0
 235:../../os/hal/osal/rt-nil/osal.h **** /**
 236:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 237:../../os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 238:../../os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 239:../../os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 240:../../os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 241:../../os/hal/osal/rt-nil/osal.h ****  */
 242:../../os/hal/osal/rt-nil/osal.h **** typedef struct {
 243:../../os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 244:../../os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 245:../../os/hal/osal/rt-nil/osal.h **** #endif
 246:../../os/hal/osal/rt-nil/osal.h **** 
 247:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 248:../../os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 249:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 250:../../os/hal/osal/rt-nil/osal.h **** 
 251:../../os/hal/osal/rt-nil/osal.h **** /**
 252:../../os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 253:../../os/hal/osal/rt-nil/osal.h ****  * @{
 254:../../os/hal/osal/rt-nil/osal.h ****  */
 255:../../os/hal/osal/rt-nil/osal.h **** /**
 256:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 257:../../os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 258:../../os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 259:../../os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 260:../../os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 261:../../os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 262:../../os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 263:../../os/hal/osal/rt-nil/osal.h ****  *
 264:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 265:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 266:../../os/hal/osal/rt-nil/osal.h ****  *
 267:../../os/hal/osal/rt-nil/osal.h ****  * @api
 268:../../os/hal/osal/rt-nil/osal.h ****  */
 269:../../os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 270:../../os/hal/osal/rt-nil/osal.h **** 
 271:../../os/hal/osal/rt-nil/osal.h **** /**
 272:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 273:../../os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 274:../../os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 275:../../os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 276:../../os/hal/osal/rt-nil/osal.h ****  *
 277:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 278:../../os/hal/osal/rt-nil/osal.h ****  *
 279:../../os/hal/osal/rt-nil/osal.h ****  * @api
 280:../../os/hal/osal/rt-nil/osal.h ****  */
 281:../../os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 282:../../os/hal/osal/rt-nil/osal.h **** 
 283:../../os/hal/osal/rt-nil/osal.h **** /**
 284:../../os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 285:../../os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 286:../../os/hal/osal/rt-nil/osal.h ****  */
 287:../../os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 288:../../os/hal/osal/rt-nil/osal.h **** 
 289:../../os/hal/osal/rt-nil/osal.h **** /**
 290:../../os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 291:../../os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 292:../../os/hal/osal/rt-nil/osal.h ****  */
 293:../../os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 294:../../os/hal/osal/rt-nil/osal.h **** /** @} */
 295:../../os/hal/osal/rt-nil/osal.h **** 
 296:../../os/hal/osal/rt-nil/osal.h **** /**
 297:../../os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 298:../../os/hal/osal/rt-nil/osal.h ****  * @{
 299:../../os/hal/osal/rt-nil/osal.h ****  */
 300:../../os/hal/osal/rt-nil/osal.h **** /**
 301:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 302:../../os/hal/osal/rt-nil/osal.h ****  */
 303:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 304:../../os/hal/osal/rt-nil/osal.h **** 
 305:../../os/hal/osal/rt-nil/osal.h **** /**
 306:../../os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 307:../../os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 308:../../os/hal/osal/rt-nil/osal.h ****  */
 309:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 310:../../os/hal/osal/rt-nil/osal.h **** 
 311:../../os/hal/osal/rt-nil/osal.h **** /**
 312:../../os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 313:../../os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 314:../../os/hal/osal/rt-nil/osal.h ****  */
 315:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 316:../../os/hal/osal/rt-nil/osal.h **** 
 317:../../os/hal/osal/rt-nil/osal.h **** /**
 318:../../os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 319:../../os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 320:../../os/hal/osal/rt-nil/osal.h ****  *
 321:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 322:../../os/hal/osal/rt-nil/osal.h ****  */
 323:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 324:../../os/hal/osal/rt-nil/osal.h **** /** @} */
 325:../../os/hal/osal/rt-nil/osal.h **** 
 326:../../os/hal/osal/rt-nil/osal.h **** /**
 327:../../os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 328:../../os/hal/osal/rt-nil/osal.h ****  * @{
 329:../../os/hal/osal/rt-nil/osal.h ****  */
 330:../../os/hal/osal/rt-nil/osal.h **** /**
 331:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to time interval.
 332:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 333:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 334:../../os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 335:../../os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 336:../../os/hal/osal/rt-nil/osal.h ****  *          converted.
 337:../../os/hal/osal/rt-nil/osal.h ****  *
 338:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 339:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 340:../../os/hal/osal/rt-nil/osal.h ****  *
 341:../../os/hal/osal/rt-nil/osal.h ****  * @api
 342:../../os/hal/osal/rt-nil/osal.h ****  */
 343:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 344:../../os/hal/osal/rt-nil/osal.h **** 
 345:../../os/hal/osal/rt-nil/osal.h **** /**
 346:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to time interval.
 347:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 348:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 349:../../os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 350:../../os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 351:../../os/hal/osal/rt-nil/osal.h ****  *          converted.
 352:../../os/hal/osal/rt-nil/osal.h ****  *
 353:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 354:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 355:../../os/hal/osal/rt-nil/osal.h ****  *
 356:../../os/hal/osal/rt-nil/osal.h ****  * @api
 357:../../os/hal/osal/rt-nil/osal.h ****  */
 358:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 359:../../os/hal/osal/rt-nil/osal.h **** 
 360:../../os/hal/osal/rt-nil/osal.h **** /**
 361:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to time interval.
 362:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 363:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 364:../../os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 365:../../os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 366:../../os/hal/osal/rt-nil/osal.h ****  *          converted.
 367:../../os/hal/osal/rt-nil/osal.h ****  *
 368:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 369:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 370:../../os/hal/osal/rt-nil/osal.h ****  *
 371:../../os/hal/osal/rt-nil/osal.h ****  * @api
 372:../../os/hal/osal/rt-nil/osal.h ****  */
 373:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 374:../../os/hal/osal/rt-nil/osal.h **** 
 375:../../os/hal/osal/rt-nil/osal.h **** /**
 376:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to seconds.
 377:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to seconds.
 378:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next second boundary.
 379:../../os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 380:../../os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 381:../../os/hal/osal/rt-nil/osal.h ****  *          converted.
 382:../../os/hal/osal/rt-nil/osal.h ****  *
 383:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 384:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of seconds.
 385:../../os/hal/osal/rt-nil/osal.h ****  *
 386:../../os/hal/osal/rt-nil/osal.h ****  * @api
 387:../../os/hal/osal/rt-nil/osal.h ****  */
 388:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_I2S(interval) TIME_I2S(interval)
 389:../../os/hal/osal/rt-nil/osal.h **** 
 390:../../os/hal/osal/rt-nil/osal.h **** /**
 391:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to milliseconds.
 392:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to milliseconds.
 393:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next millisecond boundary.
 394:../../os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 395:../../os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 396:../../os/hal/osal/rt-nil/osal.h ****  *          converted.
 397:../../os/hal/osal/rt-nil/osal.h ****  *
 398:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 399:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of milliseconds.
 400:../../os/hal/osal/rt-nil/osal.h ****  *
 401:../../os/hal/osal/rt-nil/osal.h ****  * @api
 402:../../os/hal/osal/rt-nil/osal.h ****  */
 403:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_I2MS(interval) TIME_I2MS(interval)
 404:../../os/hal/osal/rt-nil/osal.h **** 
 405:../../os/hal/osal/rt-nil/osal.h **** /**
 406:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to microseconds.
 407:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to microseconds.
 408:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next microsecond boundary.
 409:../../os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 410:../../os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 411:../../os/hal/osal/rt-nil/osal.h ****  *          converted.
 412:../../os/hal/osal/rt-nil/osal.h ****  *
 413:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 414:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of microseconds.
 415:../../os/hal/osal/rt-nil/osal.h ****  *
 416:../../os/hal/osal/rt-nil/osal.h ****  * @api
 417:../../os/hal/osal/rt-nil/osal.h ****  */
 418:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_I2US(interval) TIME_I2US(interval)
 419:../../os/hal/osal/rt-nil/osal.h **** /** @} */
 420:../../os/hal/osal/rt-nil/osal.h **** 
 421:../../os/hal/osal/rt-nil/osal.h **** /**
 422:../../os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 423:../../os/hal/osal/rt-nil/osal.h ****  * @{
 424:../../os/hal/osal/rt-nil/osal.h ****  */
 425:../../os/hal/osal/rt-nil/osal.h **** /**
 426:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 427:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 428:../../os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 429:../../os/hal/osal/rt-nil/osal.h ****  *
 430:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 431:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 432:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 433:../../os/hal/osal/rt-nil/osal.h ****  *
 434:../../os/hal/osal/rt-nil/osal.h ****  * @api
 435:../../os/hal/osal/rt-nil/osal.h ****  */
 436:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 437:../../os/hal/osal/rt-nil/osal.h **** 
 438:../../os/hal/osal/rt-nil/osal.h **** /**
 439:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 440:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 441:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 442:../../os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 443:../../os/hal/osal/rt-nil/osal.h ****  *
 444:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 445:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 446:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 447:../../os/hal/osal/rt-nil/osal.h ****  *
 448:../../os/hal/osal/rt-nil/osal.h ****  * @api
 449:../../os/hal/osal/rt-nil/osal.h ****  */
 450:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 451:../../os/hal/osal/rt-nil/osal.h **** 
 452:../../os/hal/osal/rt-nil/osal.h **** /**
 453:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 454:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 455:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 456:../../os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 457:../../os/hal/osal/rt-nil/osal.h ****  *
 458:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 459:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 460:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 461:../../os/hal/osal/rt-nil/osal.h ****  *
 462:../../os/hal/osal/rt-nil/osal.h ****  * @api
 463:../../os/hal/osal/rt-nil/osal.h ****  */
 464:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 465:../../os/hal/osal/rt-nil/osal.h **** /** @} */
 466:../../os/hal/osal/rt-nil/osal.h **** 
 467:../../os/hal/osal/rt-nil/osal.h **** /**
 468:../../os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 469:../../os/hal/osal/rt-nil/osal.h ****  * @{
 470:../../os/hal/osal/rt-nil/osal.h ****  */
 471:../../os/hal/osal/rt-nil/osal.h **** /**
 472:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 473:../../os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 474:../../os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 475:../../os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 476:../../os/hal/osal/rt-nil/osal.h ****  *
 477:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 478:../../os/hal/osal/rt-nil/osal.h ****  *
 479:../../os/hal/osal/rt-nil/osal.h ****  * @api
 480:../../os/hal/osal/rt-nil/osal.h ****  */
 481:../../os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 482:../../os/hal/osal/rt-nil/osal.h **** 
 483:../../os/hal/osal/rt-nil/osal.h **** /**
 484:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 485:../../os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 486:../../os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 487:../../os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 488:../../os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 489:../../os/hal/osal/rt-nil/osal.h ****  *
 490:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 491:../../os/hal/osal/rt-nil/osal.h ****  *
 492:../../os/hal/osal/rt-nil/osal.h ****  * @api
 493:../../os/hal/osal/rt-nil/osal.h ****  */
 494:../../os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 495:../../os/hal/osal/rt-nil/osal.h **** 
 496:../../os/hal/osal/rt-nil/osal.h **** /**
 497:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 498:../../os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 499:../../os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 500:../../os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 501:../../os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 502:../../os/hal/osal/rt-nil/osal.h ****  *
 503:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 504:../../os/hal/osal/rt-nil/osal.h ****  *
 505:../../os/hal/osal/rt-nil/osal.h ****  * @api
 506:../../os/hal/osal/rt-nil/osal.h ****  */
 507:../../os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 508:../../os/hal/osal/rt-nil/osal.h **** /** @} */
 509:../../os/hal/osal/rt-nil/osal.h **** 
 510:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 511:../../os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 512:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 513:../../os/hal/osal/rt-nil/osal.h **** 
 514:../../os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 515:../../os/hal/osal/rt-nil/osal.h **** extern "C" {
 516:../../os/hal/osal/rt-nil/osal.h **** #endif
 517:../../os/hal/osal/rt-nil/osal.h **** 
 518:../../os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 519:../../os/hal/osal/rt-nil/osal.h **** }
 520:../../os/hal/osal/rt-nil/osal.h **** #endif
 521:../../os/hal/osal/rt-nil/osal.h **** 
 522:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 523:../../os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 524:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 525:../../os/hal/osal/rt-nil/osal.h **** 
 526:../../os/hal/osal/rt-nil/osal.h **** /**
 527:../../os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 528:../../os/hal/osal/rt-nil/osal.h ****  *
 529:../../os/hal/osal/rt-nil/osal.h ****  * @api
 530:../../os/hal/osal/rt-nil/osal.h ****  */
 531:../../os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 532:../../os/hal/osal/rt-nil/osal.h **** 
 533:../../os/hal/osal/rt-nil/osal.h **** }
 534:../../os/hal/osal/rt-nil/osal.h **** 
 535:../../os/hal/osal/rt-nil/osal.h **** /**
 536:../../os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 537:../../os/hal/osal/rt-nil/osal.h ****  *
 538:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 539:../../os/hal/osal/rt-nil/osal.h ****  *
 540:../../os/hal/osal/rt-nil/osal.h ****  * @api
 541:../../os/hal/osal/rt-nil/osal.h ****  */
 542:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 543:../../os/hal/osal/rt-nil/osal.h **** 
 544:../../os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 545:../../os/hal/osal/rt-nil/osal.h **** }
 546:../../os/hal/osal/rt-nil/osal.h **** 
 547:../../os/hal/osal/rt-nil/osal.h **** /**
 548:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 549:../../os/hal/osal/rt-nil/osal.h ****  *
 550:../../os/hal/osal/rt-nil/osal.h ****  * @special
 551:../../os/hal/osal/rt-nil/osal.h ****  */
 552:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 553:../../os/hal/osal/rt-nil/osal.h **** 
 554:../../os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 555:../../os/hal/osal/rt-nil/osal.h **** }
 556:../../os/hal/osal/rt-nil/osal.h **** 
 557:../../os/hal/osal/rt-nil/osal.h **** /**
 558:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 559:../../os/hal/osal/rt-nil/osal.h ****  *
 560:../../os/hal/osal/rt-nil/osal.h ****  * @special
 561:../../os/hal/osal/rt-nil/osal.h ****  */
 562:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 563:../../os/hal/osal/rt-nil/osal.h **** 
 564:../../os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 565:../../os/hal/osal/rt-nil/osal.h **** }
 566:../../os/hal/osal/rt-nil/osal.h **** 
 567:../../os/hal/osal/rt-nil/osal.h **** /**
 568:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 569:../../os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 570:../../os/hal/osal/rt-nil/osal.h ****  *
 571:../../os/hal/osal/rt-nil/osal.h ****  * @special
 572:../../os/hal/osal/rt-nil/osal.h ****  */
 573:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
 574:../../os/hal/osal/rt-nil/osal.h **** 
 575:../../os/hal/osal/rt-nil/osal.h ****   chSysLock();
 576:../../os/hal/osal/rt-nil/osal.h **** }
 577:../../os/hal/osal/rt-nil/osal.h **** 
 578:../../os/hal/osal/rt-nil/osal.h **** /**
 579:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 580:../../os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 581:../../os/hal/osal/rt-nil/osal.h ****  *
 582:../../os/hal/osal/rt-nil/osal.h ****  * @special
 583:../../os/hal/osal/rt-nil/osal.h ****  */
 584:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 585:../../os/hal/osal/rt-nil/osal.h **** 
 586:../../os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 587:../../os/hal/osal/rt-nil/osal.h **** }
 588:../../os/hal/osal/rt-nil/osal.h **** 
 589:../../os/hal/osal/rt-nil/osal.h **** /**
 590:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from ISR context.
 591:../../os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 592:../../os/hal/osal/rt-nil/osal.h ****  *
 593:../../os/hal/osal/rt-nil/osal.h ****  * @special
 594:../../os/hal/osal/rt-nil/osal.h ****  */
 595:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysLockFromISR(void) {
 596:../../os/hal/osal/rt-nil/osal.h **** 
 597:../../os/hal/osal/rt-nil/osal.h ****   chSysLockFromISR();
 598:../../os/hal/osal/rt-nil/osal.h **** }
 599:../../os/hal/osal/rt-nil/osal.h **** 
 600:../../os/hal/osal/rt-nil/osal.h **** /**
 601:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 602:../../os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 603:../../os/hal/osal/rt-nil/osal.h ****  *
 604:../../os/hal/osal/rt-nil/osal.h ****  * @special
 605:../../os/hal/osal/rt-nil/osal.h ****  */
 606:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlockFromISR(void) {
 607:../../os/hal/osal/rt-nil/osal.h **** 
 608:../../os/hal/osal/rt-nil/osal.h ****   chSysUnlockFromISR();
 609:../../os/hal/osal/rt-nil/osal.h **** }
 610:../../os/hal/osal/rt-nil/osal.h **** 
 611:../../os/hal/osal/rt-nil/osal.h **** /**
 612:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 613:../../os/hal/osal/rt-nil/osal.h ****  * @details This functions enters into a critical zone and can be called
 614:../../os/hal/osal/rt-nil/osal.h ****  *          from any context. Because its flexibility it is less efficient
 615:../../os/hal/osal/rt-nil/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 616:../../os/hal/osal/rt-nil/osal.h ****  *          is known.
 617:../../os/hal/osal/rt-nil/osal.h ****  * @post    The system is in a critical zone.
 618:../../os/hal/osal/rt-nil/osal.h ****  *
 619:../../os/hal/osal/rt-nil/osal.h ****  * @return              The previous system status, the encoding of this
 620:../../os/hal/osal/rt-nil/osal.h ****  *                      status word is architecture-dependent and opaque.
 621:../../os/hal/osal/rt-nil/osal.h ****  *
 622:../../os/hal/osal/rt-nil/osal.h ****  * @xclass
 623:../../os/hal/osal/rt-nil/osal.h ****  */
 624:../../os/hal/osal/rt-nil/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 625:../../os/hal/osal/rt-nil/osal.h **** 
 626:../../os/hal/osal/rt-nil/osal.h ****   return chSysGetStatusAndLockX();
 627:../../os/hal/osal/rt-nil/osal.h **** }
 628:../../os/hal/osal/rt-nil/osal.h **** 
 629:../../os/hal/osal/rt-nil/osal.h **** /**
 630:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 631:../../os/hal/osal/rt-nil/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 632:../../os/hal/osal/rt-nil/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 633:../../os/hal/osal/rt-nil/osal.h ****  *
 634:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] sts       the system status to be restored.
 635:../../os/hal/osal/rt-nil/osal.h ****  *
 636:../../os/hal/osal/rt-nil/osal.h ****  * @xclass
 637:../../os/hal/osal/rt-nil/osal.h ****  */
 638:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 639:../../os/hal/osal/rt-nil/osal.h **** 
 640:../../os/hal/osal/rt-nil/osal.h ****   chSysRestoreStatusX(sts);
 641:../../os/hal/osal/rt-nil/osal.h **** }
 642:../../os/hal/osal/rt-nil/osal.h **** 
 643:../../os/hal/osal/rt-nil/osal.h **** /**
 644:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Polled delay.
 645:../../os/hal/osal/rt-nil/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 646:../../os/hal/osal/rt-nil/osal.h ****  *          value.
 647:../../os/hal/osal/rt-nil/osal.h ****  *
 648:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] cycles    number of cycles
 649:../../os/hal/osal/rt-nil/osal.h ****  *
 650:../../os/hal/osal/rt-nil/osal.h ****  * @xclass
 651:../../os/hal/osal/rt-nil/osal.h ****  */
 652:../../os/hal/osal/rt-nil/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 653:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 654:../../os/hal/osal/rt-nil/osal.h **** 
 655:../../os/hal/osal/rt-nil/osal.h ****   chSysPolledDelayX(cycles);
 656:../../os/hal/osal/rt-nil/osal.h **** }
 657:../../os/hal/osal/rt-nil/osal.h **** #endif
 658:../../os/hal/osal/rt-nil/osal.h **** 
 659:../../os/hal/osal/rt-nil/osal.h **** /**
 660:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Systick callback for the underlying OS.
 661:../../os/hal/osal/rt-nil/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 662:../../os/hal/osal/rt-nil/osal.h ****  *          service from the HAL.
 663:../../os/hal/osal/rt-nil/osal.h ****  */
 664:../../os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 665:../../os/hal/osal/rt-nil/osal.h **** static inline void osalOsTimerHandlerI(void) {
 666:../../os/hal/osal/rt-nil/osal.h **** 
 667:../../os/hal/osal/rt-nil/osal.h ****   chSysTimerHandlerI();
 668:../../os/hal/osal/rt-nil/osal.h **** }
 669:../../os/hal/osal/rt-nil/osal.h **** #endif
 670:../../os/hal/osal/rt-nil/osal.h **** 
 671:../../os/hal/osal/rt-nil/osal.h **** /**
 672:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 673:../../os/hal/osal/rt-nil/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 674:../../os/hal/osal/rt-nil/osal.h ****  *          by themselves, an explicit reschedule using this function is
 675:../../os/hal/osal/rt-nil/osal.h ****  *          required in this scenario.
 676:../../os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 677:../../os/hal/osal/rt-nil/osal.h ****  *
 678:../../os/hal/osal/rt-nil/osal.h ****  * @sclass
 679:../../os/hal/osal/rt-nil/osal.h ****  */
 680:../../os/hal/osal/rt-nil/osal.h **** static inline void osalOsRescheduleS(void) {
 681:../../os/hal/osal/rt-nil/osal.h **** 
 682:../../os/hal/osal/rt-nil/osal.h ****   chSchRescheduleS();
 683:../../os/hal/osal/rt-nil/osal.h **** }
 684:../../os/hal/osal/rt-nil/osal.h **** 
 685:../../os/hal/osal/rt-nil/osal.h **** /**
 686:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Current system time.
 687:../../os/hal/osal/rt-nil/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 688:../../os/hal/osal/rt-nil/osal.h ****  *          invocation.
 689:../../os/hal/osal/rt-nil/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 690:../../os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context but its atomicity
 691:../../os/hal/osal/rt-nil/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 692:../../os/hal/osal/rt-nil/osal.h ****  *          @p systime_t size.
 693:../../os/hal/osal/rt-nil/osal.h ****  *
 694:../../os/hal/osal/rt-nil/osal.h ****  * @return              The system time in ticks.
 695:../../os/hal/osal/rt-nil/osal.h ****  *
 696:../../os/hal/osal/rt-nil/osal.h ****  * @xclass
 697:../../os/hal/osal/rt-nil/osal.h ****  */
 698:../../os/hal/osal/rt-nil/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 699:../../os/hal/osal/rt-nil/osal.h **** 
 700:../../os/hal/osal/rt-nil/osal.h ****   return chVTGetSystemTimeX();
 701:../../os/hal/osal/rt-nil/osal.h **** }
 702:../../os/hal/osal/rt-nil/osal.h **** 
 703:../../os/hal/osal/rt-nil/osal.h **** /**
 704:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 705:../../os/hal/osal/rt-nil/osal.h ****  *
 706:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] systime   base system time
 707:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval to be added
 708:../../os/hal/osal/rt-nil/osal.h ****  * @return              The new system time.
 709:../../os/hal/osal/rt-nil/osal.h ****  *
 710:../../os/hal/osal/rt-nil/osal.h ****  * @xclass
 711:../../os/hal/osal/rt-nil/osal.h ****  */
 712:../../os/hal/osal/rt-nil/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 713:../../os/hal/osal/rt-nil/osal.h ****                                      sysinterval_t interval) {
 714:../../os/hal/osal/rt-nil/osal.h **** 
 715:../../os/hal/osal/rt-nil/osal.h ****   return chTimeAddX(systime, interval);
 716:../../os/hal/osal/rt-nil/osal.h **** }
 717:../../os/hal/osal/rt-nil/osal.h **** 
 718:../../os/hal/osal/rt-nil/osal.h **** /**
 719:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Subtracts two system times returning an interval.
 720:../../os/hal/osal/rt-nil/osal.h ****  *
 721:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] start     first system time
 722:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] end       second system time
 723:../../os/hal/osal/rt-nil/osal.h ****  * @return              The interval representing the time difference.
 724:../../os/hal/osal/rt-nil/osal.h ****  *
 725:../../os/hal/osal/rt-nil/osal.h ****  * @xclass
 726:../../os/hal/osal/rt-nil/osal.h ****  */
 727:../../os/hal/osal/rt-nil/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 728:../../os/hal/osal/rt-nil/osal.h **** 
 729:../../os/hal/osal/rt-nil/osal.h ****   return chTimeDiffX(start, end);
 730:../../os/hal/osal/rt-nil/osal.h **** }
 731:../../os/hal/osal/rt-nil/osal.h **** 
 732:../../os/hal/osal/rt-nil/osal.h **** /**
 733:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 734:../../os/hal/osal/rt-nil/osal.h ****  * @note    When start==end then the function returns always true because the
 735:../../os/hal/osal/rt-nil/osal.h ****  *          whole time range is specified.
 736:../../os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context.
 737:../../os/hal/osal/rt-nil/osal.h ****  *
 738:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] time      the time to be verified
 739:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 740:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 741:../../os/hal/osal/rt-nil/osal.h ****  * @retval true         current time within the specified time window.
 742:../../os/hal/osal/rt-nil/osal.h ****  * @retval false        current time not within the specified time window.
 743:../../os/hal/osal/rt-nil/osal.h ****  *
 744:../../os/hal/osal/rt-nil/osal.h ****  * @xclass
 745:../../os/hal/osal/rt-nil/osal.h ****  */
 746:../../os/hal/osal/rt-nil/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 747:../../os/hal/osal/rt-nil/osal.h ****                                       systime_t start,
 748:../../os/hal/osal/rt-nil/osal.h ****                                       systime_t end) {
 749:../../os/hal/osal/rt-nil/osal.h **** 
 750:../../os/hal/osal/rt-nil/osal.h ****   return chTimeIsInRangeX(time, start, end);
 751:../../os/hal/osal/rt-nil/osal.h **** }
 752:../../os/hal/osal/rt-nil/osal.h **** 
 753:../../os/hal/osal/rt-nil/osal.h **** /**
 754:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 755:../../os/hal/osal/rt-nil/osal.h ****  *
 756:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 757:../../os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 758:../../os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 759:../../os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 760:../../os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 761:../../os/hal/osal/rt-nil/osal.h ****  *                      .
 762:../../os/hal/osal/rt-nil/osal.h ****  *
 763:../../os/hal/osal/rt-nil/osal.h ****  * @sclass
 764:../../os/hal/osal/rt-nil/osal.h ****  */
 765:../../os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 766:../../os/hal/osal/rt-nil/osal.h **** 
 767:../../os/hal/osal/rt-nil/osal.h ****   chThdSleepS(delay);
 768:../../os/hal/osal/rt-nil/osal.h **** }
 769:../../os/hal/osal/rt-nil/osal.h **** 
 770:../../os/hal/osal/rt-nil/osal.h **** /**
 771:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 772:../../os/hal/osal/rt-nil/osal.h ****  *
 773:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 774:../../os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 775:../../os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 776:../../os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 777:../../os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 778:../../os/hal/osal/rt-nil/osal.h ****  *                      .
 779:../../os/hal/osal/rt-nil/osal.h ****  *
 780:../../os/hal/osal/rt-nil/osal.h ****  * @api
 781:../../os/hal/osal/rt-nil/osal.h ****  */
 782:../../os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 783:../../os/hal/osal/rt-nil/osal.h **** 
 784:../../os/hal/osal/rt-nil/osal.h ****   chThdSleep(delay);
 785:../../os/hal/osal/rt-nil/osal.h **** }
 786:../../os/hal/osal/rt-nil/osal.h **** 
 787:../../os/hal/osal/rt-nil/osal.h **** /**
 788:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 789:../../os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 790:../../os/hal/osal/rt-nil/osal.h ****  *          context.
 791:../../os/hal/osal/rt-nil/osal.h ****  *
 792:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 793:../../os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 794:../../os/hal/osal/rt-nil/osal.h ****  *
 795:../../os/hal/osal/rt-nil/osal.h ****  * @sclass
 796:../../os/hal/osal/rt-nil/osal.h ****  */
 797:../../os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 798:../../os/hal/osal/rt-nil/osal.h **** 
 799:../../os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 800:../../os/hal/osal/rt-nil/osal.h **** }
 801:../../os/hal/osal/rt-nil/osal.h **** 
 802:../../os/hal/osal/rt-nil/osal.h **** /**
 803:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 804:../../os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 805:../../os/hal/osal/rt-nil/osal.h ****  *          context.
 806:../../os/hal/osal/rt-nil/osal.h ****  *
 807:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 808:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 809:../../os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 810:../../os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 811:../../os/hal/osal/rt-nil/osal.h ****  *                        state.
 812:../../os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 813:../../os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 814:../../os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 815:../../os/hal/osal/rt-nil/osal.h ****  *                      .
 816:../../os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 817:../../os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 818:../../os/hal/osal/rt-nil/osal.h ****  *
 819:../../os/hal/osal/rt-nil/osal.h ****  * @sclass
 820:../../os/hal/osal/rt-nil/osal.h ****  */
 821:../../os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 822:../../os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 823:../../os/hal/osal/rt-nil/osal.h **** 
 824:../../os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 825:../../os/hal/osal/rt-nil/osal.h **** }
 826:../../os/hal/osal/rt-nil/osal.h **** 
 827:../../os/hal/osal/rt-nil/osal.h **** /**
 828:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 829:../../os/hal/osal/rt-nil/osal.h ****  * @note    This function must not reschedule because it can be called from
 830:../../os/hal/osal/rt-nil/osal.h ****  *          ISR context.
 831:../../os/hal/osal/rt-nil/osal.h ****  *
 832:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 833:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 834:../../os/hal/osal/rt-nil/osal.h ****  *
 835:../../os/hal/osal/rt-nil/osal.h ****  * @iclass
 836:../../os/hal/osal/rt-nil/osal.h ****  */
 837:../../os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 838:../../os/hal/osal/rt-nil/osal.h **** 
 839:../../os/hal/osal/rt-nil/osal.h ****   chThdResumeI(trp, msg);
 840:../../os/hal/osal/rt-nil/osal.h **** }
 841:../../os/hal/osal/rt-nil/osal.h **** 
 842:../../os/hal/osal/rt-nil/osal.h **** /**
 843:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 844:../../os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 845:../../os/hal/osal/rt-nil/osal.h ****  *          context.
 846:../../os/hal/osal/rt-nil/osal.h ****  *
 847:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 848:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 849:../../os/hal/osal/rt-nil/osal.h ****  *
 850:../../os/hal/osal/rt-nil/osal.h ****  * @iclass
 851:../../os/hal/osal/rt-nil/osal.h ****  */
 852:../../os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeS(thread_reference_t *trp, msg_t msg) {
 853:../../os/hal/osal/rt-nil/osal.h **** 
 854:../../os/hal/osal/rt-nil/osal.h ****   chThdResumeS(trp, msg);
 855:../../os/hal/osal/rt-nil/osal.h **** }
 856:../../os/hal/osal/rt-nil/osal.h **** 
 857:../../os/hal/osal/rt-nil/osal.h **** /**
 858:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Initializes a threads queue object.
 859:../../os/hal/osal/rt-nil/osal.h ****  *
 860:../../os/hal/osal/rt-nil/osal.h ****  * @param[out] tqp      pointer to the threads queue object
 861:../../os/hal/osal/rt-nil/osal.h ****  *
 862:../../os/hal/osal/rt-nil/osal.h ****  * @init
 863:../../os/hal/osal/rt-nil/osal.h ****  */
 864:../../os/hal/osal/rt-nil/osal.h **** static inline void osalThreadQueueObjectInit(threads_queue_t *tqp) {
 865:../../os/hal/osal/rt-nil/osal.h **** 
 866:../../os/hal/osal/rt-nil/osal.h ****   chThdQueueObjectInit(tqp);
 867:../../os/hal/osal/rt-nil/osal.h **** }
 868:../../os/hal/osal/rt-nil/osal.h **** 
 869:../../os/hal/osal/rt-nil/osal.h **** /**
 870:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Enqueues the caller thread.
 871:../../os/hal/osal/rt-nil/osal.h ****  * @details The caller thread is enqueued and put to sleep until it is
 872:../../os/hal/osal/rt-nil/osal.h ****  *          dequeued or the specified timeouts expires.
 873:../../os/hal/osal/rt-nil/osal.h ****  *
 874:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 875:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 876:../../os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 877:../../os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 878:../../os/hal/osal/rt-nil/osal.h ****  *                        state.
 879:../../os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 880:../../os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 881:../../os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 882:../../os/hal/osal/rt-nil/osal.h ****  *                      .
 883:../../os/hal/osal/rt-nil/osal.h ****  * @return              The message from @p osalQueueWakeupOneI() or
 884:../../os/hal/osal/rt-nil/osal.h ****  *                      @p osalQueueWakeupAllI() functions.
 885:../../os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 886:../../os/hal/osal/rt-nil/osal.h ****  *                      specified timeout or if the function has been
 887:../../os/hal/osal/rt-nil/osal.h ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 888:../../os/hal/osal/rt-nil/osal.h ****  *                      specification.
 889:../../os/hal/osal/rt-nil/osal.h ****  *
 890:../../os/hal/osal/rt-nil/osal.h ****  * @sclass
 891:../../os/hal/osal/rt-nil/osal.h ****  */
 892:../../os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadEnqueueTimeoutS(threads_queue_t *tqp,
 893:../../os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 894:../../os/hal/osal/rt-nil/osal.h **** 
 895:../../os/hal/osal/rt-nil/osal.h ****   return chThdEnqueueTimeoutS(tqp, timeout);
 896:../../os/hal/osal/rt-nil/osal.h **** }
 897:../../os/hal/osal/rt-nil/osal.h **** 
 898:../../os/hal/osal/rt-nil/osal.h **** /**
 899:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Dequeues and wakes up one thread from the queue, if any.
 900:../../os/hal/osal/rt-nil/osal.h ****  *
 901:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 902:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 903:../../os/hal/osal/rt-nil/osal.h ****  *
 904:../../os/hal/osal/rt-nil/osal.h ****  * @iclass
 905:../../os/hal/osal/rt-nil/osal.h ****  */
 906:../../os/hal/osal/rt-nil/osal.h **** static inline void osalThreadDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 907:../../os/hal/osal/rt-nil/osal.h **** 
 908:../../os/hal/osal/rt-nil/osal.h ****   chThdDequeueNextI(tqp, msg);
 909:../../os/hal/osal/rt-nil/osal.h **** }
 910:../../os/hal/osal/rt-nil/osal.h **** 
 911:../../os/hal/osal/rt-nil/osal.h **** /**
 912:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Dequeues and wakes up all threads from the queue.
 913:../../os/hal/osal/rt-nil/osal.h ****  *
 914:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 915:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 916:../../os/hal/osal/rt-nil/osal.h ****  *
 917:../../os/hal/osal/rt-nil/osal.h ****  * @iclass
 918:../../os/hal/osal/rt-nil/osal.h ****  */
 919:../../os/hal/osal/rt-nil/osal.h **** static inline void osalThreadDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 920:../../os/hal/osal/rt-nil/osal.h **** 
 921:../../os/hal/osal/rt-nil/osal.h ****   chThdDequeueAllI(tqp, msg);
 922:../../os/hal/osal/rt-nil/osal.h **** }
 923:../../os/hal/osal/rt-nil/osal.h **** 
 924:../../os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 925:../../os/hal/osal/rt-nil/osal.h **** /**
 926:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Initializes an event source object.
 927:../../os/hal/osal/rt-nil/osal.h ****  *
 928:../../os/hal/osal/rt-nil/osal.h ****  * @param[out] esp      pointer to the event source object
 929:../../os/hal/osal/rt-nil/osal.h ****  *
 930:../../os/hal/osal/rt-nil/osal.h ****  * @init
 931:../../os/hal/osal/rt-nil/osal.h ****  */
 932:../../os/hal/osal/rt-nil/osal.h **** static inline void osalEventObjectInit(event_source_t *esp) {
 933:../../os/hal/osal/rt-nil/osal.h **** 
 934:../../os/hal/osal/rt-nil/osal.h ****   chEvtObjectInit(esp);
 935:../../os/hal/osal/rt-nil/osal.h **** }
 936:../../os/hal/osal/rt-nil/osal.h **** #else
 937:../../os/hal/osal/rt-nil/osal.h **** static inline void osalEventObjectInit(event_source_t *esp) {
 938:../../os/hal/osal/rt-nil/osal.h **** 
 939:../../os/hal/osal/rt-nil/osal.h ****   osalDbgCheck(esp != NULL);
 940:../../os/hal/osal/rt-nil/osal.h **** 
 941:../../os/hal/osal/rt-nil/osal.h ****   esp->flags = (eventflags_t)0;
 942:../../os/hal/osal/rt-nil/osal.h ****   esp->cb    = NULL;
 943:../../os/hal/osal/rt-nil/osal.h ****   esp->param = NULL;
 944:../../os/hal/osal/rt-nil/osal.h **** }
 945:../../os/hal/osal/rt-nil/osal.h **** #endif
 946:../../os/hal/osal/rt-nil/osal.h **** 
 947:../../os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 948:../../os/hal/osal/rt-nil/osal.h **** /**
 949:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Add flags to an event source object.
 950:../../os/hal/osal/rt-nil/osal.h ****  *
 951:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] esp       pointer to the event flags object
 952:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] flags     flags to be ORed to the flags mask
 953:../../os/hal/osal/rt-nil/osal.h ****  *
 954:../../os/hal/osal/rt-nil/osal.h ****  * @iclass
 955:../../os/hal/osal/rt-nil/osal.h ****  */
 956:../../os/hal/osal/rt-nil/osal.h **** static inline void osalEventBroadcastFlagsI(event_source_t *esp,
  80               		.loc 2 956 20 view .LVU18
  81               	.LBB9:
 957:../../os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 958:../../os/hal/osal/rt-nil/osal.h **** 
 959:../../os/hal/osal/rt-nil/osal.h ****   chEvtBroadcastFlagsI(esp, flags);
  82               		.loc 2 959 3 view .LVU19
  83 0028 64E0      		ldi r22,lo8(4)
  84 002a CE01      		movw r24,r28
  85 002c 0296      		adiw r24,2
  86               	.LVL7:
  87               		.loc 2 959 3 is_stmt 0 view .LVU20
  88 002e 0E94 0000 		call chEvtBroadcastFlagsI
  89               	.LVL8:
  90               		.loc 2 959 3 view .LVU21
  91               	.LBE9:
  92               	.LBE8:
  66:../../os/hal/src/hal_buffered_serial.c ****   }
  93               		.loc 1 66 43 is_stmt 1 discriminator 1 view .LVU22
  69:../../os/hal/src/hal_buffered_serial.c ****     chnAddFlagsI(bsp, SD_QUEUE_FULL_ERROR);
  94               		.loc 1 69 3 view .LVU23
  69:../../os/hal/src/hal_buffered_serial.c ****     chnAddFlagsI(bsp, SD_QUEUE_FULL_ERROR);
  95               		.loc 1 69 7 is_stmt 0 view .LVU24
  96 0032 612F      		mov r22,r17
  97 0034 CE01      		movw r24,r28
  98 0036 0596      		adiw r24,5
  99 0038 0E94 0000 		call iqPutI
 100               	.LVL9:
  69:../../os/hal/src/hal_buffered_serial.c ****     chnAddFlagsI(bsp, SD_QUEUE_FULL_ERROR);
 101               		.loc 1 69 6 discriminator 1 view .LVU25
 102 003c 97FF      		sbrs r25,7
 103 003e 00C0      		rjmp .L1
 104               	.L6:
  70:../../os/hal/src/hal_buffered_serial.c ****   }
 105               		.loc 1 70 5 is_stmt 1 view .LVU26
 106               	.LVL10:
 107               	.LBB10:
 108               	.LBI10:
 956:../../os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 109               		.loc 2 956 20 view .LVU27
 110               	.LBB11:
 111               		.loc 2 959 3 view .LVU28
 112 0040 60E0      		ldi r22,0
 113 0042 CE01      		movw r24,r28
 114 0044 0296      		adiw r24,2
 115               	.LVL11:
 116               	/* epilogue start */
 117               		.loc 2 959 3 is_stmt 0 view .LVU29
 118               	.LBE11:
 119               	.LBE10:
 120               		.loc 1 72 1 view .LVU30
 121 0046 DF91      		pop r29
 122 0048 CF91      		pop r28
 123               	.LVL12:
 124               		.loc 1 72 1 view .LVU31
 125 004a 1F91      		pop r17
 126               	.LVL13:
 127               	.LBB13:
 128               	.LBB12:
 129               		.loc 2 959 3 view .LVU32
 130 004c 0C94 0000 		jmp chEvtBroadcastFlagsI
 131               	.LVL14:
 132               		.loc 2 959 3 view .LVU33
 133               	.LBE12:
 134               	.LBE13:
 135               		.cfi_endproc
 136               	.LFE146:
 138               		.section	.text.bsRequestDataI,"ax",@progbits
 139               	.global	bsRequestDataI
 141               	bsRequestDataI:
 142               	.LVL15:
 143               	.LFB147:
  73:../../os/hal/src/hal_buffered_serial.c **** 
  74:../../os/hal/src/hal_buffered_serial.c **** /**
  75:../../os/hal/src/hal_buffered_serial.c ****  * @brief   Handles outgoing data.
  76:../../os/hal/src/hal_buffered_serial.c ****  * @details Must be called from the output interrupt service routine in order
  77:../../os/hal/src/hal_buffered_serial.c ****  *          to get the next byte to be transmitted.
  78:../../os/hal/src/hal_buffered_serial.c ****  * @note    In order to gain some performance it is suggested to not use
  79:../../os/hal/src/hal_buffered_serial.c ****  *          this function directly but copy this code directly into the
  80:../../os/hal/src/hal_buffered_serial.c ****  *          interrupt service routine.
  81:../../os/hal/src/hal_buffered_serial.c ****  *
  82:../../os/hal/src/hal_buffered_serial.c ****  * @param[in] bsp       pointer to a @p BufferedSerial structure
  83:../../os/hal/src/hal_buffered_serial.c ****  * @return              The byte value read from the driver's output queue.
  84:../../os/hal/src/hal_buffered_serial.c ****  * @retval MSG_TIMEOUT  if the queue is empty.
  85:../../os/hal/src/hal_buffered_serial.c ****  *
  86:../../os/hal/src/hal_buffered_serial.c ****  * @iclass
  87:../../os/hal/src/hal_buffered_serial.c ****  */
  88:../../os/hal/src/hal_buffered_serial.c **** msg_t bsRequestDataI(BufferedSerial *bsp) {
 144               		.loc 1 88 43 is_stmt 1 view -0
 145               		.cfi_startproc
 146               		.loc 1 88 43 is_stmt 0 view .LVU35
 147 0000 0F93      		push r16
 148               	.LCFI3:
 149               		.cfi_def_cfa_offset 3
 150               		.cfi_offset 16, -2
 151 0002 1F93      		push r17
 152               	.LCFI4:
 153               		.cfi_def_cfa_offset 4
 154               		.cfi_offset 17, -3
 155 0004 CF93      		push r28
 156               	.LCFI5:
 157               		.cfi_def_cfa_offset 5
 158               		.cfi_offset 28, -4
 159 0006 DF93      		push r29
 160               	.LCFI6:
 161               		.cfi_def_cfa_offset 6
 162               		.cfi_offset 29, -5
 163               	/* prologue: function */
 164               	/* frame size = 0 */
 165               	/* stack size = 4 */
 166               	.L__stack_usage = 4
 167 0008 8C01      		movw r16,r24
  89:../../os/hal/src/hal_buffered_serial.c ****   msg_t  b;
 168               		.loc 1 89 3 is_stmt 1 view .LVU36
  90:../../os/hal/src/hal_buffered_serial.c **** 
  91:../../os/hal/src/hal_buffered_serial.c ****   osalDbgCheckClassI();
 169               		.loc 1 91 23 view .LVU37
  92:../../os/hal/src/hal_buffered_serial.c ****   osalDbgCheck(bsp != NULL);
 170               		.loc 1 92 3 view .LVU38
 171               		.loc 1 92 3 view .LVU39
 172               		.loc 1 92 3 discriminator 5 view .LVU40
  93:../../os/hal/src/hal_buffered_serial.c **** 
  94:../../os/hal/src/hal_buffered_serial.c ****   b = oqGetI(&bsp->oqueue);
 173               		.loc 1 94 3 view .LVU41
 174               		.loc 1 94 7 is_stmt 0 view .LVU42
 175 000a 4496      		adiw r24,20
 176               	.LVL16:
 177               		.loc 1 94 7 view .LVU43
 178 000c 0E94 0000 		call oqGetI
 179               	.LVL17:
 180 0010 EC01      		movw r28,r24
 181               	.LVL18:
  95:../../os/hal/src/hal_buffered_serial.c ****   if (b < MSG_OK) {
 182               		.loc 1 95 3 is_stmt 1 view .LVU44
 183               		.loc 1 95 6 is_stmt 0 view .LVU45
 184 0012 97FD      		sbrc r25,7
 185 0014 00C0      		rjmp .L9
  96:../../os/hal/src/hal_buffered_serial.c ****     chnAddFlagsI(bsp, CHN_OUTPUT_EMPTY);
  97:../../os/hal/src/hal_buffered_serial.c ****   }
  98:../../os/hal/src/hal_buffered_serial.c **** 
  99:../../os/hal/src/hal_buffered_serial.c ****   return b;
 100:../../os/hal/src/hal_buffered_serial.c **** }
 186               		.loc 1 100 1 view .LVU46
 187 0016 CE01      		movw r24,r28
 188               	/* epilogue start */
 189               		.loc 1 100 1 view .LVU47
 190 0018 DF91      		pop r29
 191 001a CF91      		pop r28
 192 001c 1F91      		pop r17
 193 001e 0F91      		pop r16
 194               	.LVL19:
 195               		.loc 1 100 1 view .LVU48
 196 0020 0895      		ret
 197               	.LVL20:
 198               	.L9:
  96:../../os/hal/src/hal_buffered_serial.c ****     chnAddFlagsI(bsp, CHN_OUTPUT_EMPTY);
 199               		.loc 1 96 5 is_stmt 1 view .LVU49
 200               	.LBB14:
 201               	.LBI14:
 956:../../os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 202               		.loc 2 956 20 view .LVU50
 203               	.LBB15:
 204               		.loc 2 959 3 view .LVU51
 205 0022 68E0      		ldi r22,lo8(8)
 206 0024 C801      		movw r24,r16
 207               	.LVL21:
 208               		.loc 2 959 3 is_stmt 0 view .LVU52
 209 0026 0296      		adiw r24,2
 210               	.LVL22:
 211               		.loc 2 959 3 view .LVU53
 212 0028 0E94 0000 		call chEvtBroadcastFlagsI
 213               	.LVL23:
 214               		.loc 2 959 3 view .LVU54
 215               	.LBE15:
 216               	.LBE14:
  96:../../os/hal/src/hal_buffered_serial.c ****     chnAddFlagsI(bsp, CHN_OUTPUT_EMPTY);
 217               		.loc 1 96 40 is_stmt 1 discriminator 1 view .LVU55
  99:../../os/hal/src/hal_buffered_serial.c **** }
 218               		.loc 1 99 3 view .LVU56
 219               		.loc 1 100 1 is_stmt 0 view .LVU57
 220 002c CE01      		movw r24,r28
 221               	/* epilogue start */
 222 002e DF91      		pop r29
 223 0030 CF91      		pop r28
 224               	.LVL24:
 225               		.loc 1 100 1 view .LVU58
 226 0032 1F91      		pop r17
 227 0034 0F91      		pop r16
 228               	.LVL25:
 229               		.loc 1 100 1 view .LVU59
 230 0036 0895      		ret
 231               		.cfi_endproc
 232               	.LFE147:
 234               		.text
 235               	.Letext0:
 236               		.file 3 "/usr/lib/gcc/avr/14.1.0/include/stddef.h"
 237               		.file 4 "/usr/avr/include/stdint.h"
 238               		.file 5 "../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 239               		.file 6 "../../os/nil/include/ch.h"
 240               		.file 7 "../../os/common/ports/AVR/chcore.h"
 241               		.file 8 "../../os/nil/include/chevt.h"
 242               		.file 9 "../../os/hal/include/hal_queues.h"
 243               		.file 10 "../../os/hal/include/hal_buffered_serial.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hal_buffered_serial.c
     /tmp/ccoD2N8o.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccoD2N8o.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccoD2N8o.s:4      *ABS*:0000003f __SREG__
     /tmp/ccoD2N8o.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccoD2N8o.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccoD2N8o.s:14     .text.bsIncomingDataI:00000000 bsIncomingDataI
     /tmp/ccoD2N8o.s:17     .text.bsIncomingDataI:00000000 .Loc.0
     /tmp/ccoD2N8o.s:18     .text.bsIncomingDataI:00000000 L0
     /tmp/ccoD2N8o.s:19     .text.bsIncomingDataI:00000000 .Loc.1
     /tmp/ccoD2N8o.s:38     .text.bsIncomingDataI:0000000a .Loc.2
     /tmp/ccoD2N8o.s:39     .text.bsIncomingDataI:0000000a .Loc.3
     /tmp/ccoD2N8o.s:40     .text.bsIncomingDataI:0000000a .Loc.4
     /tmp/ccoD2N8o.s:41     .text.bsIncomingDataI:0000000a .Loc.5
     /tmp/ccoD2N8o.s:42     .text.bsIncomingDataI:0000000a .Loc.6
     /tmp/ccoD2N8o.s:43     .text.bsIncomingDataI:0000000a .Loc.7
     /tmp/ccoD2N8o.s:47     .text.bsIncomingDataI:0000000e .Loc.8
     /tmp/ccoD2N8o.s:50     .text.bsIncomingDataI:00000012 .Loc.9
     /tmp/ccoD2N8o.s:51     .text.bsIncomingDataI:00000012 .Loc.10
     /tmp/ccoD2N8o.s:52     .text.bsIncomingDataI:00000012 .Loc.11
     /tmp/ccoD2N8o.s:55     .text.bsIncomingDataI:00000014 .Loc.12
     /tmp/ccoD2N8o.s:60     .text.bsIncomingDataI:0000001c .Loc.13
     /tmp/ccoD2N8o.s:65     .text.bsIncomingDataI:00000020 .Loc.14
     /tmp/ccoD2N8o.s:69     .text.bsIncomingDataI:00000024 .Loc.15
     /tmp/ccoD2N8o.s:72     .text.bsIncomingDataI:00000026 .Loc.16
     /tmp/ccoD2N8o.s:76     .text.bsIncomingDataI:00000028 .Loc.17
     /tmp/ccoD2N8o.s:80     .text.bsIncomingDataI:00000028 .Loc.18
     /tmp/ccoD2N8o.s:82     .text.bsIncomingDataI:00000028 .Loc.19
     /tmp/ccoD2N8o.s:87     .text.bsIncomingDataI:0000002e .Loc.20
     /tmp/ccoD2N8o.s:90     .text.bsIncomingDataI:00000032 .Loc.21
     /tmp/ccoD2N8o.s:93     .text.bsIncomingDataI:00000032 .Loc.22
     /tmp/ccoD2N8o.s:94     .text.bsIncomingDataI:00000032 .Loc.23
     /tmp/ccoD2N8o.s:95     .text.bsIncomingDataI:00000032 .Loc.24
     /tmp/ccoD2N8o.s:101    .text.bsIncomingDataI:0000003c .Loc.25
     /tmp/ccoD2N8o.s:105    .text.bsIncomingDataI:00000040 .Loc.26
     /tmp/ccoD2N8o.s:109    .text.bsIncomingDataI:00000040 .Loc.27
     /tmp/ccoD2N8o.s:111    .text.bsIncomingDataI:00000040 .Loc.28
     /tmp/ccoD2N8o.s:117    .text.bsIncomingDataI:00000046 .Loc.29
     /tmp/ccoD2N8o.s:120    .text.bsIncomingDataI:00000046 .Loc.30
     /tmp/ccoD2N8o.s:124    .text.bsIncomingDataI:0000004a .Loc.31
     /tmp/ccoD2N8o.s:129    .text.bsIncomingDataI:0000004c .Loc.32
     /tmp/ccoD2N8o.s:132    .text.bsIncomingDataI:00000050 .Loc.33
     /tmp/ccoD2N8o.s:135    .text.bsIncomingDataI:00000050 L0
     /tmp/ccoD2N8o.s:141    .text.bsRequestDataI:00000000 bsRequestDataI
     /tmp/ccoD2N8o.s:144    .text.bsRequestDataI:00000000 .Loc.34
     /tmp/ccoD2N8o.s:145    .text.bsRequestDataI:00000000 L0
     /tmp/ccoD2N8o.s:146    .text.bsRequestDataI:00000000 .Loc.35
     /tmp/ccoD2N8o.s:168    .text.bsRequestDataI:0000000a .Loc.36
     /tmp/ccoD2N8o.s:169    .text.bsRequestDataI:0000000a .Loc.37
     /tmp/ccoD2N8o.s:170    .text.bsRequestDataI:0000000a .Loc.38
     /tmp/ccoD2N8o.s:171    .text.bsRequestDataI:0000000a .Loc.39
     /tmp/ccoD2N8o.s:172    .text.bsRequestDataI:0000000a .Loc.40
     /tmp/ccoD2N8o.s:173    .text.bsRequestDataI:0000000a .Loc.41
     /tmp/ccoD2N8o.s:174    .text.bsRequestDataI:0000000a .Loc.42
     /tmp/ccoD2N8o.s:177    .text.bsRequestDataI:0000000c .Loc.43
     /tmp/ccoD2N8o.s:182    .text.bsRequestDataI:00000012 .Loc.44
     /tmp/ccoD2N8o.s:183    .text.bsRequestDataI:00000012 .Loc.45
     /tmp/ccoD2N8o.s:186    .text.bsRequestDataI:00000016 .Loc.46
     /tmp/ccoD2N8o.s:189    .text.bsRequestDataI:00000018 .Loc.47
     /tmp/ccoD2N8o.s:195    .text.bsRequestDataI:00000020 .Loc.48
     /tmp/ccoD2N8o.s:199    .text.bsRequestDataI:00000022 .Loc.49
     /tmp/ccoD2N8o.s:202    .text.bsRequestDataI:00000022 .Loc.50
     /tmp/ccoD2N8o.s:204    .text.bsRequestDataI:00000022 .Loc.51
     /tmp/ccoD2N8o.s:208    .text.bsRequestDataI:00000026 .Loc.52
     /tmp/ccoD2N8o.s:211    .text.bsRequestDataI:00000028 .Loc.53
     /tmp/ccoD2N8o.s:214    .text.bsRequestDataI:0000002c .Loc.54
     /tmp/ccoD2N8o.s:217    .text.bsRequestDataI:0000002c .Loc.55
     /tmp/ccoD2N8o.s:218    .text.bsRequestDataI:0000002c .Loc.56
     /tmp/ccoD2N8o.s:219    .text.bsRequestDataI:0000002c .Loc.57
     /tmp/ccoD2N8o.s:225    .text.bsRequestDataI:00000032 .Loc.58
     /tmp/ccoD2N8o.s:229    .text.bsRequestDataI:00000036 .Loc.59
     /tmp/ccoD2N8o.s:231    .text.bsRequestDataI:00000038 L0
     /tmp/ccoD2N8o.s:138    .text.bsIncomingDataI:00000050 L0
     /tmp/ccoD2N8o.s:234    .text.bsRequestDataI:00000038 L0
                     .debug_frame:00000000 L0
     /tmp/ccoD2N8o.s:75     .text.bsIncomingDataI:00000028 .L5
     /tmp/ccoD2N8o.s:104    .text.bsIncomingDataI:00000040 .L6
     /tmp/ccoD2N8o.s:63     .text.bsIncomingDataI:00000020 .L1
     /tmp/ccoD2N8o.s:198    .text.bsRequestDataI:00000022 .L9
     /tmp/ccoD2N8o.s:1702   .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/ccoD2N8o.s:2759   .debug_ranges:00000000 .Ldebug_ranges0
     /tmp/ccoD2N8o.s:2773   .debug_line:00000000 .Ldebug_line0
     /tmp/ccoD2N8o.s:143    .text.bsRequestDataI:00000000 .LFB147
     /tmp/ccoD2N8o.s:232    .text.bsRequestDataI:00000038 .LFE147
     /tmp/ccoD2N8o.s:2329   .debug_loc:00000000 .LLST6
     /tmp/ccoD2N8o.s:2373   .debug_loc:00000053 .LLST7
     /tmp/ccoD2N8o.s:2362   .debug_loc:00000049 .LVUS7
     /tmp/ccoD2N8o.s:2436   .debug_loc:000000b9 .LLST8
     /tmp/ccoD2N8o.s:2429   .debug_loc:000000b3 .LVUS8
     /tmp/ccoD2N8o.s:201    .text.bsRequestDataI:00000022 .LBI14
     /tmp/ccoD2N8o.s:200    .text.bsRequestDataI:00000022 .LBB14
     /tmp/ccoD2N8o.s:216    .text.bsRequestDataI:0000002c .LBE14
     /tmp/ccoD2N8o.s:2473   .debug_loc:000000f7 .LLST9
     /tmp/ccoD2N8o.s:2466   .debug_loc:000000f1 .LVUS9
     /tmp/ccoD2N8o.s:2500   .debug_loc:0000012b .LLST10
     /tmp/ccoD2N8o.s:2497   .debug_loc:00000129 .LVUS10
     /tmp/ccoD2N8o.s:213    .text.bsRequestDataI:0000002c .LVL23
     /tmp/ccoD2N8o.s:179    .text.bsRequestDataI:00000010 .LVL17
     /tmp/ccoD2N8o.s:16     .text.bsIncomingDataI:00000000 .LFB146
     /tmp/ccoD2N8o.s:136    .text.bsIncomingDataI:00000050 .LFE146
     /tmp/ccoD2N8o.s:2508   .debug_loc:0000013f .LLST0
     /tmp/ccoD2N8o.s:2548   .debug_loc:00000187 .LLST1
     /tmp/ccoD2N8o.s:2535   .debug_loc:0000017b .LVUS1
     /tmp/ccoD2N8o.s:2621   .debug_loc:000001fe .LLST2
     /tmp/ccoD2N8o.s:2610   .debug_loc:000001f4 .LVUS2
     /tmp/ccoD2N8o.s:78     .text.bsIncomingDataI:00000028 .LBI8
     /tmp/ccoD2N8o.s:77     .text.bsIncomingDataI:00000028 .LBB8
     /tmp/ccoD2N8o.s:92     .text.bsIncomingDataI:00000032 .LBE8
     /tmp/ccoD2N8o.s:2669   .debug_loc:00000255 .LLST3
     /tmp/ccoD2N8o.s:2662   .debug_loc:0000024f .LVUS3
     /tmp/ccoD2N8o.s:2696   .debug_loc:00000289 .LLST4
     /tmp/ccoD2N8o.s:2693   .debug_loc:00000287 .LVUS4
     /tmp/ccoD2N8o.s:89     .text.bsIncomingDataI:00000032 .LVL8
     /tmp/ccoD2N8o.s:108    .text.bsIncomingDataI:00000040 .LBI10
     /tmp/ccoD2N8o.s:2711   .debug_loc:000002a3 .LLST5
     /tmp/ccoD2N8o.s:2704   .debug_loc:0000029d .LVUS5
     /tmp/ccoD2N8o.s:131    .text.bsIncomingDataI:00000050 .LVL14
     /tmp/ccoD2N8o.s:59     .text.bsIncomingDataI:0000001c .LVL3
     /tmp/ccoD2N8o.s:100    .text.bsIncomingDataI:0000003c .LVL9
     /tmp/ccoD2N8o.s:148    .text.bsRequestDataI:00000002 .LCFI3
     /tmp/ccoD2N8o.s:152    .text.bsRequestDataI:00000004 .LCFI4
     /tmp/ccoD2N8o.s:156    .text.bsRequestDataI:00000006 .LCFI5
     /tmp/ccoD2N8o.s:160    .text.bsRequestDataI:00000008 .LCFI6
     /tmp/ccoD2N8o.s:142    .text.bsRequestDataI:00000000 .LVL15
     /tmp/ccoD2N8o.s:176    .text.bsRequestDataI:0000000c .LVL16
     /tmp/ccoD2N8o.s:194    .text.bsRequestDataI:00000020 .LVL19
     /tmp/ccoD2N8o.s:197    .text.bsRequestDataI:00000022 .LVL20
     /tmp/ccoD2N8o.s:228    .text.bsRequestDataI:00000036 .LVL25
     /tmp/ccoD2N8o.s:181    .text.bsRequestDataI:00000012 .LVL18
     /tmp/ccoD2N8o.s:207    .text.bsRequestDataI:00000026 .LVL21
     /tmp/ccoD2N8o.s:224    .text.bsRequestDataI:00000032 .LVL24
     /tmp/ccoD2N8o.s:210    .text.bsRequestDataI:00000028 .LVL22
     /tmp/ccoD2N8o.s:21     .text.bsIncomingDataI:00000002 .LCFI0
     /tmp/ccoD2N8o.s:25     .text.bsIncomingDataI:00000004 .LCFI1
     /tmp/ccoD2N8o.s:29     .text.bsIncomingDataI:00000006 .LCFI2
     /tmp/ccoD2N8o.s:15     .text.bsIncomingDataI:00000000 .LVL0
     /tmp/ccoD2N8o.s:46     .text.bsIncomingDataI:0000000e .LVL1
     /tmp/ccoD2N8o.s:68     .text.bsIncomingDataI:00000024 .LVL4
     /tmp/ccoD2N8o.s:74     .text.bsIncomingDataI:00000028 .LVL6
     /tmp/ccoD2N8o.s:123    .text.bsIncomingDataI:0000004a .LVL12
     /tmp/ccoD2N8o.s:54     .text.bsIncomingDataI:00000014 .LVL2
     /tmp/ccoD2N8o.s:71     .text.bsIncomingDataI:00000026 .LVL5
     /tmp/ccoD2N8o.s:126    .text.bsIncomingDataI:0000004c .LVL13
     /tmp/ccoD2N8o.s:86     .text.bsIncomingDataI:0000002e .LVL7
     /tmp/ccoD2N8o.s:106    .text.bsIncomingDataI:00000040 .LVL10
     /tmp/ccoD2N8o.s:115    .text.bsIncomingDataI:00000046 .LVL11
     /tmp/ccoD2N8o.s:245    .debug_info:00000000 .Ldebug_info0
     /tmp/ccoD2N8o.s:107    .text.bsIncomingDataI:00000040 .LBB10
     /tmp/ccoD2N8o.s:119    .text.bsIncomingDataI:00000046 .LBE10
     /tmp/ccoD2N8o.s:127    .text.bsIncomingDataI:0000004c .LBB13
     /tmp/ccoD2N8o.s:134    .text.bsIncomingDataI:00000050 .LBE13

UNDEFINED SYMBOLS
iqPutI
chEvtBroadcastFlagsI
oqGetI
