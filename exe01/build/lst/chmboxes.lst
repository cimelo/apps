   1               		.file	"chmboxes.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 1 "../../os/oslib/src/chmboxes.c"
  11               		.section	.text.chMBObjectInit,"ax",@progbits
  12               	.global	chMBObjectInit
  14               	chMBObjectInit:
  15               	.LVL0:
  16               	.LFB98:
   1:../../os/oslib/src/chmboxes.c **** /*
   2:../../os/oslib/src/chmboxes.c ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:../../os/oslib/src/chmboxes.c ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:../../os/oslib/src/chmboxes.c **** 
   5:../../os/oslib/src/chmboxes.c ****     This file is part of ChibiOS.
   6:../../os/oslib/src/chmboxes.c **** 
   7:../../os/oslib/src/chmboxes.c ****     ChibiOS is free software; you can redistribute it and/or modify
   8:../../os/oslib/src/chmboxes.c ****     it under the terms of the GNU General Public License as published by
   9:../../os/oslib/src/chmboxes.c ****     the Free Software Foundation version 3 of the License.
  10:../../os/oslib/src/chmboxes.c **** 
  11:../../os/oslib/src/chmboxes.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../os/oslib/src/chmboxes.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../os/oslib/src/chmboxes.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../os/oslib/src/chmboxes.c ****     GNU General Public License for more details.
  15:../../os/oslib/src/chmboxes.c **** 
  16:../../os/oslib/src/chmboxes.c ****     You should have received a copy of the GNU General Public License
  17:../../os/oslib/src/chmboxes.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../os/oslib/src/chmboxes.c **** */
  19:../../os/oslib/src/chmboxes.c **** 
  20:../../os/oslib/src/chmboxes.c **** /**
  21:../../os/oslib/src/chmboxes.c ****  * @file    oslib/src/chmboxes.c
  22:../../os/oslib/src/chmboxes.c ****  * @brief   Mailboxes code.
  23:../../os/oslib/src/chmboxes.c ****  *
  24:../../os/oslib/src/chmboxes.c ****  * @addtogroup oslib_mailboxes
  25:../../os/oslib/src/chmboxes.c ****  * @details Asynchronous messages.
  26:../../os/oslib/src/chmboxes.c ****  *          <h2>Operation mode</h2>
  27:../../os/oslib/src/chmboxes.c ****  *          A mailbox is an asynchronous communication mechanism.<br>
  28:../../os/oslib/src/chmboxes.c ****  *          Operations defined for mailboxes:
  29:../../os/oslib/src/chmboxes.c ****  *          - <b>Post</b>: Posts a message on the mailbox in FIFO order.
  30:../../os/oslib/src/chmboxes.c ****  *          - <b>Post Ahead</b>: Posts a message on the mailbox with urgent
  31:../../os/oslib/src/chmboxes.c ****  *            priority.
  32:../../os/oslib/src/chmboxes.c ****  *          - <b>Fetch</b>: A message is fetched from the mailbox and removed
  33:../../os/oslib/src/chmboxes.c ****  *            from the queue.
  34:../../os/oslib/src/chmboxes.c ****  *          - <b>Reset</b>: The mailbox is emptied and all the stored messages
  35:../../os/oslib/src/chmboxes.c ****  *            are lost.
  36:../../os/oslib/src/chmboxes.c ****  *          .
  37:../../os/oslib/src/chmboxes.c ****  *          A message is a variable of type msg_t that is guaranteed to have
  38:../../os/oslib/src/chmboxes.c ****  *          the same size of and be compatible with (data) pointers (anyway an
  39:../../os/oslib/src/chmboxes.c ****  *          explicit cast is needed).
  40:../../os/oslib/src/chmboxes.c ****  *          If larger messages need to be exchanged then a pointer to a
  41:../../os/oslib/src/chmboxes.c ****  *          structure can be posted in the mailbox but the posting side has
  42:../../os/oslib/src/chmboxes.c ****  *          no predefined way to know when the message has been processed. A
  43:../../os/oslib/src/chmboxes.c ****  *          possible approach is to allocate memory (from a memory pool for
  44:../../os/oslib/src/chmboxes.c ****  *          example) from the posting side and free it on the fetching side.
  45:../../os/oslib/src/chmboxes.c ****  *          Another approach is to set a "done" flag into the structure pointed
  46:../../os/oslib/src/chmboxes.c ****  *          by the message.
  47:../../os/oslib/src/chmboxes.c ****  * @pre     In order to use the mailboxes APIs the @p CH_CFG_USE_MAILBOXES
  48:../../os/oslib/src/chmboxes.c ****  *          option must be enabled in @p chconf.h.
  49:../../os/oslib/src/chmboxes.c ****  * @note    Compatible with RT and NIL.
  50:../../os/oslib/src/chmboxes.c ****  * @{
  51:../../os/oslib/src/chmboxes.c ****  */
  52:../../os/oslib/src/chmboxes.c **** 
  53:../../os/oslib/src/chmboxes.c **** #include "ch.h"
  54:../../os/oslib/src/chmboxes.c **** 
  55:../../os/oslib/src/chmboxes.c **** #if (CH_CFG_USE_MAILBOXES == TRUE) || defined(__DOXYGEN__)
  56:../../os/oslib/src/chmboxes.c **** 
  57:../../os/oslib/src/chmboxes.c **** /*===========================================================================*/
  58:../../os/oslib/src/chmboxes.c **** /* Module exported variables.                                                */
  59:../../os/oslib/src/chmboxes.c **** /*===========================================================================*/
  60:../../os/oslib/src/chmboxes.c **** 
  61:../../os/oslib/src/chmboxes.c **** /*===========================================================================*/
  62:../../os/oslib/src/chmboxes.c **** /* Module local types.                                                       */
  63:../../os/oslib/src/chmboxes.c **** /*===========================================================================*/
  64:../../os/oslib/src/chmboxes.c **** 
  65:../../os/oslib/src/chmboxes.c **** /*===========================================================================*/
  66:../../os/oslib/src/chmboxes.c **** /* Module local variables.                                                   */
  67:../../os/oslib/src/chmboxes.c **** /*===========================================================================*/
  68:../../os/oslib/src/chmboxes.c **** 
  69:../../os/oslib/src/chmboxes.c **** /*===========================================================================*/
  70:../../os/oslib/src/chmboxes.c **** /* Module local functions.                                                   */
  71:../../os/oslib/src/chmboxes.c **** /*===========================================================================*/
  72:../../os/oslib/src/chmboxes.c **** 
  73:../../os/oslib/src/chmboxes.c **** /*===========================================================================*/
  74:../../os/oslib/src/chmboxes.c **** /* Module exported functions.                                                */
  75:../../os/oslib/src/chmboxes.c **** /*===========================================================================*/
  76:../../os/oslib/src/chmboxes.c **** 
  77:../../os/oslib/src/chmboxes.c **** /**
  78:../../os/oslib/src/chmboxes.c ****  * @brief   Initializes a @p mailbox_t object.
  79:../../os/oslib/src/chmboxes.c ****  *
  80:../../os/oslib/src/chmboxes.c ****  * @param[out] mbp      the pointer to the @p mailbox_t structure to be
  81:../../os/oslib/src/chmboxes.c ****  *                      initialized
  82:../../os/oslib/src/chmboxes.c ****  * @param[in] buf       pointer to the messages buffer as an array of @p msg_t
  83:../../os/oslib/src/chmboxes.c ****  * @param[in] n         number of elements in the buffer array
  84:../../os/oslib/src/chmboxes.c ****  *
  85:../../os/oslib/src/chmboxes.c ****  * @init
  86:../../os/oslib/src/chmboxes.c ****  */
  87:../../os/oslib/src/chmboxes.c **** void chMBObjectInit(mailbox_t *mbp, msg_t *buf, size_t n) {
  17               		.loc 1 87 59 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 87 59 is_stmt 0 view .LVU1
  24 0000 FC01      		movw r30,r24
  25 0002 9B01      		movw r18,r22
  88:../../os/oslib/src/chmboxes.c **** 
  89:../../os/oslib/src/chmboxes.c ****   chDbgCheck((mbp != NULL) && (buf != NULL) && (n > (size_t)0));
  26               		.loc 1 89 3 is_stmt 1 view .LVU2
  27               		.loc 1 89 3 view .LVU3
  28               		.loc 1 89 3 discriminator 9 view .LVU4
  90:../../os/oslib/src/chmboxes.c **** 
  91:../../os/oslib/src/chmboxes.c ****   mbp->buffer = buf;
  29               		.loc 1 91 3 view .LVU5
  30               		.loc 1 91 15 is_stmt 0 view .LVU6
  31 0004 7183      		std Z+1,r23
  32 0006 6083      		st Z,r22
  92:../../os/oslib/src/chmboxes.c ****   mbp->rdptr  = buf;
  33               		.loc 1 92 3 is_stmt 1 view .LVU7
  34               		.loc 1 92 15 is_stmt 0 view .LVU8
  35 0008 7783      		std Z+7,r23
  36 000a 6683      		std Z+6,r22
  93:../../os/oslib/src/chmboxes.c ****   mbp->wrptr  = buf;
  37               		.loc 1 93 3 is_stmt 1 view .LVU9
  38               		.loc 1 93 15 is_stmt 0 view .LVU10
  39 000c 7583      		std Z+5,r23
  40 000e 6483      		std Z+4,r22
  94:../../os/oslib/src/chmboxes.c ****   mbp->top    = &buf[n];
  41               		.loc 1 94 3 is_stmt 1 view .LVU11
  42               		.loc 1 94 21 is_stmt 0 view .LVU12
  43 0010 440F      		lsl r20
  44 0012 551F      		rol r21
  45               	.LVL1:
  46               		.loc 1 94 17 view .LVU13
  47 0014 240F      		add r18,r20
  48 0016 351F      		adc r19,r21
  49               		.loc 1 94 15 view .LVU14
  50 0018 3383      		std Z+3,r19
  51 001a 2283      		std Z+2,r18
  95:../../os/oslib/src/chmboxes.c ****   mbp->cnt    = (size_t)0;
  52               		.loc 1 95 3 is_stmt 1 view .LVU15
  53               		.loc 1 95 15 is_stmt 0 view .LVU16
  54 001c 1186      		std Z+9,__zero_reg__
  55 001e 1086      		std Z+8,__zero_reg__
  96:../../os/oslib/src/chmboxes.c ****   mbp->reset  = false;
  56               		.loc 1 96 3 is_stmt 1 view .LVU17
  57               		.loc 1 96 15 is_stmt 0 view .LVU18
  58 0020 1286      		std Z+10,__zero_reg__
  97:../../os/oslib/src/chmboxes.c ****   chThdQueueObjectInit(&mbp->qw);
  59               		.loc 1 97 3 is_stmt 1 view .LVU19
  60 0022 1386      		std Z+11,__zero_reg__
  98:../../os/oslib/src/chmboxes.c ****   chThdQueueObjectInit(&mbp->qr);
  61               		.loc 1 98 3 view .LVU20
  62 0024 1486      		std Z+12,__zero_reg__
  63               	/* epilogue start */
  99:../../os/oslib/src/chmboxes.c **** }
  64               		.loc 1 99 1 is_stmt 0 view .LVU21
  65 0026 0895      		ret
  66               		.cfi_endproc
  67               	.LFE98:
  69               		.section	.text.chMBReset,"ax",@progbits
  70               	.global	chMBReset
  72               	chMBReset:
  73               	.LVL2:
  74               	.LFB99:
 100:../../os/oslib/src/chmboxes.c **** 
 101:../../os/oslib/src/chmboxes.c **** /**
 102:../../os/oslib/src/chmboxes.c ****  * @brief   Resets a @p mailbox_t object.
 103:../../os/oslib/src/chmboxes.c ****  * @details All the waiting threads are resumed with status @p MSG_RESET and
 104:../../os/oslib/src/chmboxes.c ****  *          the queued messages are lost.
 105:../../os/oslib/src/chmboxes.c ****  * @post    The mailbox is in reset state, all operations will fail and
 106:../../os/oslib/src/chmboxes.c ****  *          return @p MSG_RESET until the mailbox is enabled again using
 107:../../os/oslib/src/chmboxes.c ****  *          @p chMBResumeX().
 108:../../os/oslib/src/chmboxes.c ****  *
 109:../../os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 110:../../os/oslib/src/chmboxes.c ****  *
 111:../../os/oslib/src/chmboxes.c ****  * @api
 112:../../os/oslib/src/chmboxes.c ****  */
 113:../../os/oslib/src/chmboxes.c **** void chMBReset(mailbox_t *mbp) {
  75               		.loc 1 113 32 is_stmt 1 view -0
  76               		.cfi_startproc
  77               		.loc 1 113 32 is_stmt 0 view .LVU23
  78 0000 CF93      		push r28
  79               	.LCFI0:
  80               		.cfi_def_cfa_offset 3
  81               		.cfi_offset 28, -2
  82 0002 DF93      		push r29
  83               	.LCFI1:
  84               		.cfi_def_cfa_offset 4
  85               		.cfi_offset 29, -3
  86               	/* prologue: function */
  87               	/* frame size = 0 */
  88               	/* stack size = 2 */
  89               	.L__stack_usage = 2
  90 0004 EC01      		movw r28,r24
 114:../../os/oslib/src/chmboxes.c **** 
 115:../../os/oslib/src/chmboxes.c ****   chSysLock();
  91               		.loc 1 115 3 is_stmt 1 view .LVU24
  92               	.LBB58:
  93               	.LBI58:
  94               		.file 2 "../../os/common/ports/AVR/chcore.h"
   1:../../os/common/ports/AVR/chcore.h **** /*
   2:../../os/common/ports/AVR/chcore.h ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:../../os/common/ports/AVR/chcore.h ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:../../os/common/ports/AVR/chcore.h **** 
   5:../../os/common/ports/AVR/chcore.h ****     This file is part of ChibiOS.
   6:../../os/common/ports/AVR/chcore.h **** 
   7:../../os/common/ports/AVR/chcore.h ****     ChibiOS is free software; you can redistribute it and/or modify
   8:../../os/common/ports/AVR/chcore.h ****     it under the terms of the GNU General Public License as published by
   9:../../os/common/ports/AVR/chcore.h ****     the Free Software Foundation version 3 of the License.
  10:../../os/common/ports/AVR/chcore.h **** 
  11:../../os/common/ports/AVR/chcore.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../os/common/ports/AVR/chcore.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../os/common/ports/AVR/chcore.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../os/common/ports/AVR/chcore.h ****     GNU General Public License for more details.
  15:../../os/common/ports/AVR/chcore.h **** 
  16:../../os/common/ports/AVR/chcore.h ****     You should have received a copy of the GNU General Public License
  17:../../os/common/ports/AVR/chcore.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../os/common/ports/AVR/chcore.h **** */
  19:../../os/common/ports/AVR/chcore.h **** 
  20:../../os/common/ports/AVR/chcore.h **** /**
  21:../../os/common/ports/AVR/chcore.h ****  * @file    chcore.h
  22:../../os/common/ports/AVR/chcore.h ****  * @brief   AVR port macros and structures.
  23:../../os/common/ports/AVR/chcore.h ****  *
  24:../../os/common/ports/AVR/chcore.h ****  * @addtogroup AVR_CORE
  25:../../os/common/ports/AVR/chcore.h ****  * @{
  26:../../os/common/ports/AVR/chcore.h ****  */
  27:../../os/common/ports/AVR/chcore.h **** 
  28:../../os/common/ports/AVR/chcore.h **** #ifndef CHCORE_H
  29:../../os/common/ports/AVR/chcore.h **** #define CHCORE_H
  30:../../os/common/ports/AVR/chcore.h **** 
  31:../../os/common/ports/AVR/chcore.h **** #include <avr/io.h>
  32:../../os/common/ports/AVR/chcore.h **** #include <avr/interrupt.h>
  33:../../os/common/ports/AVR/chcore.h **** 
  34:../../os/common/ports/AVR/chcore.h **** extern bool __avr_in_isr;
  35:../../os/common/ports/AVR/chcore.h **** 
  36:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  37:../../os/common/ports/AVR/chcore.h **** /* Module constants.                                                         */
  38:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  39:../../os/common/ports/AVR/chcore.h **** 
  40:../../os/common/ports/AVR/chcore.h **** /**
  41:../../os/common/ports/AVR/chcore.h ****  * @name    Port Capabilities and Constants
  42:../../os/common/ports/AVR/chcore.h ****  * @{
  43:../../os/common/ports/AVR/chcore.h ****  */
  44:../../os/common/ports/AVR/chcore.h **** /**
  45:../../os/common/ports/AVR/chcore.h ****  * @brief   This port supports a realtime counter.
  46:../../os/common/ports/AVR/chcore.h ****  */
  47:../../os/common/ports/AVR/chcore.h **** #define PORT_SUPPORTS_RT                FALSE
  48:../../os/common/ports/AVR/chcore.h **** 
  49:../../os/common/ports/AVR/chcore.h **** /**
  50:../../os/common/ports/AVR/chcore.h ****  * @brief   Natural alignment constant.
  51:../../os/common/ports/AVR/chcore.h ****  * @note    It is the minimum alignment for pointer-size variables.
  52:../../os/common/ports/AVR/chcore.h ****  */
  53:../../os/common/ports/AVR/chcore.h **** #define PORT_NATURAL_ALIGN              1U
  54:../../os/common/ports/AVR/chcore.h **** 
  55:../../os/common/ports/AVR/chcore.h **** /**
  56:../../os/common/ports/AVR/chcore.h ****  * @brief   Stack alignment constant.
  57:../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignment required for the stack pointer.
  58:../../os/common/ports/AVR/chcore.h ****  */
  59:../../os/common/ports/AVR/chcore.h **** #define PORT_STACK_ALIGN                1U
  60:../../os/common/ports/AVR/chcore.h **** 
  61:../../os/common/ports/AVR/chcore.h **** /**
  62:../../os/common/ports/AVR/chcore.h ****  * @brief   Working Areas alignment constant.
  63:../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignment to be enforced for thread working areas.
  64:../../os/common/ports/AVR/chcore.h ****  */
  65:../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA_ALIGN         1U
  66:../../os/common/ports/AVR/chcore.h **** /** @} */
  67:../../os/common/ports/AVR/chcore.h **** 
  68:../../os/common/ports/AVR/chcore.h **** /**
  69:../../os/common/ports/AVR/chcore.h ****  * @name    Architecture and Compiler
  70:../../os/common/ports/AVR/chcore.h ****  * @{
  71:../../os/common/ports/AVR/chcore.h ****  */
  72:../../os/common/ports/AVR/chcore.h **** /**
  73:../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining an AVR architecture.
  74:../../os/common/ports/AVR/chcore.h ****  */
  75:../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR
  76:../../os/common/ports/AVR/chcore.h **** 
  77:../../os/common/ports/AVR/chcore.h **** /**
  78:../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining the specific AVR architecture.
  79:../../os/common/ports/AVR/chcore.h ****  */
  80:../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR_MEGAAVR
  81:../../os/common/ports/AVR/chcore.h **** 
  82:../../os/common/ports/AVR/chcore.h **** /**
  83:../../os/common/ports/AVR/chcore.h ****  * @brief   Name of the implemented architecture.
  84:../../os/common/ports/AVR/chcore.h ****  */
  85:../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_NAME          "AVR"
  86:../../os/common/ports/AVR/chcore.h **** 
  87:../../os/common/ports/AVR/chcore.h **** /**
  88:../../os/common/ports/AVR/chcore.h ****  * @brief   Name of the architecture variant.
  89:../../os/common/ports/AVR/chcore.h ****  */
  90:../../os/common/ports/AVR/chcore.h **** #define PORT_CORE_VARIANT_NAME          "MegaAVR"
  91:../../os/common/ports/AVR/chcore.h **** 
  92:../../os/common/ports/AVR/chcore.h **** /**
  93:../../os/common/ports/AVR/chcore.h ****  * @brief   Compiler name and version.
  94:../../os/common/ports/AVR/chcore.h ****  */
  95:../../os/common/ports/AVR/chcore.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
  96:../../os/common/ports/AVR/chcore.h **** #define PORT_COMPILER_NAME              "GCC " __VERSION__
  97:../../os/common/ports/AVR/chcore.h **** 
  98:../../os/common/ports/AVR/chcore.h **** #else
  99:../../os/common/ports/AVR/chcore.h **** #error "unsupported compiler"
 100:../../os/common/ports/AVR/chcore.h **** #endif
 101:../../os/common/ports/AVR/chcore.h **** 
 102:../../os/common/ports/AVR/chcore.h **** /**
 103:../../os/common/ports/AVR/chcore.h ****  * @brief   Port-specific information string.
 104:../../os/common/ports/AVR/chcore.h ****  */
 105:../../os/common/ports/AVR/chcore.h **** #define PORT_INFO                       "None"
 106:../../os/common/ports/AVR/chcore.h **** /** @} */
 107:../../os/common/ports/AVR/chcore.h **** 
 108:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 109:../../os/common/ports/AVR/chcore.h **** /* Module pre-compile time settings.                                         */
 110:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 111:../../os/common/ports/AVR/chcore.h **** 
 112:../../os/common/ports/AVR/chcore.h **** /**
 113:../../os/common/ports/AVR/chcore.h ****  * @brief   Stack size for the system idle thread.
 114:../../os/common/ports/AVR/chcore.h ****  * @details This size depends on the idle thread implementation, usually
 115:../../os/common/ports/AVR/chcore.h ****  *          the idle thread should take no more space than those reserved
 116:../../os/common/ports/AVR/chcore.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 117:../../os/common/ports/AVR/chcore.h ****  */
 118:../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 119:../../os/common/ports/AVR/chcore.h **** #define PORT_IDLE_THREAD_STACK_SIZE     8
 120:../../os/common/ports/AVR/chcore.h **** #endif
 121:../../os/common/ports/AVR/chcore.h **** 
 122:../../os/common/ports/AVR/chcore.h **** /**
 123:../../os/common/ports/AVR/chcore.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 124:../../os/common/ports/AVR/chcore.h ****  * @details This constant is used in the calculation of the correct working
 125:../../os/common/ports/AVR/chcore.h ****  *          area size.
 126:../../os/common/ports/AVR/chcore.h ****  */
 127:../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 128:../../os/common/ports/AVR/chcore.h **** #define PORT_INT_REQUIRED_STACK         32
 129:../../os/common/ports/AVR/chcore.h **** #endif
 130:../../os/common/ports/AVR/chcore.h **** 
 131:../../os/common/ports/AVR/chcore.h **** /**
 132:../../os/common/ports/AVR/chcore.h ****  * @brief   Enables a "wait for interrupt" instruction in the idle loop.
 133:../../os/common/ports/AVR/chcore.h ****  */
 134:../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_AVR_WFI_SLEEP_IDLE) || defined(__DOXYGEN__)
 135:../../os/common/ports/AVR/chcore.h **** #define PORT_AVR_WFI_SLEEP_IDLE      FALSE
 136:../../os/common/ports/AVR/chcore.h **** #endif
 137:../../os/common/ports/AVR/chcore.h **** 
 138:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 139:../../os/common/ports/AVR/chcore.h **** /* Derived constants and error checks.                                       */
 140:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 141:../../os/common/ports/AVR/chcore.h **** 
 142:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 143:../../os/common/ports/AVR/chcore.h **** /* Module data structures and types.                                         */
 144:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 145:../../os/common/ports/AVR/chcore.h **** 
 146:../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 147:../../os/common/ports/AVR/chcore.h ****    asm module.*/
 148:../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 149:../../os/common/ports/AVR/chcore.h **** 
 150:../../os/common/ports/AVR/chcore.h **** /**
 151:../../os/common/ports/AVR/chcore.h ****  * @brief   Type of stack and memory alignment enforcement.
 152:../../os/common/ports/AVR/chcore.h ****  * @note    In this architecture the stack alignment is enforced to 8 bits.
 153:../../os/common/ports/AVR/chcore.h ****  */
 154:../../os/common/ports/AVR/chcore.h **** typedef uint8_t stkalign_t;
 155:../../os/common/ports/AVR/chcore.h **** 
 156:../../os/common/ports/AVR/chcore.h **** /**
 157:../../os/common/ports/AVR/chcore.h ****  * @brief   Interrupt saved context.
 158:../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the stack frame saved during a
 159:../../os/common/ports/AVR/chcore.h ****  *          preemption-capable interrupt handler.
 160:../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 161:../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 162:../../os/common/ports/AVR/chcore.h ****  */
 163:../../os/common/ports/AVR/chcore.h **** struct port_extctx {
 164:../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 165:../../os/common/ports/AVR/chcore.h ****   uint8_t       r31;
 166:../../os/common/ports/AVR/chcore.h ****   uint8_t       r30;
 167:../../os/common/ports/AVR/chcore.h ****   uint8_t       r27;
 168:../../os/common/ports/AVR/chcore.h ****   uint8_t       r26;
 169:../../os/common/ports/AVR/chcore.h ****   uint8_t       r25;
 170:../../os/common/ports/AVR/chcore.h ****   uint8_t       r24;
 171:../../os/common/ports/AVR/chcore.h ****   uint8_t       r23;
 172:../../os/common/ports/AVR/chcore.h ****   uint8_t       r22;
 173:../../os/common/ports/AVR/chcore.h ****   uint8_t       r21;
 174:../../os/common/ports/AVR/chcore.h ****   uint8_t       r20;
 175:../../os/common/ports/AVR/chcore.h ****   uint8_t       r19;
 176:../../os/common/ports/AVR/chcore.h ****   uint8_t       r18;
 177:../../os/common/ports/AVR/chcore.h ****   uint8_t       sr;
 178:../../os/common/ports/AVR/chcore.h ****   uint8_t       r1;
 179:../../os/common/ports/AVR/chcore.h ****   uint8_t       r0;
 180:../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 181:../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 182:../../os/common/ports/AVR/chcore.h **** #endif
 183:../../os/common/ports/AVR/chcore.h ****   uint16_t      pc;
 184:../../os/common/ports/AVR/chcore.h **** };
 185:../../os/common/ports/AVR/chcore.h **** 
 186:../../os/common/ports/AVR/chcore.h **** /**
 187:../../os/common/ports/AVR/chcore.h ****  * @brief   System saved context.
 188:../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the inner stack frame during a context
 189:../../os/common/ports/AVR/chcore.h ****  *          switching.
 190:../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 191:../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 192:../../os/common/ports/AVR/chcore.h ****  * @note    LR is stored in the caller context so it is not present in this
 193:../../os/common/ports/AVR/chcore.h ****  *          structure.
 194:../../os/common/ports/AVR/chcore.h ****  */
 195:../../os/common/ports/AVR/chcore.h **** struct port_intctx {
 196:../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 197:../../os/common/ports/AVR/chcore.h ****   uint8_t       r29;
 198:../../os/common/ports/AVR/chcore.h ****   uint8_t       r28;
 199:../../os/common/ports/AVR/chcore.h ****   uint8_t       r17;
 200:../../os/common/ports/AVR/chcore.h ****   uint8_t       r16;
 201:../../os/common/ports/AVR/chcore.h ****   uint8_t       r15;
 202:../../os/common/ports/AVR/chcore.h ****   uint8_t       r14;
 203:../../os/common/ports/AVR/chcore.h ****   uint8_t       r13;
 204:../../os/common/ports/AVR/chcore.h ****   uint8_t       r12;
 205:../../os/common/ports/AVR/chcore.h ****   uint8_t       r11;
 206:../../os/common/ports/AVR/chcore.h ****   uint8_t       r10;
 207:../../os/common/ports/AVR/chcore.h ****   uint8_t       r9;
 208:../../os/common/ports/AVR/chcore.h ****   uint8_t       r8;
 209:../../os/common/ports/AVR/chcore.h ****   uint8_t       r7;
 210:../../os/common/ports/AVR/chcore.h ****   uint8_t       r6;
 211:../../os/common/ports/AVR/chcore.h ****   uint8_t       r5;
 212:../../os/common/ports/AVR/chcore.h ****   uint8_t       r4;
 213:../../os/common/ports/AVR/chcore.h ****   uint8_t       r3;
 214:../../os/common/ports/AVR/chcore.h ****   uint8_t       r2;
 215:../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 216:../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 217:../../os/common/ports/AVR/chcore.h **** #endif
 218:../../os/common/ports/AVR/chcore.h ****   uint8_t       pcl;
 219:../../os/common/ports/AVR/chcore.h ****   uint8_t       pch;
 220:../../os/common/ports/AVR/chcore.h **** };
 221:../../os/common/ports/AVR/chcore.h **** 
 222:../../os/common/ports/AVR/chcore.h **** /**
 223:../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p thread_t structure.
 224:../../os/common/ports/AVR/chcore.h ****  * @details This structure usually contains just the saved stack pointer
 225:../../os/common/ports/AVR/chcore.h ****  *          defined as a pointer to a @p port_intctx structure.
 226:../../os/common/ports/AVR/chcore.h ****  */
 227:../../os/common/ports/AVR/chcore.h **** struct port_context {
 228:../../os/common/ports/AVR/chcore.h ****   struct port_intctx *sp;
 229:../../os/common/ports/AVR/chcore.h **** };
 230:../../os/common/ports/AVR/chcore.h **** 
 231:../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 232:../../os/common/ports/AVR/chcore.h **** 
 233:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 234:../../os/common/ports/AVR/chcore.h **** /* Module macros.                                                            */
 235:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 236:../../os/common/ports/AVR/chcore.h **** 
 237:../../os/common/ports/AVR/chcore.h **** /**
 238:../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 239:../../os/common/ports/AVR/chcore.h ****  * @details This code usually setup the context switching frame represented
 240:../../os/common/ports/AVR/chcore.h ****  *          by an @p port_intctx structure.
 241:../../os/common/ports/AVR/chcore.h ****  */
 242:../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__) || defined(__DOXYGEN__)
 243:../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 244:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 245:../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 246:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 247:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 248:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 249:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 250:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcx = (uint8_t)0;                                             \
 251:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 252:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 253:../../os/common/ports/AVR/chcore.h **** }
 254:../../os/common/ports/AVR/chcore.h **** #else /* !__AVR_3_BYTE_PC__ */
 255:../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 256:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 257:../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 258:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 259:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 260:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 261:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 262:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 263:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 264:../../os/common/ports/AVR/chcore.h **** }
 265:../../os/common/ports/AVR/chcore.h **** #endif /* !__AVR_3_BYTE_PC__ */
 266:../../os/common/ports/AVR/chcore.h **** 
 267:../../os/common/ports/AVR/chcore.h **** /**
 268:../../os/common/ports/AVR/chcore.h ****  * @brief   Computes the thread working area global size.
 269:../../os/common/ports/AVR/chcore.h ****  * @note    There is no need to perform alignments in this macro.
 270:../../os/common/ports/AVR/chcore.h ****  */
 271:../../os/common/ports/AVR/chcore.h **** #define PORT_WA_SIZE(n) ((sizeof(struct port_intctx) - 1) +                \
 272:../../os/common/ports/AVR/chcore.h ****                          (sizeof(struct port_extctx) - 1) +                \
 273:../../os/common/ports/AVR/chcore.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 274:../../os/common/ports/AVR/chcore.h **** 
 275:../../os/common/ports/AVR/chcore.h **** /**
 276:../../os/common/ports/AVR/chcore.h ****  * @brief   Static working area allocation.
 277:../../os/common/ports/AVR/chcore.h ****  * @details This macro is used to allocate a static thread working area
 278:../../os/common/ports/AVR/chcore.h ****  *          aligned as both position and size.
 279:../../os/common/ports/AVR/chcore.h ****  *
 280:../../os/common/ports/AVR/chcore.h ****  * @param[in] s         the name to be assigned to the stack array
 281:../../os/common/ports/AVR/chcore.h ****  * @param[in] n         the stack size to be assigned to the thread
 282:../../os/common/ports/AVR/chcore.h ****  */
 283:../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA(s, n)                                             \
 284:../../os/common/ports/AVR/chcore.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 285:../../os/common/ports/AVR/chcore.h **** 
 286:../../os/common/ports/AVR/chcore.h **** /**
 287:../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 288:../../os/common/ports/AVR/chcore.h ****  */
 289:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_PRIORITY(n) false
 290:../../os/common/ports/AVR/chcore.h **** 
 291:../../os/common/ports/AVR/chcore.h **** /**
 292:../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 293:../../os/common/ports/AVR/chcore.h ****  */
 294:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_KERNEL_PRIORITY(n) false
 295:../../os/common/ports/AVR/chcore.h **** 
 296:../../os/common/ports/AVR/chcore.h **** /**
 297:../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ prologue code.
 298:../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 299:../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 300:../../os/common/ports/AVR/chcore.h ****  * @note    This code tricks the compiler to save all the specified registers
 301:../../os/common/ports/AVR/chcore.h ****  *          by "touching" them.
 302:../../os/common/ports/AVR/chcore.h ****  */
 303:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_PROLOGUE() {                                               \
 304:../../os/common/ports/AVR/chcore.h ****   asm ("" : : : "r18", "r19", "r20", "r21", "r22", "r23", "r24",            \
 305:../../os/common/ports/AVR/chcore.h ****                 "r25", "r26", "r27", "r30", "r31");                         \
 306:../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 307:../../os/common/ports/AVR/chcore.h **** }
 308:../../os/common/ports/AVR/chcore.h **** 
 309:../../os/common/ports/AVR/chcore.h **** /**
 310:../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ epilogue code.
 311:../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 312:../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 313:../../os/common/ports/AVR/chcore.h ****  */
 314:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_EPILOGUE() {                                               \
 315:../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = false;                                                     \
 316:../../os/common/ports/AVR/chcore.h ****   __dbg_check_lock();                                                       \
 317:../../os/common/ports/AVR/chcore.h ****   if (chSchIsPreemptionRequired())                                          \
 318:../../os/common/ports/AVR/chcore.h ****     chSchDoPreemption();                                                    \
 319:../../os/common/ports/AVR/chcore.h ****   __dbg_check_unlock();                                                     \
 320:../../os/common/ports/AVR/chcore.h **** }
 321:../../os/common/ports/AVR/chcore.h **** 
 322:../../os/common/ports/AVR/chcore.h **** /**
 323:../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ handler function declaration.
 324:../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 325:../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 326:../../os/common/ports/AVR/chcore.h ****  */
 327:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_HANDLER(id) ISR(id)
 328:../../os/common/ports/AVR/chcore.h **** 
 329:../../os/common/ports/AVR/chcore.h **** /**
 330:../../os/common/ports/AVR/chcore.h ****  * @brief   Fast IRQ handler function declaration.
 331:../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 332:../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 333:../../os/common/ports/AVR/chcore.h ****  */
 334:../../os/common/ports/AVR/chcore.h **** #define PORT_FAST_IRQ_HANDLER(id) ISR(id)
 335:../../os/common/ports/AVR/chcore.h **** 
 336:../../os/common/ports/AVR/chcore.h **** /**
 337:../../os/common/ports/AVR/chcore.h ****  * @brief   Performs a context switch between two threads.
 338:../../os/common/ports/AVR/chcore.h ****  * @details This is the most critical code in any port, this function
 339:../../os/common/ports/AVR/chcore.h ****  *          is responsible for the context switch between 2 threads.
 340:../../os/common/ports/AVR/chcore.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 341:../../os/common/ports/AVR/chcore.h ****  *          switch performance so optimize here as much as you can.
 342:../../os/common/ports/AVR/chcore.h ****  *
 343:../../os/common/ports/AVR/chcore.h ****  * @param[in] ntp       the thread to be switched in
 344:../../os/common/ports/AVR/chcore.h ****  * @param[in] otp       the thread to be switched out
 345:../../os/common/ports/AVR/chcore.h ****  */
 346:../../os/common/ports/AVR/chcore.h **** #define port_switch(ntp, otp) {                                             \
 347:../../os/common/ports/AVR/chcore.h ****   _port_switch(ntp, otp);                                                   \
 348:../../os/common/ports/AVR/chcore.h ****   asm volatile ("" : : : "memory");                                         \
 349:../../os/common/ports/AVR/chcore.h **** }
 350:../../os/common/ports/AVR/chcore.h **** 
 351:../../os/common/ports/AVR/chcore.h **** 
 352:../../os/common/ports/AVR/chcore.h **** /**
 353:../../os/common/ports/AVR/chcore.h ****  * @brief   Port-related initialization code.
 354:../../os/common/ports/AVR/chcore.h ****  * @note    This function is empty in this port.
 355:../../os/common/ports/AVR/chcore.h ****  */
 356:../../os/common/ports/AVR/chcore.h **** #define port_init(oip) {                                                    \
 357:../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 358:../../os/common/ports/AVR/chcore.h **** }
 359:../../os/common/ports/AVR/chcore.h **** 
 360:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 361:../../os/common/ports/AVR/chcore.h **** /* External declarations.                                                    */
 362:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 363:../../os/common/ports/AVR/chcore.h **** 
 364:../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 365:../../os/common/ports/AVR/chcore.h ****    asm module.*/
 366:../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 367:../../os/common/ports/AVR/chcore.h **** 
 368:../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 369:../../os/common/ports/AVR/chcore.h **** extern "C" {
 370:../../os/common/ports/AVR/chcore.h **** #endif
 371:../../os/common/ports/AVR/chcore.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 372:../../os/common/ports/AVR/chcore.h ****   void _port_thread_start(void);
 373:../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 374:../../os/common/ports/AVR/chcore.h **** }
 375:../../os/common/ports/AVR/chcore.h **** #endif
 376:../../os/common/ports/AVR/chcore.h **** 
 377:../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 378:../../os/common/ports/AVR/chcore.h **** 
 379:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 380:../../os/common/ports/AVR/chcore.h **** /* Module inline functions.                                                  */
 381:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 382:../../os/common/ports/AVR/chcore.h **** 
 383:../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 384:../../os/common/ports/AVR/chcore.h ****    asm module.*/
 385:../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 386:../../os/common/ports/AVR/chcore.h **** 
 387:../../os/common/ports/AVR/chcore.h **** /**
 388:../../os/common/ports/AVR/chcore.h ****  * @brief   Returns a word encoding the current interrupts status.
 389:../../os/common/ports/AVR/chcore.h ****  *
 390:../../os/common/ports/AVR/chcore.h ****  * @return              The interrupts status.
 391:../../os/common/ports/AVR/chcore.h ****  */
 392:../../os/common/ports/AVR/chcore.h **** static inline syssts_t port_get_irq_status(void) {
 393:../../os/common/ports/AVR/chcore.h **** 
 394:../../os/common/ports/AVR/chcore.h ****   return SREG;
 395:../../os/common/ports/AVR/chcore.h **** }
 396:../../os/common/ports/AVR/chcore.h **** 
 397:../../os/common/ports/AVR/chcore.h **** /**
 398:../../os/common/ports/AVR/chcore.h ****  * @brief   Checks the interrupt status.
 399:../../os/common/ports/AVR/chcore.h ****  *
 400:../../os/common/ports/AVR/chcore.h ****  * @param[in] sts       the interrupt status word
 401:../../os/common/ports/AVR/chcore.h ****  *
 402:../../os/common/ports/AVR/chcore.h ****  * @return              The interrupt status.
 403:../../os/common/ports/AVR/chcore.h ****  * @retval false        the word specified a disabled interrupts status.
 404:../../os/common/ports/AVR/chcore.h ****  * @retval true         the word specified an enabled interrupts status.
 405:../../os/common/ports/AVR/chcore.h ****  */
 406:../../os/common/ports/AVR/chcore.h **** static inline bool port_irq_enabled(syssts_t sts) {
 407:../../os/common/ports/AVR/chcore.h **** 
 408:../../os/common/ports/AVR/chcore.h ****   return (bool)((sts & 0x80) != 0);
 409:../../os/common/ports/AVR/chcore.h **** }
 410:../../os/common/ports/AVR/chcore.h **** 
 411:../../os/common/ports/AVR/chcore.h **** /**
 412:../../os/common/ports/AVR/chcore.h ****  * @brief   Determines the current execution context.
 413:../../os/common/ports/AVR/chcore.h ****  *
 414:../../os/common/ports/AVR/chcore.h ****  * @return              The execution context.
 415:../../os/common/ports/AVR/chcore.h ****  * @retval false        not running in ISR mode.
 416:../../os/common/ports/AVR/chcore.h ****  * @retval true         running in ISR mode.
 417:../../os/common/ports/AVR/chcore.h ****  */
 418:../../os/common/ports/AVR/chcore.h **** static inline bool port_is_isr_context(void) {
 419:../../os/common/ports/AVR/chcore.h **** 
 420:../../os/common/ports/AVR/chcore.h ****   return __avr_in_isr;
 421:../../os/common/ports/AVR/chcore.h **** }
 422:../../os/common/ports/AVR/chcore.h **** 
 423:../../os/common/ports/AVR/chcore.h **** /**
 424:../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-lock action.
 425:../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just disables interrupts but may perform more
 426:../../os/common/ports/AVR/chcore.h ****  *          actions.
 427:../../os/common/ports/AVR/chcore.h ****  */
 428:../../os/common/ports/AVR/chcore.h **** static inline void port_lock(void) {
  95               		.loc 2 428 20 view .LVU25
  96               	.LBB59:
 429:../../os/common/ports/AVR/chcore.h **** 
 430:../../os/common/ports/AVR/chcore.h ****   asm volatile ("cli" : : : "memory");
  97               		.loc 2 430 3 view .LVU26
  98               	/* #APP */
  99               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 100 0006 F894      		cli
 101               	 ;  0 "" 2
 102               	/* #NOAPP */
 103               	.LBE59:
 104               	.LBE58:
 105               		.loc 1 115 3 discriminator 1 view .LVU27
 106               		.loc 1 115 14 discriminator 1 view .LVU28
 116:../../os/oslib/src/chmboxes.c ****   chMBResetI(mbp);
 107               		.loc 1 116 3 view .LVU29
 108               	.LVL3:
 109               	.LBB60:
 110               	.LBI60:
 117:../../os/oslib/src/chmboxes.c ****   chSchRescheduleS();
 118:../../os/oslib/src/chmboxes.c ****   chSysUnlock();
 119:../../os/oslib/src/chmboxes.c **** }
 120:../../os/oslib/src/chmboxes.c **** 
 121:../../os/oslib/src/chmboxes.c **** /**
 122:../../os/oslib/src/chmboxes.c ****  * @brief   Resets a @p mailbox_t object.
 123:../../os/oslib/src/chmboxes.c ****  * @details All the waiting threads are resumed with status @p MSG_RESET and
 124:../../os/oslib/src/chmboxes.c ****  *          the queued messages are lost.
 125:../../os/oslib/src/chmboxes.c ****  * @post    The mailbox is in reset state, all operations will fail and
 126:../../os/oslib/src/chmboxes.c ****  *          return @p MSG_RESET until the mailbox is enabled again using
 127:../../os/oslib/src/chmboxes.c ****  *          @p chMBResumeX().
 128:../../os/oslib/src/chmboxes.c ****  *
 129:../../os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 130:../../os/oslib/src/chmboxes.c ****  *
 131:../../os/oslib/src/chmboxes.c ****  * @api
 132:../../os/oslib/src/chmboxes.c ****  */
 133:../../os/oslib/src/chmboxes.c **** void chMBResetI(mailbox_t *mbp) {
 111               		.loc 1 133 6 view .LVU30
 112               	.LBB61:
 134:../../os/oslib/src/chmboxes.c **** 
 135:../../os/oslib/src/chmboxes.c ****   chDbgCheckClassI();
 113               		.loc 1 135 21 view .LVU31
 136:../../os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 114               		.loc 1 136 3 view .LVU32
 115               		.loc 1 136 3 view .LVU33
 116               		.loc 1 136 3 discriminator 5 view .LVU34
 137:../../os/oslib/src/chmboxes.c **** 
 138:../../os/oslib/src/chmboxes.c ****   mbp->wrptr = mbp->buffer;
 117               		.loc 1 138 3 view .LVU35
 118               		.loc 1 138 19 is_stmt 0 view .LVU36
 119 0008 8881      		ld r24,Y
 120 000a 9981      		ldd r25,Y+1
 121               	.LVL4:
 122               		.loc 1 138 14 view .LVU37
 123 000c 9D83      		std Y+5,r25
 124 000e 8C83      		std Y+4,r24
 139:../../os/oslib/src/chmboxes.c ****   mbp->rdptr = mbp->buffer;
 125               		.loc 1 139 3 is_stmt 1 view .LVU38
 126               		.loc 1 139 14 is_stmt 0 view .LVU39
 127 0010 9F83      		std Y+7,r25
 128 0012 8E83      		std Y+6,r24
 140:../../os/oslib/src/chmboxes.c ****   mbp->cnt   = (size_t)0;
 129               		.loc 1 140 3 is_stmt 1 view .LVU40
 130               		.loc 1 140 14 is_stmt 0 view .LVU41
 131 0014 1986      		std Y+9,__zero_reg__
 132 0016 1886      		std Y+8,__zero_reg__
 141:../../os/oslib/src/chmboxes.c ****   mbp->reset = true;
 133               		.loc 1 141 3 is_stmt 1 view .LVU42
 134               		.loc 1 141 14 is_stmt 0 view .LVU43
 135 0018 81E0      		ldi r24,lo8(1)
 136 001a 8A87      		std Y+10,r24
 142:../../os/oslib/src/chmboxes.c ****   chThdDequeueAllI(&mbp->qw, MSG_RESET);
 137               		.loc 1 142 3 is_stmt 1 view .LVU44
 138 001c 6EEF      		ldi r22,lo8(-2)
 139 001e 7FEF      		ldi r23,lo8(-1)
 140 0020 CE01      		movw r24,r28
 141 0022 0B96      		adiw r24,11
 142 0024 0E94 0000 		call chThdDequeueAllI
 143               	.LVL5:
 143:../../os/oslib/src/chmboxes.c ****   chThdDequeueAllI(&mbp->qr, MSG_RESET);
 144               		.loc 1 143 3 view .LVU45
 145 0028 6EEF      		ldi r22,lo8(-2)
 146 002a 7FEF      		ldi r23,lo8(-1)
 147 002c CE01      		movw r24,r28
 148 002e 0C96      		adiw r24,12
 149 0030 0E94 0000 		call chThdDequeueAllI
 150               	.LVL6:
 151               		.loc 1 143 3 is_stmt 0 view .LVU46
 152               	.LBE61:
 153               	.LBE60:
 117:../../os/oslib/src/chmboxes.c ****   chSysUnlock();
 154               		.loc 1 117 3 is_stmt 1 view .LVU47
 155 0034 0E94 0000 		call chSchRescheduleS
 156               	.LVL7:
 118:../../os/oslib/src/chmboxes.c **** }
 157               		.loc 1 118 3 view .LVU48
 118:../../os/oslib/src/chmboxes.c **** }
 158               		.loc 1 118 3 view .LVU49
 159               	.LBB62:
 160               	.LBI62:
 431:../../os/common/ports/AVR/chcore.h **** }
 432:../../os/common/ports/AVR/chcore.h **** 
 433:../../os/common/ports/AVR/chcore.h **** /**
 434:../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-unlock action.
 435:../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just enables interrupts but may perform more
 436:../../os/common/ports/AVR/chcore.h ****  *          actions.
 437:../../os/common/ports/AVR/chcore.h ****  */
 438:../../os/common/ports/AVR/chcore.h **** static inline void port_unlock(void) {
 161               		.loc 2 438 20 view .LVU50
 162               	.LBB63:
 439:../../os/common/ports/AVR/chcore.h **** 
 440:../../os/common/ports/AVR/chcore.h ****   asm volatile ("sei" : : : "memory");
 163               		.loc 2 440 3 view .LVU51
 164               	/* #APP */
 165               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 166 0038 7894      		sei
 167               	 ;  0 "" 2
 168               	/* #NOAPP */
 169               	.LBE63:
 170               	.LBE62:
 118:../../os/oslib/src/chmboxes.c **** }
 171               		.loc 1 118 16 discriminator 1 view .LVU52
 172               	/* epilogue start */
 119:../../os/oslib/src/chmboxes.c **** 
 173               		.loc 1 119 1 is_stmt 0 view .LVU53
 174 003a DF91      		pop r29
 175 003c CF91      		pop r28
 176               	.LVL8:
 119:../../os/oslib/src/chmboxes.c **** 
 177               		.loc 1 119 1 view .LVU54
 178 003e 0895      		ret
 179               		.cfi_endproc
 180               	.LFE99:
 182               		.section	.text.chMBResetI,"ax",@progbits
 183               	.global	chMBResetI
 185               	chMBResetI:
 186               	.LVL9:
 187               	.LFB100:
 133:../../os/oslib/src/chmboxes.c **** 
 188               		.loc 1 133 33 is_stmt 1 view -0
 189               		.cfi_startproc
 133:../../os/oslib/src/chmboxes.c **** 
 190               		.loc 1 133 33 is_stmt 0 view .LVU56
 191 0000 CF93      		push r28
 192               	.LCFI2:
 193               		.cfi_def_cfa_offset 3
 194               		.cfi_offset 28, -2
 195 0002 DF93      		push r29
 196               	.LCFI3:
 197               		.cfi_def_cfa_offset 4
 198               		.cfi_offset 29, -3
 199               	/* prologue: function */
 200               	/* frame size = 0 */
 201               	/* stack size = 2 */
 202               	.L__stack_usage = 2
 203 0004 EC01      		movw r28,r24
 135:../../os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 204               		.loc 1 135 21 is_stmt 1 view .LVU57
 136:../../os/oslib/src/chmboxes.c **** 
 205               		.loc 1 136 3 view .LVU58
 136:../../os/oslib/src/chmboxes.c **** 
 206               		.loc 1 136 3 view .LVU59
 136:../../os/oslib/src/chmboxes.c **** 
 207               		.loc 1 136 3 discriminator 5 view .LVU60
 138:../../os/oslib/src/chmboxes.c ****   mbp->rdptr = mbp->buffer;
 208               		.loc 1 138 3 view .LVU61
 138:../../os/oslib/src/chmboxes.c ****   mbp->rdptr = mbp->buffer;
 209               		.loc 1 138 19 is_stmt 0 view .LVU62
 210 0006 8881      		ld r24,Y
 211 0008 9981      		ldd r25,Y+1
 212               	.LVL10:
 138:../../os/oslib/src/chmboxes.c ****   mbp->rdptr = mbp->buffer;
 213               		.loc 1 138 14 view .LVU63
 214 000a 9D83      		std Y+5,r25
 215 000c 8C83      		std Y+4,r24
 139:../../os/oslib/src/chmboxes.c ****   mbp->cnt   = (size_t)0;
 216               		.loc 1 139 3 is_stmt 1 view .LVU64
 139:../../os/oslib/src/chmboxes.c ****   mbp->cnt   = (size_t)0;
 217               		.loc 1 139 14 is_stmt 0 view .LVU65
 218 000e 9F83      		std Y+7,r25
 219 0010 8E83      		std Y+6,r24
 140:../../os/oslib/src/chmboxes.c ****   mbp->reset = true;
 220               		.loc 1 140 3 is_stmt 1 view .LVU66
 140:../../os/oslib/src/chmboxes.c ****   mbp->reset = true;
 221               		.loc 1 140 14 is_stmt 0 view .LVU67
 222 0012 1986      		std Y+9,__zero_reg__
 223 0014 1886      		std Y+8,__zero_reg__
 141:../../os/oslib/src/chmboxes.c ****   chThdDequeueAllI(&mbp->qw, MSG_RESET);
 224               		.loc 1 141 3 is_stmt 1 view .LVU68
 141:../../os/oslib/src/chmboxes.c ****   chThdDequeueAllI(&mbp->qw, MSG_RESET);
 225               		.loc 1 141 14 is_stmt 0 view .LVU69
 226 0016 81E0      		ldi r24,lo8(1)
 227 0018 8A87      		std Y+10,r24
 142:../../os/oslib/src/chmboxes.c ****   chThdDequeueAllI(&mbp->qr, MSG_RESET);
 228               		.loc 1 142 3 is_stmt 1 view .LVU70
 229 001a 6EEF      		ldi r22,lo8(-2)
 230 001c 7FEF      		ldi r23,lo8(-1)
 231 001e CE01      		movw r24,r28
 232 0020 0B96      		adiw r24,11
 233 0022 0E94 0000 		call chThdDequeueAllI
 234               	.LVL11:
 235               		.loc 1 143 3 view .LVU71
 236 0026 6EEF      		ldi r22,lo8(-2)
 237 0028 7FEF      		ldi r23,lo8(-1)
 238 002a CE01      		movw r24,r28
 239 002c 0C96      		adiw r24,12
 240               	/* epilogue start */
 144:../../os/oslib/src/chmboxes.c **** }
 241               		.loc 1 144 1 is_stmt 0 view .LVU72
 242 002e DF91      		pop r29
 243 0030 CF91      		pop r28
 244               	.LVL12:
 143:../../os/oslib/src/chmboxes.c **** }
 245               		.loc 1 143 3 view .LVU73
 246 0032 0C94 0000 		jmp chThdDequeueAllI
 247               	.LVL13:
 143:../../os/oslib/src/chmboxes.c **** }
 248               		.loc 1 143 3 view .LVU74
 249               		.cfi_endproc
 250               	.LFE100:
 252               		.section	.text.chMBPostTimeoutS,"ax",@progbits
 253               	.global	chMBPostTimeoutS
 255               	chMBPostTimeoutS:
 256               	.LVL14:
 257               	.LFB102:
 145:../../os/oslib/src/chmboxes.c **** 
 146:../../os/oslib/src/chmboxes.c **** /**
 147:../../os/oslib/src/chmboxes.c ****  * @brief   Posts a message into a mailbox.
 148:../../os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 149:../../os/oslib/src/chmboxes.c ****  *          available or the specified time runs out.
 150:../../os/oslib/src/chmboxes.c ****  *
 151:../../os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 152:../../os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 153:../../os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 154:../../os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 155:../../os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 156:../../os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 157:../../os/oslib/src/chmboxes.c ****  *                      .
 158:../../os/oslib/src/chmboxes.c ****  * @return              The operation status.
 159:../../os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 160:../../os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 161:../../os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 162:../../os/oslib/src/chmboxes.c ****  *
 163:../../os/oslib/src/chmboxes.c ****  * @api
 164:../../os/oslib/src/chmboxes.c ****  */
 165:../../os/oslib/src/chmboxes.c **** msg_t chMBPostTimeout(mailbox_t *mbp, msg_t msg, sysinterval_t timeout) {
 166:../../os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 167:../../os/oslib/src/chmboxes.c **** 
 168:../../os/oslib/src/chmboxes.c ****   chSysLock();
 169:../../os/oslib/src/chmboxes.c ****   rdymsg = chMBPostTimeoutS(mbp, msg, timeout);
 170:../../os/oslib/src/chmboxes.c ****   chSysUnlock();
 171:../../os/oslib/src/chmboxes.c **** 
 172:../../os/oslib/src/chmboxes.c ****   return rdymsg;
 173:../../os/oslib/src/chmboxes.c **** }
 174:../../os/oslib/src/chmboxes.c **** 
 175:../../os/oslib/src/chmboxes.c **** /**
 176:../../os/oslib/src/chmboxes.c ****  * @brief   Posts a message into a mailbox.
 177:../../os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 178:../../os/oslib/src/chmboxes.c ****  *          available or the specified time runs out.
 179:../../os/oslib/src/chmboxes.c ****  *
 180:../../os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 181:../../os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 182:../../os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 183:../../os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 184:../../os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 185:../../os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 186:../../os/oslib/src/chmboxes.c ****  *                      .
 187:../../os/oslib/src/chmboxes.c ****  * @return              The operation status.
 188:../../os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 189:../../os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 190:../../os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 191:../../os/oslib/src/chmboxes.c ****  *
 192:../../os/oslib/src/chmboxes.c ****  * @sclass
 193:../../os/oslib/src/chmboxes.c ****  */
 194:../../os/oslib/src/chmboxes.c **** msg_t chMBPostTimeoutS(mailbox_t *mbp, msg_t msg, sysinterval_t timeout) {
 258               		.loc 1 194 74 is_stmt 1 view -0
 259               		.cfi_startproc
 260               		.loc 1 194 74 is_stmt 0 view .LVU76
 261 0000 AF92      		push r10
 262               	.LCFI4:
 263               		.cfi_def_cfa_offset 3
 264               		.cfi_offset 10, -2
 265 0002 BF92      		push r11
 266               	.LCFI5:
 267               		.cfi_def_cfa_offset 4
 268               		.cfi_offset 11, -3
 269 0004 CF92      		push r12
 270               	.LCFI6:
 271               		.cfi_def_cfa_offset 5
 272               		.cfi_offset 12, -4
 273 0006 DF92      		push r13
 274               	.LCFI7:
 275               		.cfi_def_cfa_offset 6
 276               		.cfi_offset 13, -5
 277 0008 EF92      		push r14
 278               	.LCFI8:
 279               		.cfi_def_cfa_offset 7
 280               		.cfi_offset 14, -6
 281 000a FF92      		push r15
 282               	.LCFI9:
 283               		.cfi_def_cfa_offset 8
 284               		.cfi_offset 15, -7
 285 000c 0F93      		push r16
 286               	.LCFI10:
 287               		.cfi_def_cfa_offset 9
 288               		.cfi_offset 16, -8
 289 000e 1F93      		push r17
 290               	.LCFI11:
 291               		.cfi_def_cfa_offset 10
 292               		.cfi_offset 17, -9
 293 0010 CF93      		push r28
 294               	.LCFI12:
 295               		.cfi_def_cfa_offset 11
 296               		.cfi_offset 28, -10
 297 0012 DF93      		push r29
 298               	.LCFI13:
 299               		.cfi_def_cfa_offset 12
 300               		.cfi_offset 29, -11
 301               	/* prologue: function */
 302               	/* frame size = 0 */
 303               	/* stack size = 10 */
 304               	.L__stack_usage = 10
 305 0014 EC01      		movw r28,r24
 306 0016 5B01      		movw r10,r22
 307 0018 6A01      		movw r12,r20
 195:../../os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 308               		.loc 1 195 3 is_stmt 1 view .LVU77
 196:../../os/oslib/src/chmboxes.c **** 
 197:../../os/oslib/src/chmboxes.c ****   chDbgCheckClassS();
 309               		.loc 1 197 21 view .LVU78
 198:../../os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 310               		.loc 1 198 3 view .LVU79
 311               		.loc 1 198 3 view .LVU80
 199:../../os/oslib/src/chmboxes.c **** 
 200:../../os/oslib/src/chmboxes.c ****   do {
 201:../../os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 202:../../os/oslib/src/chmboxes.c ****     if (mbp->reset) {
 203:../../os/oslib/src/chmboxes.c ****       return MSG_RESET;
 204:../../os/oslib/src/chmboxes.c ****     }
 205:../../os/oslib/src/chmboxes.c **** 
 206:../../os/oslib/src/chmboxes.c ****     /* Is there a free message slot in queue? if so then post.*/
 207:../../os/oslib/src/chmboxes.c ****     if (chMBGetFreeCountI(mbp) > (size_t)0) {
 208:../../os/oslib/src/chmboxes.c ****       *mbp->wrptr++ = msg;
 209:../../os/oslib/src/chmboxes.c ****       if (mbp->wrptr >= mbp->top) {
 210:../../os/oslib/src/chmboxes.c ****         mbp->wrptr = mbp->buffer;
 211:../../os/oslib/src/chmboxes.c ****       }
 212:../../os/oslib/src/chmboxes.c ****       mbp->cnt++;
 213:../../os/oslib/src/chmboxes.c **** 
 214:../../os/oslib/src/chmboxes.c ****       /* If there is a reader waiting then makes it ready.*/
 215:../../os/oslib/src/chmboxes.c ****       chThdDequeueNextI(&mbp->qr, MSG_OK);
 216:../../os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 217:../../os/oslib/src/chmboxes.c **** 
 218:../../os/oslib/src/chmboxes.c ****       return MSG_OK;
 219:../../os/oslib/src/chmboxes.c ****     }
 220:../../os/oslib/src/chmboxes.c **** 
 221:../../os/oslib/src/chmboxes.c ****     /* No space in the queue, waiting for a slot to become available.*/
 222:../../os/oslib/src/chmboxes.c ****     rdymsg = chThdEnqueueTimeoutS(&mbp->qw, timeout);
 312               		.loc 1 222 14 is_stmt 0 view .LVU81
 313 001a 7C01      		movw r14,r24
 314 001c 8BE0      		ldi r24,11
 315 001e E80E      		add r14,r24
 316 0020 F11C      		adc r15,__zero_reg__
 317               	.LVL15:
 318               		.loc 1 222 14 view .LVU82
 319 0022 00C0      		rjmp .L9
 320               	.LVL16:
 321               	.L14:
 207:../../os/oslib/src/chmboxes.c ****       *mbp->wrptr++ = msg;
 322               		.loc 1 207 5 is_stmt 1 view .LVU83
 323               	.LBB64:
 324               	.LBI64:
 325               		.file 3 "../../os/oslib/include/chmboxes.h"
   1:../../os/oslib/include/chmboxes.h **** /*
   2:../../os/oslib/include/chmboxes.h ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:../../os/oslib/include/chmboxes.h ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:../../os/oslib/include/chmboxes.h **** 
   5:../../os/oslib/include/chmboxes.h ****     This file is part of ChibiOS.
   6:../../os/oslib/include/chmboxes.h **** 
   7:../../os/oslib/include/chmboxes.h ****     ChibiOS is free software; you can redistribute it and/or modify
   8:../../os/oslib/include/chmboxes.h ****     it under the terms of the GNU General Public License as published by
   9:../../os/oslib/include/chmboxes.h ****     the Free Software Foundation version 3 of the License.
  10:../../os/oslib/include/chmboxes.h **** 
  11:../../os/oslib/include/chmboxes.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../os/oslib/include/chmboxes.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../os/oslib/include/chmboxes.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../os/oslib/include/chmboxes.h ****     GNU General Public License for more details.
  15:../../os/oslib/include/chmboxes.h **** 
  16:../../os/oslib/include/chmboxes.h ****     You should have received a copy of the GNU General Public License
  17:../../os/oslib/include/chmboxes.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../os/oslib/include/chmboxes.h **** */
  19:../../os/oslib/include/chmboxes.h **** 
  20:../../os/oslib/include/chmboxes.h **** /**
  21:../../os/oslib/include/chmboxes.h ****  * @file    oslib/include/chmboxes.h
  22:../../os/oslib/include/chmboxes.h ****  * @brief   Mailboxes macros and structures.
  23:../../os/oslib/include/chmboxes.h ****  *
  24:../../os/oslib/include/chmboxes.h ****  * @addtogroup oslib_mailboxes
  25:../../os/oslib/include/chmboxes.h ****  * @{
  26:../../os/oslib/include/chmboxes.h ****  */
  27:../../os/oslib/include/chmboxes.h **** 
  28:../../os/oslib/include/chmboxes.h **** #ifndef CHMBOXES_H
  29:../../os/oslib/include/chmboxes.h **** #define CHMBOXES_H
  30:../../os/oslib/include/chmboxes.h **** 
  31:../../os/oslib/include/chmboxes.h **** #if (CH_CFG_USE_MAILBOXES == TRUE) || defined(__DOXYGEN__)
  32:../../os/oslib/include/chmboxes.h **** 
  33:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
  34:../../os/oslib/include/chmboxes.h **** /* Module constants.                                                         */
  35:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
  36:../../os/oslib/include/chmboxes.h **** 
  37:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
  38:../../os/oslib/include/chmboxes.h **** /* Module pre-compile time settings.                                         */
  39:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
  40:../../os/oslib/include/chmboxes.h **** 
  41:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
  42:../../os/oslib/include/chmboxes.h **** /* Derived constants and error checks.                                       */
  43:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
  44:../../os/oslib/include/chmboxes.h **** 
  45:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
  46:../../os/oslib/include/chmboxes.h **** /* Module data structures and types.                                         */
  47:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
  48:../../os/oslib/include/chmboxes.h **** 
  49:../../os/oslib/include/chmboxes.h **** /**
  50:../../os/oslib/include/chmboxes.h ****  * @brief   Structure representing a mailbox object.
  51:../../os/oslib/include/chmboxes.h ****  */
  52:../../os/oslib/include/chmboxes.h **** typedef struct {
  53:../../os/oslib/include/chmboxes.h ****   msg_t                 *buffer;        /**< @brief Pointer to the mailbox
  54:../../os/oslib/include/chmboxes.h ****                                                     buffer.                 */
  55:../../os/oslib/include/chmboxes.h ****   msg_t                 *top;           /**< @brief Pointer to the location
  56:../../os/oslib/include/chmboxes.h ****                                                     after the buffer.       */
  57:../../os/oslib/include/chmboxes.h ****   msg_t                 *wrptr;         /**< @brief Write pointer.          */
  58:../../os/oslib/include/chmboxes.h ****   msg_t                 *rdptr;         /**< @brief Read pointer.           */
  59:../../os/oslib/include/chmboxes.h ****   size_t                cnt;            /**< @brief Messages in queue.      */
  60:../../os/oslib/include/chmboxes.h ****   bool                  reset;          /**< @brief True in reset state.    */
  61:../../os/oslib/include/chmboxes.h ****   threads_queue_t       qw;             /**< @brief Queued writers.         */
  62:../../os/oslib/include/chmboxes.h ****   threads_queue_t       qr;             /**< @brief Queued readers.         */
  63:../../os/oslib/include/chmboxes.h **** } mailbox_t;
  64:../../os/oslib/include/chmboxes.h **** 
  65:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
  66:../../os/oslib/include/chmboxes.h **** /* Module macros.                                                            */
  67:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
  68:../../os/oslib/include/chmboxes.h **** 
  69:../../os/oslib/include/chmboxes.h **** /**
  70:../../os/oslib/include/chmboxes.h ****  * @brief   Data part of a static mailbox initializer.
  71:../../os/oslib/include/chmboxes.h ****  * @details This macro should be used when statically initializing a
  72:../../os/oslib/include/chmboxes.h ****  *          mailbox that is part of a bigger structure.
  73:../../os/oslib/include/chmboxes.h ****  *
  74:../../os/oslib/include/chmboxes.h ****  * @param[in] name      the name of the mailbox variable
  75:../../os/oslib/include/chmboxes.h ****  * @param[in] buffer    pointer to the mailbox buffer array of @p msg_t
  76:../../os/oslib/include/chmboxes.h ****  * @param[in] size      number of @p msg_t elements in the buffer array
  77:../../os/oslib/include/chmboxes.h ****  */
  78:../../os/oslib/include/chmboxes.h **** #define __MAILBOX_DATA(name, buffer, size) {                                \
  79:../../os/oslib/include/chmboxes.h ****   (msg_t *)(buffer),                                                        \
  80:../../os/oslib/include/chmboxes.h ****   (msg_t *)(buffer) + size,                                                 \
  81:../../os/oslib/include/chmboxes.h ****   (msg_t *)(buffer),                                                        \
  82:../../os/oslib/include/chmboxes.h ****   (msg_t *)(buffer),                                                        \
  83:../../os/oslib/include/chmboxes.h ****   (size_t)0,                                                                \
  84:../../os/oslib/include/chmboxes.h ****   false,                                                                    \
  85:../../os/oslib/include/chmboxes.h ****   __THREADS_QUEUE_DATA(name.qw),                                            \
  86:../../os/oslib/include/chmboxes.h ****   __THREADS_QUEUE_DATA(name.qr),                                            \
  87:../../os/oslib/include/chmboxes.h **** }
  88:../../os/oslib/include/chmboxes.h **** 
  89:../../os/oslib/include/chmboxes.h **** /**
  90:../../os/oslib/include/chmboxes.h ****  * @brief   Static mailbox initializer.
  91:../../os/oslib/include/chmboxes.h ****  * @details Statically initialized mailboxes require no explicit
  92:../../os/oslib/include/chmboxes.h ****  *          initialization using @p chMBObjectInit().
  93:../../os/oslib/include/chmboxes.h ****  *
  94:../../os/oslib/include/chmboxes.h ****  * @param[in] name      the name of the mailbox variable
  95:../../os/oslib/include/chmboxes.h ****  * @param[in] buffer    pointer to the mailbox buffer array of @p msg_t
  96:../../os/oslib/include/chmboxes.h ****  * @param[in] size      number of @p msg_t elements in the buffer array
  97:../../os/oslib/include/chmboxes.h ****  */
  98:../../os/oslib/include/chmboxes.h **** #define MAILBOX_DECL(name, buffer, size)                                    \
  99:../../os/oslib/include/chmboxes.h ****   mailbox_t name = __MAILBOX_DATA(name, buffer, size)
 100:../../os/oslib/include/chmboxes.h **** 
 101:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
 102:../../os/oslib/include/chmboxes.h **** /* External declarations.                                                    */
 103:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
 104:../../os/oslib/include/chmboxes.h **** 
 105:../../os/oslib/include/chmboxes.h **** #ifdef __cplusplus
 106:../../os/oslib/include/chmboxes.h **** extern "C" {
 107:../../os/oslib/include/chmboxes.h **** #endif
 108:../../os/oslib/include/chmboxes.h ****   void chMBObjectInit(mailbox_t *mbp, msg_t *buf, size_t n);
 109:../../os/oslib/include/chmboxes.h ****   void chMBReset(mailbox_t *mbp);
 110:../../os/oslib/include/chmboxes.h ****   void chMBResetI(mailbox_t *mbp);
 111:../../os/oslib/include/chmboxes.h ****   msg_t chMBPostTimeout(mailbox_t *mbp, msg_t msg, sysinterval_t timeout);
 112:../../os/oslib/include/chmboxes.h ****   msg_t chMBPostTimeoutS(mailbox_t *mbp, msg_t msg, sysinterval_t timeout);
 113:../../os/oslib/include/chmboxes.h ****   msg_t chMBPostI(mailbox_t *mbp, msg_t msg);
 114:../../os/oslib/include/chmboxes.h ****   msg_t chMBPostAheadTimeout(mailbox_t *mbp, msg_t msg, sysinterval_t timeout);
 115:../../os/oslib/include/chmboxes.h ****   msg_t chMBPostAheadTimeoutS(mailbox_t *mbp, msg_t msg, sysinterval_t timeout);
 116:../../os/oslib/include/chmboxes.h ****   msg_t chMBPostAheadI(mailbox_t *mbp, msg_t msg);
 117:../../os/oslib/include/chmboxes.h ****   msg_t chMBFetchTimeout(mailbox_t *mbp, msg_t *msgp, sysinterval_t timeout);
 118:../../os/oslib/include/chmboxes.h ****   msg_t chMBFetchTimeoutS(mailbox_t *mbp, msg_t *msgp, sysinterval_t timeout);
 119:../../os/oslib/include/chmboxes.h ****   msg_t chMBFetchI(mailbox_t *mbp, msg_t *msgp);
 120:../../os/oslib/include/chmboxes.h **** #ifdef __cplusplus
 121:../../os/oslib/include/chmboxes.h **** }
 122:../../os/oslib/include/chmboxes.h **** #endif
 123:../../os/oslib/include/chmboxes.h **** 
 124:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
 125:../../os/oslib/include/chmboxes.h **** /* Module inline functions.                                                  */
 126:../../os/oslib/include/chmboxes.h **** /*===========================================================================*/
 127:../../os/oslib/include/chmboxes.h **** 
 128:../../os/oslib/include/chmboxes.h **** /**
 129:../../os/oslib/include/chmboxes.h ****  * @brief   Returns the mailbox buffer size as number of messages.
 130:../../os/oslib/include/chmboxes.h ****  *
 131:../../os/oslib/include/chmboxes.h ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 132:../../os/oslib/include/chmboxes.h ****  * @return              The size of the mailbox.
 133:../../os/oslib/include/chmboxes.h ****  *
 134:../../os/oslib/include/chmboxes.h ****  * @iclass
 135:../../os/oslib/include/chmboxes.h ****  */
 136:../../os/oslib/include/chmboxes.h **** static inline size_t chMBGetSizeI(const mailbox_t *mbp) {
 137:../../os/oslib/include/chmboxes.h **** 
 138:../../os/oslib/include/chmboxes.h ****   /*lint -save -e9033 [10.8] Perfectly safe pointers
 139:../../os/oslib/include/chmboxes.h ****     arithmetic.*/
 140:../../os/oslib/include/chmboxes.h ****   return (size_t)(mbp->top - mbp->buffer);
 141:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 142:../../os/oslib/include/chmboxes.h **** }
 143:../../os/oslib/include/chmboxes.h **** 
 144:../../os/oslib/include/chmboxes.h **** /**
 145:../../os/oslib/include/chmboxes.h ****  * @brief   Returns the number of used message slots into a mailbox.
 146:../../os/oslib/include/chmboxes.h ****  *
 147:../../os/oslib/include/chmboxes.h ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 148:../../os/oslib/include/chmboxes.h ****  * @return              The number of queued messages.
 149:../../os/oslib/include/chmboxes.h ****  *
 150:../../os/oslib/include/chmboxes.h ****  * @iclass
 151:../../os/oslib/include/chmboxes.h ****  */
 152:../../os/oslib/include/chmboxes.h **** static inline size_t chMBGetUsedCountI(const mailbox_t *mbp) {
 153:../../os/oslib/include/chmboxes.h **** 
 154:../../os/oslib/include/chmboxes.h ****   chDbgCheckClassI();
 155:../../os/oslib/include/chmboxes.h **** 
 156:../../os/oslib/include/chmboxes.h ****   return mbp->cnt;
 157:../../os/oslib/include/chmboxes.h **** }
 158:../../os/oslib/include/chmboxes.h **** 
 159:../../os/oslib/include/chmboxes.h **** /**
 160:../../os/oslib/include/chmboxes.h ****  * @brief   Returns the number of free message slots into a mailbox.
 161:../../os/oslib/include/chmboxes.h ****  *
 162:../../os/oslib/include/chmboxes.h ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 163:../../os/oslib/include/chmboxes.h ****  * @return              The number of empty message slots.
 164:../../os/oslib/include/chmboxes.h ****  *
 165:../../os/oslib/include/chmboxes.h ****  * @iclass
 166:../../os/oslib/include/chmboxes.h ****  */
 167:../../os/oslib/include/chmboxes.h **** static inline size_t chMBGetFreeCountI(const mailbox_t *mbp) {
 326               		.loc 3 167 22 view .LVU84
 168:../../os/oslib/include/chmboxes.h **** 
 169:../../os/oslib/include/chmboxes.h ****   chDbgCheckClassI();
 327               		.loc 3 169 21 view .LVU85
 170:../../os/oslib/include/chmboxes.h **** 
 171:../../os/oslib/include/chmboxes.h ****   return chMBGetSizeI(mbp) - chMBGetUsedCountI(mbp);
 328               		.loc 3 171 3 view .LVU86
 329               	.LBB65:
 330               	.LBI65:
 136:../../os/oslib/include/chmboxes.h **** 
 331               		.loc 3 136 22 view .LVU87
 332               	.LBB66:
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 333               		.loc 3 140 3 view .LVU88
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 334               		.loc 3 140 22 is_stmt 0 view .LVU89
 335 0024 2A81      		ldd r18,Y+2
 336 0026 3B81      		ldd r19,Y+3
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 337               		.loc 3 140 33 view .LVU90
 338 0028 4881      		ld r20,Y
 339 002a 5981      		ldd r21,Y+1
 340               	.LVL17:
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 341               		.loc 3 140 33 view .LVU91
 342               	.LBE66:
 343               	.LBE65:
 344               	.LBB68:
 345               	.LBI68:
 152:../../os/oslib/include/chmboxes.h **** 
 346               		.loc 3 152 22 is_stmt 1 view .LVU92
 347               	.LBB69:
 154:../../os/oslib/include/chmboxes.h **** 
 348               		.loc 3 154 21 view .LVU93
 156:../../os/oslib/include/chmboxes.h **** }
 349               		.loc 3 156 3 view .LVU94
 156:../../os/oslib/include/chmboxes.h **** }
 350               		.loc 3 156 3 is_stmt 0 view .LVU95
 351               	.LBE69:
 352               	.LBE68:
 353               	.LBB70:
 354               	.LBB67:
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 355               		.loc 3 140 28 view .LVU96
 356 002c C901      		movw r24,r18
 357 002e 841B      		sub r24,r20
 358 0030 950B      		sbc r25,r21
 359 0032 9595      		asr r25
 360 0034 8795      		ror r24
 361               	.LBE67:
 362               	.LBE70:
 363               	.LBE64:
 207:../../os/oslib/src/chmboxes.c ****       *mbp->wrptr++ = msg;
 364               		.loc 1 207 8 discriminator 1 view .LVU97
 365 0036 6885      		ldd r22,Y+8
 366 0038 7985      		ldd r23,Y+9
 367 003a 8617      		cp r24,r22
 368 003c 9707      		cpc r25,r23
 369 003e 01F4      		brne .L13
 370               		.loc 1 222 5 is_stmt 1 view .LVU98
 371               		.loc 1 222 14 is_stmt 0 view .LVU99
 372 0040 B601      		movw r22,r12
 373 0042 C701      		movw r24,r14
 374 0044 0E94 0000 		call chThdEnqueueTimeoutS
 375               	.LVL18:
 376 0048 8C01      		movw r16,r24
 377               	.LVL19:
 223:../../os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 378               		.loc 1 223 19 is_stmt 1 view .LVU100
 379 004a 892B      		or r24,r25
 380 004c 01F4      		brne .L5
 381               	.LVL20:
 382               	.L9:
 198:../../os/oslib/src/chmboxes.c **** 
 383               		.loc 1 198 3 discriminator 5 view .LVU101
 200:../../os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 384               		.loc 1 200 3 view .LVU102
 202:../../os/oslib/src/chmboxes.c ****       return MSG_RESET;
 385               		.loc 1 202 5 view .LVU103
 202:../../os/oslib/src/chmboxes.c ****       return MSG_RESET;
 386               		.loc 1 202 8 is_stmt 0 view .LVU104
 387 004e 8A85      		ldd r24,Y+10
 388 0050 8115      		cp r24, __zero_reg__
 389 0052 01F0      		breq .L14
 203:../../os/oslib/src/chmboxes.c ****     }
 390               		.loc 1 203 14 view .LVU105
 391 0054 0EEF      		ldi r16,lo8(-2)
 392 0056 1FEF      		ldi r17,lo8(-1)
 393               	.L5:
 224:../../os/oslib/src/chmboxes.c **** 
 225:../../os/oslib/src/chmboxes.c ****   return rdymsg;
 226:../../os/oslib/src/chmboxes.c **** }
 394               		.loc 1 226 1 view .LVU106
 395 0058 C801      		movw r24,r16
 396               	/* epilogue start */
 397 005a DF91      		pop r29
 398 005c CF91      		pop r28
 399               	.LVL21:
 400               		.loc 1 226 1 view .LVU107
 401 005e 1F91      		pop r17
 402 0060 0F91      		pop r16
 403 0062 FF90      		pop r15
 404 0064 EF90      		pop r14
 405               	.LVL22:
 406               		.loc 1 226 1 view .LVU108
 407 0066 DF90      		pop r13
 408 0068 CF90      		pop r12
 409               	.LVL23:
 410               		.loc 1 226 1 view .LVU109
 411 006a BF90      		pop r11
 412 006c AF90      		pop r10
 413               	.LVL24:
 414               		.loc 1 226 1 view .LVU110
 415 006e 0895      		ret
 416               	.LVL25:
 417               	.L13:
 208:../../os/oslib/src/chmboxes.c ****       if (mbp->wrptr >= mbp->top) {
 418               		.loc 1 208 7 is_stmt 1 view .LVU111
 208:../../os/oslib/src/chmboxes.c ****       if (mbp->wrptr >= mbp->top) {
 419               		.loc 1 208 11 is_stmt 0 view .LVU112
 420 0070 EC81      		ldd r30,Y+4
 421 0072 FD81      		ldd r31,Y+5
 208:../../os/oslib/src/chmboxes.c ****       if (mbp->wrptr >= mbp->top) {
 422               		.loc 1 208 18 view .LVU113
 423 0074 CF01      		movw r24,r30
 424 0076 0296      		adiw r24,2
 425 0078 9D83      		std Y+5,r25
 426 007a 8C83      		std Y+4,r24
 208:../../os/oslib/src/chmboxes.c ****       if (mbp->wrptr >= mbp->top) {
 427               		.loc 1 208 21 view .LVU114
 428 007c A082      		st Z,r10
 429 007e B182      		std Z+1,r11
 209:../../os/oslib/src/chmboxes.c ****         mbp->wrptr = mbp->buffer;
 430               		.loc 1 209 7 is_stmt 1 view .LVU115
 209:../../os/oslib/src/chmboxes.c ****         mbp->wrptr = mbp->buffer;
 431               		.loc 1 209 10 is_stmt 0 view .LVU116
 432 0080 8217      		cp r24,r18
 433 0082 9307      		cpc r25,r19
 434 0084 00F0      		brlo .L8
 210:../../os/oslib/src/chmboxes.c ****       }
 435               		.loc 1 210 9 is_stmt 1 view .LVU117
 210:../../os/oslib/src/chmboxes.c ****       }
 436               		.loc 1 210 20 is_stmt 0 view .LVU118
 437 0086 5D83      		std Y+5,r21
 438 0088 4C83      		std Y+4,r20
 439               	.L8:
 212:../../os/oslib/src/chmboxes.c **** 
 440               		.loc 1 212 7 is_stmt 1 view .LVU119
 212:../../os/oslib/src/chmboxes.c **** 
 441               		.loc 1 212 15 is_stmt 0 view .LVU120
 442 008a 8885      		ldd r24,Y+8
 443 008c 9985      		ldd r25,Y+9
 444 008e 0196      		adiw r24,1
 445 0090 9987      		std Y+9,r25
 446 0092 8887      		std Y+8,r24
 215:../../os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 447               		.loc 1 215 7 is_stmt 1 view .LVU121
 448 0094 60E0      		ldi r22,0
 449 0096 70E0      		ldi r23,0
 450 0098 CE01      		movw r24,r28
 451 009a 0C96      		adiw r24,12
 452 009c 0E94 0000 		call chThdDequeueNextI
 453               	.LVL26:
 216:../../os/oslib/src/chmboxes.c **** 
 454               		.loc 1 216 7 view .LVU122
 455 00a0 0E94 0000 		call chSchRescheduleS
 456               	.LVL27:
 218:../../os/oslib/src/chmboxes.c ****     }
 457               		.loc 1 218 7 view .LVU123
 218:../../os/oslib/src/chmboxes.c ****     }
 458               		.loc 1 218 14 is_stmt 0 view .LVU124
 459 00a4 00E0      		ldi r16,0
 460 00a6 10E0      		ldi r17,0
 461 00a8 00C0      		rjmp .L5
 462               		.cfi_endproc
 463               	.LFE102:
 465               		.section	.text.chMBPostTimeout,"ax",@progbits
 466               	.global	chMBPostTimeout
 468               	chMBPostTimeout:
 469               	.LVL28:
 470               	.LFB101:
 165:../../os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 471               		.loc 1 165 73 is_stmt 1 view -0
 472               		.cfi_startproc
 473               	/* prologue: function */
 474               	/* frame size = 0 */
 475               	/* stack size = 0 */
 476               	.L__stack_usage = 0
 166:../../os/oslib/src/chmboxes.c **** 
 477               		.loc 1 166 3 view .LVU126
 168:../../os/oslib/src/chmboxes.c ****   rdymsg = chMBPostTimeoutS(mbp, msg, timeout);
 478               		.loc 1 168 3 view .LVU127
 479               	.LBB71:
 480               	.LBI71:
 428:../../os/common/ports/AVR/chcore.h **** 
 481               		.loc 2 428 20 view .LVU128
 482               	.LBB72:
 430:../../os/common/ports/AVR/chcore.h **** }
 483               		.loc 2 430 3 view .LVU129
 484               	/* #APP */
 485               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 486 0000 F894      		cli
 487               	 ;  0 "" 2
 488               	/* #NOAPP */
 489               	.LBE72:
 490               	.LBE71:
 168:../../os/oslib/src/chmboxes.c ****   rdymsg = chMBPostTimeoutS(mbp, msg, timeout);
 491               		.loc 1 168 3 discriminator 1 view .LVU130
 168:../../os/oslib/src/chmboxes.c ****   rdymsg = chMBPostTimeoutS(mbp, msg, timeout);
 492               		.loc 1 168 14 discriminator 1 view .LVU131
 169:../../os/oslib/src/chmboxes.c ****   chSysUnlock();
 493               		.loc 1 169 3 view .LVU132
 169:../../os/oslib/src/chmboxes.c ****   chSysUnlock();
 494               		.loc 1 169 12 is_stmt 0 view .LVU133
 495 0002 0E94 0000 		call chMBPostTimeoutS
 496               	.LVL29:
 170:../../os/oslib/src/chmboxes.c **** 
 497               		.loc 1 170 3 is_stmt 1 view .LVU134
 170:../../os/oslib/src/chmboxes.c **** 
 498               		.loc 1 170 3 view .LVU135
 499               	.LBB73:
 500               	.LBI73:
 438:../../os/common/ports/AVR/chcore.h **** 
 501               		.loc 2 438 20 view .LVU136
 502               	.LBB74:
 503               		.loc 2 440 3 view .LVU137
 504               	/* #APP */
 505               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 506 0006 7894      		sei
 507               	 ;  0 "" 2
 508               	/* #NOAPP */
 509               	.LBE74:
 510               	.LBE73:
 170:../../os/oslib/src/chmboxes.c **** 
 511               		.loc 1 170 16 discriminator 1 view .LVU138
 172:../../os/oslib/src/chmboxes.c **** }
 512               		.loc 1 172 3 view .LVU139
 513               	/* epilogue start */
 173:../../os/oslib/src/chmboxes.c **** 
 514               		.loc 1 173 1 is_stmt 0 view .LVU140
 515 0008 0895      		ret
 516               		.cfi_endproc
 517               	.LFE101:
 519               		.section	.text.chMBPostI,"ax",@progbits
 520               	.global	chMBPostI
 522               	chMBPostI:
 523               	.LVL30:
 524               	.LFB103:
 227:../../os/oslib/src/chmboxes.c **** 
 228:../../os/oslib/src/chmboxes.c **** /**
 229:../../os/oslib/src/chmboxes.c ****  * @brief   Posts a message into a mailbox.
 230:../../os/oslib/src/chmboxes.c ****  * @details This variant is non-blocking, the function returns a timeout
 231:../../os/oslib/src/chmboxes.c ****  *          condition if the queue is full.
 232:../../os/oslib/src/chmboxes.c ****  *
 233:../../os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 234:../../os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 235:../../os/oslib/src/chmboxes.c ****  * @return              The operation status.
 236:../../os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 237:../../os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 238:../../os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the mailbox is full and the message cannot be
 239:../../os/oslib/src/chmboxes.c ****  *                      posted.
 240:../../os/oslib/src/chmboxes.c ****  *
 241:../../os/oslib/src/chmboxes.c ****  * @iclass
 242:../../os/oslib/src/chmboxes.c ****  */
 243:../../os/oslib/src/chmboxes.c **** msg_t chMBPostI(mailbox_t *mbp, msg_t msg) {
 525               		.loc 1 243 44 is_stmt 1 view -0
 526               		.cfi_startproc
 527               	/* prologue: function */
 528               	/* frame size = 0 */
 529               	/* stack size = 0 */
 530               	.L__stack_usage = 0
 531               		.loc 1 243 44 is_stmt 0 view .LVU142
 532 0000 FC01      		movw r30,r24
 244:../../os/oslib/src/chmboxes.c **** 
 245:../../os/oslib/src/chmboxes.c ****   chDbgCheckClassI();
 533               		.loc 1 245 21 is_stmt 1 view .LVU143
 246:../../os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 534               		.loc 1 246 3 view .LVU144
 535               		.loc 1 246 3 view .LVU145
 536               		.loc 1 246 3 discriminator 5 view .LVU146
 247:../../os/oslib/src/chmboxes.c **** 
 248:../../os/oslib/src/chmboxes.c ****   /* If the mailbox is in reset state then returns immediately.*/
 249:../../os/oslib/src/chmboxes.c ****   if (mbp->reset) {
 537               		.loc 1 249 3 view .LVU147
 538               		.loc 1 249 6 is_stmt 0 view .LVU148
 539 0002 8285      		ldd r24,Z+10
 540               	.LVL31:
 541               		.loc 1 249 6 view .LVU149
 542 0004 8111      		cpse r24,__zero_reg__
 543 0006 00C0      		rjmp .L19
 250:../../os/oslib/src/chmboxes.c ****     return MSG_RESET;
 251:../../os/oslib/src/chmboxes.c ****   }
 252:../../os/oslib/src/chmboxes.c **** 
 253:../../os/oslib/src/chmboxes.c ****   /* Is there a free message slot in queue? if so then post.*/
 254:../../os/oslib/src/chmboxes.c ****   if (chMBGetFreeCountI(mbp) > (size_t)0) {
 544               		.loc 1 254 3 is_stmt 1 view .LVU150
 545               	.LVL32:
 546               	.LBB75:
 547               	.LBI75:
 167:../../os/oslib/include/chmboxes.h **** 
 548               		.loc 3 167 22 view .LVU151
 169:../../os/oslib/include/chmboxes.h **** 
 549               		.loc 3 169 21 view .LVU152
 550               		.loc 3 171 3 view .LVU153
 551               	.LBB76:
 552               	.LBI76:
 136:../../os/oslib/include/chmboxes.h **** 
 553               		.loc 3 136 22 view .LVU154
 554               	.LBB77:
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 555               		.loc 3 140 3 view .LVU155
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 556               		.loc 3 140 22 is_stmt 0 view .LVU156
 557 0008 2281      		ldd r18,Z+2
 558 000a 3381      		ldd r19,Z+3
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 559               		.loc 3 140 33 view .LVU157
 560 000c 4081      		ld r20,Z
 561 000e 5181      		ldd r21,Z+1
 562               	.LVL33:
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 563               		.loc 3 140 33 view .LVU158
 564               	.LBE77:
 565               	.LBE76:
 566               	.LBB79:
 567               	.LBI79:
 152:../../os/oslib/include/chmboxes.h **** 
 568               		.loc 3 152 22 is_stmt 1 view .LVU159
 569               	.LBB80:
 154:../../os/oslib/include/chmboxes.h **** 
 570               		.loc 3 154 21 view .LVU160
 156:../../os/oslib/include/chmboxes.h **** }
 571               		.loc 3 156 3 view .LVU161
 156:../../os/oslib/include/chmboxes.h **** }
 572               		.loc 3 156 3 is_stmt 0 view .LVU162
 573               	.LBE80:
 574               	.LBE79:
 575               	.LBB81:
 576               	.LBB78:
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 577               		.loc 3 140 28 view .LVU163
 578 0010 C901      		movw r24,r18
 579 0012 841B      		sub r24,r20
 580 0014 950B      		sbc r25,r21
 581 0016 9595      		asr r25
 582 0018 8795      		ror r24
 583               	.LBE78:
 584               	.LBE81:
 585               	.LBE75:
 586               		.loc 1 254 6 discriminator 1 view .LVU164
 587 001a A085      		ldd r26,Z+8
 588 001c B185      		ldd r27,Z+9
 589 001e 8A17      		cp r24,r26
 590 0020 9B07      		cpc r25,r27
 591 0022 01F0      		breq .L20
 255:../../os/oslib/src/chmboxes.c ****     *mbp->wrptr++ = msg;
 592               		.loc 1 255 5 is_stmt 1 view .LVU165
 593               		.loc 1 255 9 is_stmt 0 view .LVU166
 594 0024 A481      		ldd r26,Z+4
 595 0026 B581      		ldd r27,Z+5
 596               		.loc 1 255 16 view .LVU167
 597 0028 CD01      		movw r24,r26
 598 002a 0296      		adiw r24,2
 599 002c 9583      		std Z+5,r25
 600 002e 8483      		std Z+4,r24
 601               		.loc 1 255 19 view .LVU168
 602 0030 6C93      		st X,r22
 603 0032 1196      		adiw r26,1
 604 0034 7C93      		st X,r23
 256:../../os/oslib/src/chmboxes.c ****     if (mbp->wrptr >= mbp->top) {
 605               		.loc 1 256 5 is_stmt 1 view .LVU169
 606               		.loc 1 256 8 is_stmt 0 view .LVU170
 607 0036 8217      		cp r24,r18
 608 0038 9307      		cpc r25,r19
 609 003a 00F0      		brlo .L18
 257:../../os/oslib/src/chmboxes.c ****       mbp->wrptr = mbp->buffer;
 610               		.loc 1 257 7 is_stmt 1 view .LVU171
 611               		.loc 1 257 18 is_stmt 0 view .LVU172
 612 003c 5583      		std Z+5,r21
 613 003e 4483      		std Z+4,r20
 614               	.L18:
 258:../../os/oslib/src/chmboxes.c ****     }
 259:../../os/oslib/src/chmboxes.c ****     mbp->cnt++;
 615               		.loc 1 259 5 is_stmt 1 view .LVU173
 616               		.loc 1 259 13 is_stmt 0 view .LVU174
 617 0040 8085      		ldd r24,Z+8
 618 0042 9185      		ldd r25,Z+9
 619 0044 0196      		adiw r24,1
 620 0046 9187      		std Z+9,r25
 621 0048 8087      		std Z+8,r24
 260:../../os/oslib/src/chmboxes.c **** 
 261:../../os/oslib/src/chmboxes.c ****     /* If there is a reader waiting then makes it ready.*/
 262:../../os/oslib/src/chmboxes.c ****     chThdDequeueNextI(&mbp->qr, MSG_OK);
 622               		.loc 1 262 5 is_stmt 1 view .LVU175
 623 004a 60E0      		ldi r22,0
 624 004c 70E0      		ldi r23,0
 625               	.LVL34:
 626               		.loc 1 262 5 is_stmt 0 view .LVU176
 627 004e CF01      		movw r24,r30
 628 0050 0C96      		adiw r24,12
 629 0052 0E94 0000 		call chThdDequeueNextI
 630               	.LVL35:
 263:../../os/oslib/src/chmboxes.c **** 
 264:../../os/oslib/src/chmboxes.c ****     return MSG_OK;
 631               		.loc 1 264 5 is_stmt 1 view .LVU177
 632               		.loc 1 264 12 is_stmt 0 view .LVU178
 633 0056 80E0      		ldi r24,0
 634 0058 90E0      		ldi r25,0
 635 005a 0895      		ret
 636               	.LVL36:
 637               	.L20:
 265:../../os/oslib/src/chmboxes.c ****   }
 266:../../os/oslib/src/chmboxes.c **** 
 267:../../os/oslib/src/chmboxes.c ****   /* No space, immediate timeout.*/
 268:../../os/oslib/src/chmboxes.c ****   return MSG_TIMEOUT;
 638               		.loc 1 268 10 view .LVU179
 639 005c 8FEF      		ldi r24,lo8(-1)
 640 005e 9FEF      		ldi r25,lo8(-1)
 641               	/* epilogue start */
 269:../../os/oslib/src/chmboxes.c **** }
 642               		.loc 1 269 1 view .LVU180
 643 0060 0895      		ret
 644               	.L19:
 250:../../os/oslib/src/chmboxes.c ****   }
 645               		.loc 1 250 12 view .LVU181
 646 0062 8EEF      		ldi r24,lo8(-2)
 647 0064 9FEF      		ldi r25,lo8(-1)
 648 0066 0895      		ret
 649               		.cfi_endproc
 650               	.LFE103:
 652               		.section	.text.chMBPostAheadTimeoutS,"ax",@progbits
 653               	.global	chMBPostAheadTimeoutS
 655               	chMBPostAheadTimeoutS:
 656               	.LVL37:
 657               	.LFB105:
 270:../../os/oslib/src/chmboxes.c **** 
 271:../../os/oslib/src/chmboxes.c **** /**
 272:../../os/oslib/src/chmboxes.c ****  * @brief   Posts an high priority message into a mailbox.
 273:../../os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 274:../../os/oslib/src/chmboxes.c ****  *          available or the specified time runs out.
 275:../../os/oslib/src/chmboxes.c ****  *
 276:../../os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 277:../../os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 278:../../os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 279:../../os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 280:../../os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 281:../../os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 282:../../os/oslib/src/chmboxes.c ****  *                      .
 283:../../os/oslib/src/chmboxes.c ****  * @return              The operation status.
 284:../../os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 285:../../os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 286:../../os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 287:../../os/oslib/src/chmboxes.c ****  *
 288:../../os/oslib/src/chmboxes.c ****  * @api
 289:../../os/oslib/src/chmboxes.c ****  */
 290:../../os/oslib/src/chmboxes.c **** msg_t chMBPostAheadTimeout(mailbox_t *mbp, msg_t msg, sysinterval_t timeout) {
 291:../../os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 292:../../os/oslib/src/chmboxes.c **** 
 293:../../os/oslib/src/chmboxes.c ****   chSysLock();
 294:../../os/oslib/src/chmboxes.c ****   rdymsg = chMBPostAheadTimeoutS(mbp, msg, timeout);
 295:../../os/oslib/src/chmboxes.c ****   chSysUnlock();
 296:../../os/oslib/src/chmboxes.c **** 
 297:../../os/oslib/src/chmboxes.c ****   return rdymsg;
 298:../../os/oslib/src/chmboxes.c **** }
 299:../../os/oslib/src/chmboxes.c **** 
 300:../../os/oslib/src/chmboxes.c **** /**
 301:../../os/oslib/src/chmboxes.c ****  * @brief   Posts an high priority message into a mailbox.
 302:../../os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 303:../../os/oslib/src/chmboxes.c ****  *          available or the specified time runs out.
 304:../../os/oslib/src/chmboxes.c ****  *
 305:../../os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 306:../../os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 307:../../os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 308:../../os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 309:../../os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 310:../../os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 311:../../os/oslib/src/chmboxes.c ****  *                      .
 312:../../os/oslib/src/chmboxes.c ****  * @return              The operation status.
 313:../../os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 314:../../os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 315:../../os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 316:../../os/oslib/src/chmboxes.c ****  *
 317:../../os/oslib/src/chmboxes.c ****  * @sclass
 318:../../os/oslib/src/chmboxes.c ****  */
 319:../../os/oslib/src/chmboxes.c **** msg_t chMBPostAheadTimeoutS(mailbox_t *mbp, msg_t msg, sysinterval_t timeout) {
 658               		.loc 1 319 79 is_stmt 1 view -0
 659               		.cfi_startproc
 660               		.loc 1 319 79 is_stmt 0 view .LVU183
 661 0000 AF92      		push r10
 662               	.LCFI14:
 663               		.cfi_def_cfa_offset 3
 664               		.cfi_offset 10, -2
 665 0002 BF92      		push r11
 666               	.LCFI15:
 667               		.cfi_def_cfa_offset 4
 668               		.cfi_offset 11, -3
 669 0004 CF92      		push r12
 670               	.LCFI16:
 671               		.cfi_def_cfa_offset 5
 672               		.cfi_offset 12, -4
 673 0006 DF92      		push r13
 674               	.LCFI17:
 675               		.cfi_def_cfa_offset 6
 676               		.cfi_offset 13, -5
 677 0008 EF92      		push r14
 678               	.LCFI18:
 679               		.cfi_def_cfa_offset 7
 680               		.cfi_offset 14, -6
 681 000a FF92      		push r15
 682               	.LCFI19:
 683               		.cfi_def_cfa_offset 8
 684               		.cfi_offset 15, -7
 685 000c 0F93      		push r16
 686               	.LCFI20:
 687               		.cfi_def_cfa_offset 9
 688               		.cfi_offset 16, -8
 689 000e 1F93      		push r17
 690               	.LCFI21:
 691               		.cfi_def_cfa_offset 10
 692               		.cfi_offset 17, -9
 693 0010 CF93      		push r28
 694               	.LCFI22:
 695               		.cfi_def_cfa_offset 11
 696               		.cfi_offset 28, -10
 697 0012 DF93      		push r29
 698               	.LCFI23:
 699               		.cfi_def_cfa_offset 12
 700               		.cfi_offset 29, -11
 701               	/* prologue: function */
 702               	/* frame size = 0 */
 703               	/* stack size = 10 */
 704               	.L__stack_usage = 10
 705 0014 EC01      		movw r28,r24
 706 0016 5B01      		movw r10,r22
 707 0018 6A01      		movw r12,r20
 320:../../os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 708               		.loc 1 320 3 is_stmt 1 view .LVU184
 321:../../os/oslib/src/chmboxes.c **** 
 322:../../os/oslib/src/chmboxes.c ****   chDbgCheckClassS();
 709               		.loc 1 322 21 view .LVU185
 323:../../os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 710               		.loc 1 323 3 view .LVU186
 711               		.loc 1 323 3 view .LVU187
 324:../../os/oslib/src/chmboxes.c **** 
 325:../../os/oslib/src/chmboxes.c ****   do {
 326:../../os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 327:../../os/oslib/src/chmboxes.c ****     if (mbp->reset) {
 328:../../os/oslib/src/chmboxes.c ****       return MSG_RESET;
 329:../../os/oslib/src/chmboxes.c ****     }
 330:../../os/oslib/src/chmboxes.c **** 
 331:../../os/oslib/src/chmboxes.c ****     /* Is there a free message slot in queue? if so then post.*/
 332:../../os/oslib/src/chmboxes.c ****     if (chMBGetFreeCountI(mbp) > (size_t)0) {
 333:../../os/oslib/src/chmboxes.c ****       if (--mbp->rdptr < mbp->buffer) {
 334:../../os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->top - 1;
 335:../../os/oslib/src/chmboxes.c ****       }
 336:../../os/oslib/src/chmboxes.c ****       *mbp->rdptr = msg;
 337:../../os/oslib/src/chmboxes.c ****       mbp->cnt++;
 338:../../os/oslib/src/chmboxes.c **** 
 339:../../os/oslib/src/chmboxes.c ****       /* If there is a reader waiting then makes it ready.*/
 340:../../os/oslib/src/chmboxes.c ****       chThdDequeueNextI(&mbp->qr, MSG_OK);
 341:../../os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 342:../../os/oslib/src/chmboxes.c **** 
 343:../../os/oslib/src/chmboxes.c ****       return MSG_OK;
 344:../../os/oslib/src/chmboxes.c ****     }
 345:../../os/oslib/src/chmboxes.c **** 
 346:../../os/oslib/src/chmboxes.c ****     /* No space in the queue, waiting for a slot to become available.*/
 347:../../os/oslib/src/chmboxes.c ****     rdymsg = chThdEnqueueTimeoutS(&mbp->qw, timeout);
 712               		.loc 1 347 14 is_stmt 0 view .LVU188
 713 001a 7C01      		movw r14,r24
 714 001c 8BE0      		ldi r24,11
 715 001e E80E      		add r14,r24
 716 0020 F11C      		adc r15,__zero_reg__
 717               	.LVL38:
 718               		.loc 1 347 14 view .LVU189
 719 0022 00C0      		rjmp .L25
 720               	.LVL39:
 721               	.L31:
 332:../../os/oslib/src/chmboxes.c ****       if (--mbp->rdptr < mbp->buffer) {
 722               		.loc 1 332 5 is_stmt 1 view .LVU190
 723               	.LBB82:
 724               	.LBI82:
 167:../../os/oslib/include/chmboxes.h **** 
 725               		.loc 3 167 22 view .LVU191
 169:../../os/oslib/include/chmboxes.h **** 
 726               		.loc 3 169 21 view .LVU192
 727               		.loc 3 171 3 view .LVU193
 728               	.LBB83:
 729               	.LBI83:
 136:../../os/oslib/include/chmboxes.h **** 
 730               		.loc 3 136 22 view .LVU194
 731               	.LBB84:
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 732               		.loc 3 140 3 view .LVU195
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 733               		.loc 3 140 22 is_stmt 0 view .LVU196
 734 0024 4A81      		ldd r20,Y+2
 735 0026 5B81      		ldd r21,Y+3
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 736               		.loc 3 140 33 view .LVU197
 737 0028 2881      		ld r18,Y
 738 002a 3981      		ldd r19,Y+1
 739               	.LVL40:
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 740               		.loc 3 140 33 view .LVU198
 741               	.LBE84:
 742               	.LBE83:
 743               	.LBB86:
 744               	.LBI86:
 152:../../os/oslib/include/chmboxes.h **** 
 745               		.loc 3 152 22 is_stmt 1 view .LVU199
 746               	.LBB87:
 154:../../os/oslib/include/chmboxes.h **** 
 747               		.loc 3 154 21 view .LVU200
 156:../../os/oslib/include/chmboxes.h **** }
 748               		.loc 3 156 3 view .LVU201
 156:../../os/oslib/include/chmboxes.h **** }
 749               		.loc 3 156 3 is_stmt 0 view .LVU202
 750               	.LBE87:
 751               	.LBE86:
 752               	.LBB88:
 753               	.LBB85:
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 754               		.loc 3 140 28 view .LVU203
 755 002c CA01      		movw r24,r20
 756 002e 821B      		sub r24,r18
 757 0030 930B      		sbc r25,r19
 758 0032 9595      		asr r25
 759 0034 8795      		ror r24
 760               	.LBE85:
 761               	.LBE88:
 762               	.LBE82:
 332:../../os/oslib/src/chmboxes.c ****       if (--mbp->rdptr < mbp->buffer) {
 763               		.loc 1 332 8 discriminator 1 view .LVU204
 764 0036 6885      		ldd r22,Y+8
 765 0038 7985      		ldd r23,Y+9
 766 003a 8617      		cp r24,r22
 767 003c 9707      		cpc r25,r23
 768 003e 01F4      		brne .L30
 769               		.loc 1 347 5 is_stmt 1 view .LVU205
 770               		.loc 1 347 14 is_stmt 0 view .LVU206
 771 0040 B601      		movw r22,r12
 772 0042 C701      		movw r24,r14
 773 0044 0E94 0000 		call chThdEnqueueTimeoutS
 774               	.LVL41:
 775 0048 8C01      		movw r16,r24
 776               	.LVL42:
 348:../../os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 777               		.loc 1 348 19 is_stmt 1 view .LVU207
 778 004a 892B      		or r24,r25
 779 004c 01F4      		brne .L21
 780               	.LVL43:
 781               	.L25:
 323:../../os/oslib/src/chmboxes.c **** 
 782               		.loc 1 323 3 discriminator 5 view .LVU208
 325:../../os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 783               		.loc 1 325 3 view .LVU209
 327:../../os/oslib/src/chmboxes.c ****       return MSG_RESET;
 784               		.loc 1 327 5 view .LVU210
 327:../../os/oslib/src/chmboxes.c ****       return MSG_RESET;
 785               		.loc 1 327 8 is_stmt 0 view .LVU211
 786 004e 8A85      		ldd r24,Y+10
 787 0050 8115      		cp r24, __zero_reg__
 788 0052 01F0      		breq .L31
 328:../../os/oslib/src/chmboxes.c ****     }
 789               		.loc 1 328 14 view .LVU212
 790 0054 0EEF      		ldi r16,lo8(-2)
 791 0056 1FEF      		ldi r17,lo8(-1)
 792               	.L21:
 349:../../os/oslib/src/chmboxes.c **** 
 350:../../os/oslib/src/chmboxes.c ****   return rdymsg;
 351:../../os/oslib/src/chmboxes.c **** }
 793               		.loc 1 351 1 view .LVU213
 794 0058 C801      		movw r24,r16
 795               	/* epilogue start */
 796 005a DF91      		pop r29
 797 005c CF91      		pop r28
 798               	.LVL44:
 799               		.loc 1 351 1 view .LVU214
 800 005e 1F91      		pop r17
 801 0060 0F91      		pop r16
 802 0062 FF90      		pop r15
 803 0064 EF90      		pop r14
 804               	.LVL45:
 805               		.loc 1 351 1 view .LVU215
 806 0066 DF90      		pop r13
 807 0068 CF90      		pop r12
 808               	.LVL46:
 809               		.loc 1 351 1 view .LVU216
 810 006a BF90      		pop r11
 811 006c AF90      		pop r10
 812               	.LVL47:
 813               		.loc 1 351 1 view .LVU217
 814 006e 0895      		ret
 815               	.LVL48:
 816               	.L30:
 333:../../os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->top - 1;
 817               		.loc 1 333 7 is_stmt 1 view .LVU218
 333:../../os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->top - 1;
 818               		.loc 1 333 11 is_stmt 0 view .LVU219
 819 0070 EE81      		ldd r30,Y+6
 820 0072 FF81      		ldd r31,Y+7
 821 0074 3297      		sbiw r30,2
 333:../../os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->top - 1;
 822               		.loc 1 333 10 view .LVU220
 823 0076 E217      		cp r30,r18
 824 0078 F307      		cpc r31,r19
 825 007a 00F4      		brsh .L24
 334:../../os/oslib/src/chmboxes.c ****       }
 826               		.loc 1 334 9 is_stmt 1 view .LVU221
 334:../../os/oslib/src/chmboxes.c ****       }
 827               		.loc 1 334 31 is_stmt 0 view .LVU222
 828 007c FA01      		movw r30,r20
 829 007e 3297      		sbiw r30,2
 830               	.L24:
 333:../../os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->top - 1;
 831               		.loc 1 333 10 view .LVU223
 832 0080 FF83      		std Y+7,r31
 833 0082 EE83      		std Y+6,r30
 336:../../os/oslib/src/chmboxes.c ****       mbp->cnt++;
 834               		.loc 1 336 7 is_stmt 1 view .LVU224
 336:../../os/oslib/src/chmboxes.c ****       mbp->cnt++;
 835               		.loc 1 336 19 is_stmt 0 view .LVU225
 836 0084 A082      		st Z,r10
 837 0086 B182      		std Z+1,r11
 337:../../os/oslib/src/chmboxes.c **** 
 838               		.loc 1 337 7 is_stmt 1 view .LVU226
 337:../../os/oslib/src/chmboxes.c **** 
 839               		.loc 1 337 15 is_stmt 0 view .LVU227
 840 0088 8885      		ldd r24,Y+8
 841 008a 9985      		ldd r25,Y+9
 842 008c 0196      		adiw r24,1
 843 008e 9987      		std Y+9,r25
 844 0090 8887      		std Y+8,r24
 340:../../os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 845               		.loc 1 340 7 is_stmt 1 view .LVU228
 846 0092 60E0      		ldi r22,0
 847 0094 70E0      		ldi r23,0
 848 0096 CE01      		movw r24,r28
 849 0098 0C96      		adiw r24,12
 850 009a 0E94 0000 		call chThdDequeueNextI
 851               	.LVL49:
 341:../../os/oslib/src/chmboxes.c **** 
 852               		.loc 1 341 7 view .LVU229
 853 009e 0E94 0000 		call chSchRescheduleS
 854               	.LVL50:
 343:../../os/oslib/src/chmboxes.c ****     }
 855               		.loc 1 343 7 view .LVU230
 343:../../os/oslib/src/chmboxes.c ****     }
 856               		.loc 1 343 14 is_stmt 0 view .LVU231
 857 00a2 00E0      		ldi r16,0
 858 00a4 10E0      		ldi r17,0
 859 00a6 00C0      		rjmp .L21
 860               		.cfi_endproc
 861               	.LFE105:
 863               		.section	.text.chMBPostAheadTimeout,"ax",@progbits
 864               	.global	chMBPostAheadTimeout
 866               	chMBPostAheadTimeout:
 867               	.LVL51:
 868               	.LFB104:
 290:../../os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 869               		.loc 1 290 78 is_stmt 1 view -0
 870               		.cfi_startproc
 871               	/* prologue: function */
 872               	/* frame size = 0 */
 873               	/* stack size = 0 */
 874               	.L__stack_usage = 0
 291:../../os/oslib/src/chmboxes.c **** 
 875               		.loc 1 291 3 view .LVU233
 293:../../os/oslib/src/chmboxes.c ****   rdymsg = chMBPostAheadTimeoutS(mbp, msg, timeout);
 876               		.loc 1 293 3 view .LVU234
 877               	.LBB89:
 878               	.LBI89:
 428:../../os/common/ports/AVR/chcore.h **** 
 879               		.loc 2 428 20 view .LVU235
 880               	.LBB90:
 430:../../os/common/ports/AVR/chcore.h **** }
 881               		.loc 2 430 3 view .LVU236
 882               	/* #APP */
 883               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 884 0000 F894      		cli
 885               	 ;  0 "" 2
 886               	/* #NOAPP */
 887               	.LBE90:
 888               	.LBE89:
 293:../../os/oslib/src/chmboxes.c ****   rdymsg = chMBPostAheadTimeoutS(mbp, msg, timeout);
 889               		.loc 1 293 3 discriminator 1 view .LVU237
 293:../../os/oslib/src/chmboxes.c ****   rdymsg = chMBPostAheadTimeoutS(mbp, msg, timeout);
 890               		.loc 1 293 14 discriminator 1 view .LVU238
 294:../../os/oslib/src/chmboxes.c ****   chSysUnlock();
 891               		.loc 1 294 3 view .LVU239
 294:../../os/oslib/src/chmboxes.c ****   chSysUnlock();
 892               		.loc 1 294 12 is_stmt 0 view .LVU240
 893 0002 0E94 0000 		call chMBPostAheadTimeoutS
 894               	.LVL52:
 295:../../os/oslib/src/chmboxes.c **** 
 895               		.loc 1 295 3 is_stmt 1 view .LVU241
 295:../../os/oslib/src/chmboxes.c **** 
 896               		.loc 1 295 3 view .LVU242
 897               	.LBB91:
 898               	.LBI91:
 438:../../os/common/ports/AVR/chcore.h **** 
 899               		.loc 2 438 20 view .LVU243
 900               	.LBB92:
 901               		.loc 2 440 3 view .LVU244
 902               	/* #APP */
 903               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 904 0006 7894      		sei
 905               	 ;  0 "" 2
 906               	/* #NOAPP */
 907               	.LBE92:
 908               	.LBE91:
 295:../../os/oslib/src/chmboxes.c **** 
 909               		.loc 1 295 16 discriminator 1 view .LVU245
 297:../../os/oslib/src/chmboxes.c **** }
 910               		.loc 1 297 3 view .LVU246
 911               	/* epilogue start */
 298:../../os/oslib/src/chmboxes.c **** 
 912               		.loc 1 298 1 is_stmt 0 view .LVU247
 913 0008 0895      		ret
 914               		.cfi_endproc
 915               	.LFE104:
 917               		.section	.text.chMBPostAheadI,"ax",@progbits
 918               	.global	chMBPostAheadI
 920               	chMBPostAheadI:
 921               	.LVL53:
 922               	.LFB106:
 352:../../os/oslib/src/chmboxes.c **** 
 353:../../os/oslib/src/chmboxes.c **** /**
 354:../../os/oslib/src/chmboxes.c ****  * @brief   Posts an high priority message into a mailbox.
 355:../../os/oslib/src/chmboxes.c ****  * @details This variant is non-blocking, the function returns a timeout
 356:../../os/oslib/src/chmboxes.c ****  *          condition if the queue is full.
 357:../../os/oslib/src/chmboxes.c ****  *
 358:../../os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 359:../../os/oslib/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 360:../../os/oslib/src/chmboxes.c ****  * @return              The operation status.
 361:../../os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly posted.
 362:../../os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 363:../../os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the mailbox is full and the message cannot be
 364:../../os/oslib/src/chmboxes.c ****  *                      posted.
 365:../../os/oslib/src/chmboxes.c ****  *
 366:../../os/oslib/src/chmboxes.c ****  * @iclass
 367:../../os/oslib/src/chmboxes.c ****  */
 368:../../os/oslib/src/chmboxes.c **** msg_t chMBPostAheadI(mailbox_t *mbp, msg_t msg) {
 923               		.loc 1 368 49 is_stmt 1 view -0
 924               		.cfi_startproc
 925               	/* prologue: function */
 926               	/* frame size = 0 */
 927               	/* stack size = 0 */
 928               	.L__stack_usage = 0
 929               		.loc 1 368 49 is_stmt 0 view .LVU249
 930 0000 FC01      		movw r30,r24
 369:../../os/oslib/src/chmboxes.c **** 
 370:../../os/oslib/src/chmboxes.c ****   chDbgCheckClassI();
 931               		.loc 1 370 21 is_stmt 1 view .LVU250
 371:../../os/oslib/src/chmboxes.c ****   chDbgCheck(mbp != NULL);
 932               		.loc 1 371 3 view .LVU251
 933               		.loc 1 371 3 view .LVU252
 934               		.loc 1 371 3 discriminator 5 view .LVU253
 372:../../os/oslib/src/chmboxes.c **** 
 373:../../os/oslib/src/chmboxes.c ****   /* If the mailbox is in reset state then returns immediately.*/
 374:../../os/oslib/src/chmboxes.c ****   if (mbp->reset) {
 935               		.loc 1 374 3 view .LVU254
 936               		.loc 1 374 6 is_stmt 0 view .LVU255
 937 0002 8285      		ldd r24,Z+10
 938               	.LVL54:
 939               		.loc 1 374 6 view .LVU256
 940 0004 8111      		cpse r24,__zero_reg__
 941 0006 00C0      		rjmp .L36
 375:../../os/oslib/src/chmboxes.c ****     return MSG_RESET;
 376:../../os/oslib/src/chmboxes.c ****   }
 377:../../os/oslib/src/chmboxes.c **** 
 378:../../os/oslib/src/chmboxes.c ****   /* Is there a free message slot in queue? if so then post.*/
 379:../../os/oslib/src/chmboxes.c ****   if (chMBGetFreeCountI(mbp) > (size_t)0) {
 942               		.loc 1 379 3 is_stmt 1 view .LVU257
 943               	.LVL55:
 944               	.LBB93:
 945               	.LBI93:
 167:../../os/oslib/include/chmboxes.h **** 
 946               		.loc 3 167 22 view .LVU258
 169:../../os/oslib/include/chmboxes.h **** 
 947               		.loc 3 169 21 view .LVU259
 948               		.loc 3 171 3 view .LVU260
 949               	.LBB94:
 950               	.LBI94:
 136:../../os/oslib/include/chmboxes.h **** 
 951               		.loc 3 136 22 view .LVU261
 952               	.LBB95:
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 953               		.loc 3 140 3 view .LVU262
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 954               		.loc 3 140 22 is_stmt 0 view .LVU263
 955 0008 4281      		ldd r20,Z+2
 956 000a 5381      		ldd r21,Z+3
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 957               		.loc 3 140 33 view .LVU264
 958 000c 2081      		ld r18,Z
 959 000e 3181      		ldd r19,Z+1
 960               	.LVL56:
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 961               		.loc 3 140 33 view .LVU265
 962               	.LBE95:
 963               	.LBE94:
 964               	.LBB97:
 965               	.LBI97:
 152:../../os/oslib/include/chmboxes.h **** 
 966               		.loc 3 152 22 is_stmt 1 view .LVU266
 967               	.LBB98:
 154:../../os/oslib/include/chmboxes.h **** 
 968               		.loc 3 154 21 view .LVU267
 156:../../os/oslib/include/chmboxes.h **** }
 969               		.loc 3 156 3 view .LVU268
 156:../../os/oslib/include/chmboxes.h **** }
 970               		.loc 3 156 3 is_stmt 0 view .LVU269
 971               	.LBE98:
 972               	.LBE97:
 973               	.LBB99:
 974               	.LBB96:
 140:../../os/oslib/include/chmboxes.h ****   /*lint -restore*/
 975               		.loc 3 140 28 view .LVU270
 976 0010 CA01      		movw r24,r20
 977 0012 821B      		sub r24,r18
 978 0014 930B      		sbc r25,r19
 979 0016 9595      		asr r25
 980 0018 8795      		ror r24
 981               	.LBE96:
 982               	.LBE99:
 983               	.LBE93:
 984               		.loc 1 379 6 discriminator 1 view .LVU271
 985 001a A085      		ldd r26,Z+8
 986 001c B185      		ldd r27,Z+9
 987 001e 8A17      		cp r24,r26
 988 0020 9B07      		cpc r25,r27
 989 0022 01F0      		breq .L37
 380:../../os/oslib/src/chmboxes.c ****     if (--mbp->rdptr < mbp->buffer) {
 990               		.loc 1 380 5 is_stmt 1 view .LVU272
 991               		.loc 1 380 9 is_stmt 0 view .LVU273
 992 0024 A681      		ldd r26,Z+6
 993 0026 B781      		ldd r27,Z+7
 994 0028 1297      		sbiw r26,2
 995               		.loc 1 380 8 view .LVU274
 996 002a A217      		cp r26,r18
 997 002c B307      		cpc r27,r19
 998 002e 00F4      		brsh .L35
 381:../../os/oslib/src/chmboxes.c ****       mbp->rdptr = mbp->top - 1;
 999               		.loc 1 381 7 is_stmt 1 view .LVU275
 1000               		.loc 1 381 29 is_stmt 0 view .LVU276
 1001 0030 DA01      		movw r26,r20
 1002 0032 1297      		sbiw r26,2
 1003               	.L35:
 380:../../os/oslib/src/chmboxes.c ****     if (--mbp->rdptr < mbp->buffer) {
 1004               		.loc 1 380 8 view .LVU277
 1005 0034 B783      		std Z+7,r27
 1006 0036 A683      		std Z+6,r26
 382:../../os/oslib/src/chmboxes.c ****     }
 383:../../os/oslib/src/chmboxes.c ****     *mbp->rdptr = msg;
 1007               		.loc 1 383 5 is_stmt 1 view .LVU278
 1008               		.loc 1 383 17 is_stmt 0 view .LVU279
 1009 0038 6C93      		st X,r22
 1010 003a 1196      		adiw r26,1
 1011 003c 7C93      		st X,r23
 384:../../os/oslib/src/chmboxes.c ****     mbp->cnt++;
 1012               		.loc 1 384 5 is_stmt 1 view .LVU280
 1013               		.loc 1 384 13 is_stmt 0 view .LVU281
 1014 003e 8085      		ldd r24,Z+8
 1015 0040 9185      		ldd r25,Z+9
 1016 0042 0196      		adiw r24,1
 1017 0044 9187      		std Z+9,r25
 1018 0046 8087      		std Z+8,r24
 385:../../os/oslib/src/chmboxes.c **** 
 386:../../os/oslib/src/chmboxes.c ****     /* If there is a reader waiting then makes it ready.*/
 387:../../os/oslib/src/chmboxes.c ****     chThdDequeueNextI(&mbp->qr, MSG_OK);
 1019               		.loc 1 387 5 is_stmt 1 view .LVU282
 1020 0048 60E0      		ldi r22,0
 1021 004a 70E0      		ldi r23,0
 1022               	.LVL57:
 1023               		.loc 1 387 5 is_stmt 0 view .LVU283
 1024 004c CF01      		movw r24,r30
 1025 004e 0C96      		adiw r24,12
 1026 0050 0E94 0000 		call chThdDequeueNextI
 1027               	.LVL58:
 388:../../os/oslib/src/chmboxes.c **** 
 389:../../os/oslib/src/chmboxes.c ****     return MSG_OK;
 1028               		.loc 1 389 5 is_stmt 1 view .LVU284
 1029               		.loc 1 389 12 is_stmt 0 view .LVU285
 1030 0054 80E0      		ldi r24,0
 1031 0056 90E0      		ldi r25,0
 1032 0058 0895      		ret
 1033               	.LVL59:
 1034               	.L37:
 390:../../os/oslib/src/chmboxes.c ****   }
 391:../../os/oslib/src/chmboxes.c **** 
 392:../../os/oslib/src/chmboxes.c ****   /* No space, immediate timeout.*/
 393:../../os/oslib/src/chmboxes.c ****   return MSG_TIMEOUT;
 1035               		.loc 1 393 10 view .LVU286
 1036 005a 8FEF      		ldi r24,lo8(-1)
 1037 005c 9FEF      		ldi r25,lo8(-1)
 1038               	/* epilogue start */
 394:../../os/oslib/src/chmboxes.c **** }
 1039               		.loc 1 394 1 view .LVU287
 1040 005e 0895      		ret
 1041               	.L36:
 375:../../os/oslib/src/chmboxes.c ****   }
 1042               		.loc 1 375 12 view .LVU288
 1043 0060 8EEF      		ldi r24,lo8(-2)
 1044 0062 9FEF      		ldi r25,lo8(-1)
 1045 0064 0895      		ret
 1046               		.cfi_endproc
 1047               	.LFE106:
 1049               		.section	.text.chMBFetchTimeoutS,"ax",@progbits
 1050               	.global	chMBFetchTimeoutS
 1052               	chMBFetchTimeoutS:
 1053               	.LVL60:
 1054               	.LFB108:
 395:../../os/oslib/src/chmboxes.c **** 
 396:../../os/oslib/src/chmboxes.c **** /**
 397:../../os/oslib/src/chmboxes.c ****  * @brief   Retrieves a message from a mailbox.
 398:../../os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a message is posted in the mailbox
 399:../../os/oslib/src/chmboxes.c ****  *          or the specified time runs out.
 400:../../os/oslib/src/chmboxes.c ****  *
 401:../../os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 402:../../os/oslib/src/chmboxes.c ****  * @param[out] msgp     pointer to a message variable for the received message
 403:../../os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 404:../../os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 405:../../os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 406:../../os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 407:../../os/oslib/src/chmboxes.c ****  *                      .
 408:../../os/oslib/src/chmboxes.c ****  * @return              The operation status.
 409:../../os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly fetched.
 410:../../os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 411:../../os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 412:../../os/oslib/src/chmboxes.c ****  *
 413:../../os/oslib/src/chmboxes.c ****  * @api
 414:../../os/oslib/src/chmboxes.c ****  */
 415:../../os/oslib/src/chmboxes.c **** msg_t chMBFetchTimeout(mailbox_t *mbp, msg_t *msgp, sysinterval_t timeout) {
 416:../../os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 417:../../os/oslib/src/chmboxes.c **** 
 418:../../os/oslib/src/chmboxes.c ****   chSysLock();
 419:../../os/oslib/src/chmboxes.c ****   rdymsg = chMBFetchTimeoutS(mbp, msgp, timeout);
 420:../../os/oslib/src/chmboxes.c ****   chSysUnlock();
 421:../../os/oslib/src/chmboxes.c **** 
 422:../../os/oslib/src/chmboxes.c ****   return rdymsg;
 423:../../os/oslib/src/chmboxes.c **** }
 424:../../os/oslib/src/chmboxes.c **** 
 425:../../os/oslib/src/chmboxes.c **** /**
 426:../../os/oslib/src/chmboxes.c ****  * @brief   Retrieves a message from a mailbox.
 427:../../os/oslib/src/chmboxes.c ****  * @details The invoking thread waits until a message is posted in the mailbox
 428:../../os/oslib/src/chmboxes.c ****  *          or the specified time runs out.
 429:../../os/oslib/src/chmboxes.c ****  *
 430:../../os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 431:../../os/oslib/src/chmboxes.c ****  * @param[out] msgp     pointer to a message variable for the received message
 432:../../os/oslib/src/chmboxes.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 433:../../os/oslib/src/chmboxes.c ****  *                      the following special values are allowed:
 434:../../os/oslib/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 435:../../os/oslib/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 436:../../os/oslib/src/chmboxes.c ****  *                      .
 437:../../os/oslib/src/chmboxes.c ****  * @return              The operation status.
 438:../../os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly fetched.
 439:../../os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 440:../../os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the operation has timed out.
 441:../../os/oslib/src/chmboxes.c ****  *
 442:../../os/oslib/src/chmboxes.c ****  * @sclass
 443:../../os/oslib/src/chmboxes.c ****  */
 444:../../os/oslib/src/chmboxes.c **** msg_t chMBFetchTimeoutS(mailbox_t *mbp, msg_t *msgp, sysinterval_t timeout) {
 1055               		.loc 1 444 77 is_stmt 1 view -0
 1056               		.cfi_startproc
 1057               		.loc 1 444 77 is_stmt 0 view .LVU290
 1058 0000 AF92      		push r10
 1059               	.LCFI24:
 1060               		.cfi_def_cfa_offset 3
 1061               		.cfi_offset 10, -2
 1062 0002 BF92      		push r11
 1063               	.LCFI25:
 1064               		.cfi_def_cfa_offset 4
 1065               		.cfi_offset 11, -3
 1066 0004 CF92      		push r12
 1067               	.LCFI26:
 1068               		.cfi_def_cfa_offset 5
 1069               		.cfi_offset 12, -4
 1070 0006 DF92      		push r13
 1071               	.LCFI27:
 1072               		.cfi_def_cfa_offset 6
 1073               		.cfi_offset 13, -5
 1074 0008 EF92      		push r14
 1075               	.LCFI28:
 1076               		.cfi_def_cfa_offset 7
 1077               		.cfi_offset 14, -6
 1078 000a FF92      		push r15
 1079               	.LCFI29:
 1080               		.cfi_def_cfa_offset 8
 1081               		.cfi_offset 15, -7
 1082 000c 0F93      		push r16
 1083               	.LCFI30:
 1084               		.cfi_def_cfa_offset 9
 1085               		.cfi_offset 16, -8
 1086 000e 1F93      		push r17
 1087               	.LCFI31:
 1088               		.cfi_def_cfa_offset 10
 1089               		.cfi_offset 17, -9
 1090 0010 CF93      		push r28
 1091               	.LCFI32:
 1092               		.cfi_def_cfa_offset 11
 1093               		.cfi_offset 28, -10
 1094 0012 DF93      		push r29
 1095               	.LCFI33:
 1096               		.cfi_def_cfa_offset 12
 1097               		.cfi_offset 29, -11
 1098               	/* prologue: function */
 1099               	/* frame size = 0 */
 1100               	/* stack size = 10 */
 1101               	.L__stack_usage = 10
 1102 0014 8C01      		movw r16,r24
 1103 0016 6B01      		movw r12,r22
 1104 0018 5A01      		movw r10,r20
 445:../../os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 1105               		.loc 1 445 3 is_stmt 1 view .LVU291
 446:../../os/oslib/src/chmboxes.c **** 
 447:../../os/oslib/src/chmboxes.c ****   chDbgCheckClassS();
 1106               		.loc 1 447 21 view .LVU292
 448:../../os/oslib/src/chmboxes.c ****   chDbgCheck((mbp != NULL) && (msgp != NULL));
 1107               		.loc 1 448 3 view .LVU293
 1108               		.loc 1 448 3 view .LVU294
 449:../../os/oslib/src/chmboxes.c **** 
 450:../../os/oslib/src/chmboxes.c ****   do {
 451:../../os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 452:../../os/oslib/src/chmboxes.c ****     if (mbp->reset) {
 453:../../os/oslib/src/chmboxes.c ****       return MSG_RESET;
 454:../../os/oslib/src/chmboxes.c ****     }
 455:../../os/oslib/src/chmboxes.c **** 
 456:../../os/oslib/src/chmboxes.c ****     /* Is there a message in queue? if so then fetch.*/
 457:../../os/oslib/src/chmboxes.c ****     if (chMBGetUsedCountI(mbp) > (size_t)0) {
 458:../../os/oslib/src/chmboxes.c ****       *msgp = *mbp->rdptr++;
 459:../../os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 460:../../os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->buffer;
 461:../../os/oslib/src/chmboxes.c ****       }
 462:../../os/oslib/src/chmboxes.c ****       mbp->cnt--;
 463:../../os/oslib/src/chmboxes.c **** 
 464:../../os/oslib/src/chmboxes.c ****       /* If there is a writer waiting then makes it ready.*/
 465:../../os/oslib/src/chmboxes.c ****       chThdDequeueNextI(&mbp->qw, MSG_OK);
 466:../../os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 467:../../os/oslib/src/chmboxes.c **** 
 468:../../os/oslib/src/chmboxes.c ****       return MSG_OK;
 469:../../os/oslib/src/chmboxes.c ****     }
 470:../../os/oslib/src/chmboxes.c **** 
 471:../../os/oslib/src/chmboxes.c ****     /* No message in the queue, waiting for a message to become available.*/
 472:../../os/oslib/src/chmboxes.c ****     rdymsg = chThdEnqueueTimeoutS(&mbp->qr, timeout);
 1109               		.loc 1 472 14 is_stmt 0 view .LVU295
 1110 001a 7C01      		movw r14,r24
 1111 001c 8CE0      		ldi r24,12
 1112 001e E80E      		add r14,r24
 1113 0020 F11C      		adc r15,__zero_reg__
 1114               	.LVL61:
 1115               		.loc 1 472 14 view .LVU296
 1116 0022 00C0      		rjmp .L43
 1117               	.LVL62:
 1118               	.L48:
 457:../../os/oslib/src/chmboxes.c ****       *msgp = *mbp->rdptr++;
 1119               		.loc 1 457 5 is_stmt 1 view .LVU297
 1120               	.LBB106:
 1121               	.LBI106:
 152:../../os/oslib/include/chmboxes.h **** 
 1122               		.loc 3 152 22 view .LVU298
 1123               	.LBB107:
 154:../../os/oslib/include/chmboxes.h **** 
 1124               		.loc 3 154 21 view .LVU299
 156:../../os/oslib/include/chmboxes.h **** }
 1125               		.loc 3 156 3 view .LVU300
 156:../../os/oslib/include/chmboxes.h **** }
 1126               		.loc 3 156 3 is_stmt 0 view .LVU301
 1127               	.LBE107:
 1128               	.LBE106:
 457:../../os/oslib/src/chmboxes.c ****       *msgp = *mbp->rdptr++;
 1129               		.loc 1 457 8 discriminator 1 view .LVU302
 1130 0024 1896      		adiw r26,8
 1131 0026 8D91      		ld r24,X+
 1132 0028 9C91      		ld r25,X
 1133 002a 1997      		sbiw r26,8+1
 1134 002c 892B      		or r24,r25
 1135 002e 01F4      		brne .L47
 1136               		.loc 1 472 5 is_stmt 1 view .LVU303
 1137               		.loc 1 472 14 is_stmt 0 view .LVU304
 1138 0030 B501      		movw r22,r10
 1139 0032 C701      		movw r24,r14
 1140 0034 0E94 0000 		call chThdEnqueueTimeoutS
 1141               	.LVL63:
 1142 0038 EC01      		movw r28,r24
 1143               	.LVL64:
 473:../../os/oslib/src/chmboxes.c ****   } while (rdymsg == MSG_OK);
 1144               		.loc 1 473 19 is_stmt 1 view .LVU305
 1145 003a 892B      		or r24,r25
 1146 003c 01F4      		brne .L39
 1147               	.LVL65:
 1148               	.L43:
 448:../../os/oslib/src/chmboxes.c **** 
 1149               		.loc 1 448 3 discriminator 7 view .LVU306
 450:../../os/oslib/src/chmboxes.c ****     /* If the mailbox is in reset state then returns immediately.*/
 1150               		.loc 1 450 3 view .LVU307
 452:../../os/oslib/src/chmboxes.c ****       return MSG_RESET;
 1151               		.loc 1 452 5 view .LVU308
 452:../../os/oslib/src/chmboxes.c ****       return MSG_RESET;
 1152               		.loc 1 452 8 is_stmt 0 view .LVU309
 1153 003e D801      		movw r26,r16
 1154 0040 1A96      		adiw r26,10
 1155 0042 8C91      		ld r24,X
 1156 0044 1A97      		sbiw r26,10
 1157 0046 8115      		cp r24, __zero_reg__
 1158 0048 01F0      		breq .L48
 453:../../os/oslib/src/chmboxes.c ****     }
 1159               		.loc 1 453 14 view .LVU310
 1160 004a CEEF      		ldi r28,lo8(-2)
 1161 004c DFEF      		ldi r29,lo8(-1)
 1162               	.L39:
 474:../../os/oslib/src/chmboxes.c **** 
 475:../../os/oslib/src/chmboxes.c ****   return rdymsg;
 476:../../os/oslib/src/chmboxes.c **** }
 1163               		.loc 1 476 1 view .LVU311
 1164 004e CE01      		movw r24,r28
 1165               	/* epilogue start */
 1166 0050 DF91      		pop r29
 1167 0052 CF91      		pop r28
 1168 0054 1F91      		pop r17
 1169 0056 0F91      		pop r16
 1170               	.LVL66:
 1171               		.loc 1 476 1 view .LVU312
 1172 0058 FF90      		pop r15
 1173 005a EF90      		pop r14
 1174               	.LVL67:
 1175               		.loc 1 476 1 view .LVU313
 1176 005c DF90      		pop r13
 1177 005e CF90      		pop r12
 1178               	.LVL68:
 1179               		.loc 1 476 1 view .LVU314
 1180 0060 BF90      		pop r11
 1181 0062 AF90      		pop r10
 1182               	.LVL69:
 1183               		.loc 1 476 1 view .LVU315
 1184 0064 0895      		ret
 1185               	.LVL70:
 1186               	.L47:
 1187               	.LBB108:
 1188               	.LBI108:
 444:../../os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 1189               		.loc 1 444 7 is_stmt 1 view .LVU316
 1190               	.LBB109:
 458:../../os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 1191               		.loc 1 458 7 view .LVU317
 458:../../os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 1192               		.loc 1 458 19 is_stmt 0 view .LVU318
 1193 0066 1696      		adiw r26,6
 1194 0068 ED91      		ld r30,X+
 1195 006a FC91      		ld r31,X
 1196 006c 1797      		sbiw r26,6+1
 458:../../os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 1197               		.loc 1 458 26 view .LVU319
 1198 006e CF01      		movw r24,r30
 1199 0070 0296      		adiw r24,2
 1200 0072 1796      		adiw r26,6+1
 1201 0074 9C93      		st X,r25
 1202 0076 8E93      		st -X,r24
 1203 0078 1697      		sbiw r26,6
 458:../../os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 1204               		.loc 1 458 15 view .LVU320
 1205 007a 2081      		ld r18,Z
 1206 007c 3181      		ldd r19,Z+1
 458:../../os/oslib/src/chmboxes.c ****       if (mbp->rdptr >= mbp->top) {
 1207               		.loc 1 458 13 view .LVU321
 1208 007e F601      		movw r30,r12
 1209 0080 3183      		std Z+1,r19
 1210 0082 2083      		st Z,r18
 459:../../os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->buffer;
 1211               		.loc 1 459 7 is_stmt 1 view .LVU322
 459:../../os/oslib/src/chmboxes.c ****         mbp->rdptr = mbp->buffer;
 1212               		.loc 1 459 10 is_stmt 0 view .LVU323
 1213 0084 1296      		adiw r26,2
 1214 0086 2D91      		ld r18,X+
 1215 0088 3C91      		ld r19,X
 1216 008a 1397      		sbiw r26,2+1
 1217 008c 8217      		cp r24,r18
 1218 008e 9307      		cpc r25,r19
 1219 0090 00F0      		brlo .L42
 460:../../os/oslib/src/chmboxes.c ****       }
 1220               		.loc 1 460 9 is_stmt 1 view .LVU324
 460:../../os/oslib/src/chmboxes.c ****       }
 1221               		.loc 1 460 20 is_stmt 0 view .LVU325
 1222 0092 8D91      		ld r24,X+
 1223 0094 9C91      		ld r25,X
 1224 0096 1197      		sbiw r26,1
 1225 0098 1796      		adiw r26,6+1
 1226 009a 9C93      		st X,r25
 1227 009c 8E93      		st -X,r24
 1228 009e 1697      		sbiw r26,6
 1229               	.L42:
 462:../../os/oslib/src/chmboxes.c **** 
 1230               		.loc 1 462 7 is_stmt 1 view .LVU326
 462:../../os/oslib/src/chmboxes.c **** 
 1231               		.loc 1 462 15 is_stmt 0 view .LVU327
 1232 00a0 D801      		movw r26,r16
 1233 00a2 1896      		adiw r26,8
 1234 00a4 8D91      		ld r24,X+
 1235 00a6 9C91      		ld r25,X
 1236 00a8 1997      		sbiw r26,8+1
 1237 00aa 0197      		sbiw r24,1
 1238 00ac 1996      		adiw r26,8+1
 1239 00ae 9C93      		st X,r25
 1240 00b0 8E93      		st -X,r24
 1241 00b2 1897      		sbiw r26,8
 465:../../os/oslib/src/chmboxes.c ****       chSchRescheduleS();
 1242               		.loc 1 465 7 is_stmt 1 view .LVU328
 1243 00b4 60E0      		ldi r22,0
 1244 00b6 70E0      		ldi r23,0
 1245 00b8 C801      		movw r24,r16
 1246 00ba 0B96      		adiw r24,11
 1247 00bc 0E94 0000 		call chThdDequeueNextI
 1248               	.LVL71:
 466:../../os/oslib/src/chmboxes.c **** 
 1249               		.loc 1 466 7 view .LVU329
 1250 00c0 0E94 0000 		call chSchRescheduleS
 1251               	.LVL72:
 468:../../os/oslib/src/chmboxes.c ****     }
 1252               		.loc 1 468 7 view .LVU330
 466:../../os/oslib/src/chmboxes.c **** 
 1253               		.loc 1 466 7 is_stmt 0 view .LVU331
 1254 00c4 C0E0      		ldi r28,0
 1255 00c6 D0E0      		ldi r29,0
 1256 00c8 00C0      		rjmp .L39
 1257               	.LBE109:
 1258               	.LBE108:
 1259               		.cfi_endproc
 1260               	.LFE108:
 1262               		.section	.text.chMBFetchTimeout,"ax",@progbits
 1263               	.global	chMBFetchTimeout
 1265               	chMBFetchTimeout:
 1266               	.LVL73:
 1267               	.LFB107:
 415:../../os/oslib/src/chmboxes.c ****   msg_t rdymsg;
 1268               		.loc 1 415 76 is_stmt 1 view -0
 1269               		.cfi_startproc
 1270               	/* prologue: function */
 1271               	/* frame size = 0 */
 1272               	/* stack size = 0 */
 1273               	.L__stack_usage = 0
 416:../../os/oslib/src/chmboxes.c **** 
 1274               		.loc 1 416 3 view .LVU333
 418:../../os/oslib/src/chmboxes.c ****   rdymsg = chMBFetchTimeoutS(mbp, msgp, timeout);
 1275               		.loc 1 418 3 view .LVU334
 1276               	.LBB110:
 1277               	.LBI110:
 428:../../os/common/ports/AVR/chcore.h **** 
 1278               		.loc 2 428 20 view .LVU335
 1279               	.LBB111:
 430:../../os/common/ports/AVR/chcore.h **** }
 1280               		.loc 2 430 3 view .LVU336
 1281               	/* #APP */
 1282               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 1283 0000 F894      		cli
 1284               	 ;  0 "" 2
 1285               	/* #NOAPP */
 1286               	.LBE111:
 1287               	.LBE110:
 418:../../os/oslib/src/chmboxes.c ****   rdymsg = chMBFetchTimeoutS(mbp, msgp, timeout);
 1288               		.loc 1 418 3 discriminator 1 view .LVU337
 418:../../os/oslib/src/chmboxes.c ****   rdymsg = chMBFetchTimeoutS(mbp, msgp, timeout);
 1289               		.loc 1 418 14 discriminator 1 view .LVU338
 419:../../os/oslib/src/chmboxes.c ****   chSysUnlock();
 1290               		.loc 1 419 3 view .LVU339
 419:../../os/oslib/src/chmboxes.c ****   chSysUnlock();
 1291               		.loc 1 419 12 is_stmt 0 view .LVU340
 1292 0002 0E94 0000 		call chMBFetchTimeoutS
 1293               	.LVL74:
 420:../../os/oslib/src/chmboxes.c **** 
 1294               		.loc 1 420 3 is_stmt 1 view .LVU341
 420:../../os/oslib/src/chmboxes.c **** 
 1295               		.loc 1 420 3 view .LVU342
 1296               	.LBB112:
 1297               	.LBI112:
 438:../../os/common/ports/AVR/chcore.h **** 
 1298               		.loc 2 438 20 view .LVU343
 1299               	.LBB113:
 1300               		.loc 2 440 3 view .LVU344
 1301               	/* #APP */
 1302               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 1303 0006 7894      		sei
 1304               	 ;  0 "" 2
 1305               	/* #NOAPP */
 1306               	.LBE113:
 1307               	.LBE112:
 420:../../os/oslib/src/chmboxes.c **** 
 1308               		.loc 1 420 16 discriminator 1 view .LVU345
 422:../../os/oslib/src/chmboxes.c **** }
 1309               		.loc 1 422 3 view .LVU346
 1310               	/* epilogue start */
 423:../../os/oslib/src/chmboxes.c **** 
 1311               		.loc 1 423 1 is_stmt 0 view .LVU347
 1312 0008 0895      		ret
 1313               		.cfi_endproc
 1314               	.LFE107:
 1316               		.section	.text.chMBFetchI,"ax",@progbits
 1317               	.global	chMBFetchI
 1319               	chMBFetchI:
 1320               	.LVL75:
 1321               	.LFB109:
 477:../../os/oslib/src/chmboxes.c **** 
 478:../../os/oslib/src/chmboxes.c **** /**
 479:../../os/oslib/src/chmboxes.c ****  * @brief   Retrieves a message from a mailbox.
 480:../../os/oslib/src/chmboxes.c ****  * @details This variant is non-blocking, the function returns a timeout
 481:../../os/oslib/src/chmboxes.c ****  *          condition if the queue is empty.
 482:../../os/oslib/src/chmboxes.c ****  *
 483:../../os/oslib/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized @p mailbox_t object
 484:../../os/oslib/src/chmboxes.c ****  * @param[out] msgp     pointer to a message variable for the received message
 485:../../os/oslib/src/chmboxes.c ****  * @return              The operation status.
 486:../../os/oslib/src/chmboxes.c ****  * @retval MSG_OK       if a message has been correctly fetched.
 487:../../os/oslib/src/chmboxes.c ****  * @retval MSG_RESET    if the mailbox has been reset.
 488:../../os/oslib/src/chmboxes.c ****  * @retval MSG_TIMEOUT  if the mailbox is empty and a message cannot be
 489:../../os/oslib/src/chmboxes.c ****  *                      fetched.
 490:../../os/oslib/src/chmboxes.c ****  *
 491:../../os/oslib/src/chmboxes.c ****  * @iclass
 492:../../os/oslib/src/chmboxes.c ****  */
 493:../../os/oslib/src/chmboxes.c **** msg_t chMBFetchI(mailbox_t *mbp, msg_t *msgp) {
 1322               		.loc 1 493 47 is_stmt 1 view -0
 1323               		.cfi_startproc
 1324               		.loc 1 493 47 is_stmt 0 view .LVU349
 1325 0000 CF93      		push r28
 1326               	.LCFI34:
 1327               		.cfi_def_cfa_offset 3
 1328               		.cfi_offset 28, -2
 1329 0002 DF93      		push r29
 1330               	.LCFI35:
 1331               		.cfi_def_cfa_offset 4
 1332               		.cfi_offset 29, -3
 1333               	/* prologue: function */
 1334               	/* frame size = 0 */
 1335               	/* stack size = 2 */
 1336               	.L__stack_usage = 2
 1337 0004 FC01      		movw r30,r24
 1338 0006 DB01      		movw r26,r22
 494:../../os/oslib/src/chmboxes.c **** 
 495:../../os/oslib/src/chmboxes.c ****   chDbgCheckClassI();
 1339               		.loc 1 495 21 is_stmt 1 view .LVU350
 496:../../os/oslib/src/chmboxes.c ****   chDbgCheck((mbp != NULL) && (msgp != NULL));
 1340               		.loc 1 496 3 view .LVU351
 1341               		.loc 1 496 3 view .LVU352
 1342               		.loc 1 496 3 discriminator 7 view .LVU353
 497:../../os/oslib/src/chmboxes.c **** 
 498:../../os/oslib/src/chmboxes.c ****   /* If the mailbox is in reset state then returns immediately.*/
 499:../../os/oslib/src/chmboxes.c ****   if (mbp->reset) {
 1343               		.loc 1 499 3 view .LVU354
 1344               		.loc 1 499 6 is_stmt 0 view .LVU355
 1345 0008 8285      		ldd r24,Z+10
 1346               	.LVL76:
 1347               		.loc 1 499 6 view .LVU356
 1348 000a 8111      		cpse r24,__zero_reg__
 1349 000c 00C0      		rjmp .L53
 500:../../os/oslib/src/chmboxes.c ****     return MSG_RESET;
 501:../../os/oslib/src/chmboxes.c ****   }
 502:../../os/oslib/src/chmboxes.c **** 
 503:../../os/oslib/src/chmboxes.c ****   /* Is there a message in queue? if so then fetch.*/
 504:../../os/oslib/src/chmboxes.c ****   if (chMBGetUsedCountI(mbp) > (size_t)0) {
 1350               		.loc 1 504 3 is_stmt 1 view .LVU357
 1351               	.LVL77:
 1352               	.LBB114:
 1353               	.LBI114:
 152:../../os/oslib/include/chmboxes.h **** 
 1354               		.loc 3 152 22 view .LVU358
 1355               	.LBB115:
 154:../../os/oslib/include/chmboxes.h **** 
 1356               		.loc 3 154 21 view .LVU359
 156:../../os/oslib/include/chmboxes.h **** }
 1357               		.loc 3 156 3 view .LVU360
 156:../../os/oslib/include/chmboxes.h **** }
 1358               		.loc 3 156 3 is_stmt 0 view .LVU361
 1359               	.LBE115:
 1360               	.LBE114:
 1361               		.loc 1 504 6 discriminator 1 view .LVU362
 1362 000e 8085      		ldd r24,Z+8
 1363 0010 9185      		ldd r25,Z+9
 1364 0012 892B      		or r24,r25
 1365 0014 01F0      		breq .L54
 505:../../os/oslib/src/chmboxes.c ****     *msgp = *mbp->rdptr++;
 1366               		.loc 1 505 5 is_stmt 1 view .LVU363
 1367               		.loc 1 505 17 is_stmt 0 view .LVU364
 1368 0016 C681      		ldd r28,Z+6
 1369 0018 D781      		ldd r29,Z+7
 1370               		.loc 1 505 24 view .LVU365
 1371 001a CE01      		movw r24,r28
 1372 001c 0296      		adiw r24,2
 1373 001e 9783      		std Z+7,r25
 1374 0020 8683      		std Z+6,r24
 1375               		.loc 1 505 13 view .LVU366
 1376 0022 2881      		ld r18,Y
 1377 0024 3981      		ldd r19,Y+1
 1378               		.loc 1 505 11 view .LVU367
 1379 0026 2D93      		st X+,r18
 1380 0028 3C93      		st X,r19
 506:../../os/oslib/src/chmboxes.c ****     if (mbp->rdptr >= mbp->top) {
 1381               		.loc 1 506 5 is_stmt 1 view .LVU368
 1382               		.loc 1 506 8 is_stmt 0 view .LVU369
 1383 002a 2281      		ldd r18,Z+2
 1384 002c 3381      		ldd r19,Z+3
 1385 002e 8217      		cp r24,r18
 1386 0030 9307      		cpc r25,r19
 1387 0032 00F4      		brsh .L55
 1388               	.L52:
 507:../../os/oslib/src/chmboxes.c ****       mbp->rdptr = mbp->buffer;
 508:../../os/oslib/src/chmboxes.c ****     }
 509:../../os/oslib/src/chmboxes.c ****     mbp->cnt--;
 1389               		.loc 1 509 5 is_stmt 1 view .LVU370
 1390               		.loc 1 509 13 is_stmt 0 view .LVU371
 1391 0034 8085      		ldd r24,Z+8
 1392 0036 9185      		ldd r25,Z+9
 1393 0038 0197      		sbiw r24,1
 1394 003a 9187      		std Z+9,r25
 1395 003c 8087      		std Z+8,r24
 510:../../os/oslib/src/chmboxes.c **** 
 511:../../os/oslib/src/chmboxes.c ****     /* If there is a writer waiting then makes it ready.*/
 512:../../os/oslib/src/chmboxes.c ****     chThdDequeueNextI(&mbp->qw, MSG_OK);
 1396               		.loc 1 512 5 is_stmt 1 view .LVU372
 1397 003e 60E0      		ldi r22,0
 1398 0040 70E0      		ldi r23,0
 1399               	.LVL78:
 1400               		.loc 1 512 5 is_stmt 0 view .LVU373
 1401 0042 CF01      		movw r24,r30
 1402 0044 0B96      		adiw r24,11
 1403 0046 0E94 0000 		call chThdDequeueNextI
 1404               	.LVL79:
 513:../../os/oslib/src/chmboxes.c **** 
 514:../../os/oslib/src/chmboxes.c ****     return MSG_OK;
 1405               		.loc 1 514 5 is_stmt 1 view .LVU374
 1406               		.loc 1 514 12 is_stmt 0 view .LVU375
 1407 004a 80E0      		ldi r24,0
 1408 004c 90E0      		ldi r25,0
 1409               	.L50:
 1410               	/* epilogue start */
 515:../../os/oslib/src/chmboxes.c ****   }
 516:../../os/oslib/src/chmboxes.c **** 
 517:../../os/oslib/src/chmboxes.c ****   /* No message, immediate timeout.*/
 518:../../os/oslib/src/chmboxes.c ****   return MSG_TIMEOUT;
 519:../../os/oslib/src/chmboxes.c **** }
 1411               		.loc 1 519 1 view .LVU376
 1412 004e DF91      		pop r29
 1413 0050 CF91      		pop r28
 1414 0052 0895      		ret
 1415               	.LVL80:
 1416               	.L55:
 507:../../os/oslib/src/chmboxes.c ****     }
 1417               		.loc 1 507 7 is_stmt 1 view .LVU377
 507:../../os/oslib/src/chmboxes.c ****     }
 1418               		.loc 1 507 18 is_stmt 0 view .LVU378
 1419 0054 8081      		ld r24,Z
 1420 0056 9181      		ldd r25,Z+1
 1421 0058 9783      		std Z+7,r25
 1422 005a 8683      		std Z+6,r24
 1423 005c 00C0      		rjmp .L52
 1424               	.L54:
 518:../../os/oslib/src/chmboxes.c **** }
 1425               		.loc 1 518 10 view .LVU379
 1426 005e 8FEF      		ldi r24,lo8(-1)
 1427 0060 9FEF      		ldi r25,lo8(-1)
 1428 0062 00C0      		rjmp .L50
 1429               	.L53:
 500:../../os/oslib/src/chmboxes.c ****   }
 1430               		.loc 1 500 12 view .LVU380
 1431 0064 8EEF      		ldi r24,lo8(-2)
 1432 0066 9FEF      		ldi r25,lo8(-1)
 1433 0068 00C0      		rjmp .L50
 1434               		.cfi_endproc
 1435               	.LFE109:
 1437               		.text
 1438               	.Letext0:
 1439               		.file 4 "/usr/lib/gcc/avr/14.1.0/include/stddef.h"
 1440               		.file 5 "/usr/avr/include/stdint.h"
 1441               		.file 6 "../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 1442               		.file 7 "../../os/nil/include/ch.h"
DEFINED SYMBOLS
                            *ABS*:00000000 chmboxes.c
     /tmp/ccRhgh01.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccRhgh01.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccRhgh01.s:4      *ABS*:0000003f __SREG__
     /tmp/ccRhgh01.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccRhgh01.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccRhgh01.s:14     .text.chMBObjectInit:00000000 chMBObjectInit
     /tmp/ccRhgh01.s:17     .text.chMBObjectInit:00000000 .Loc.0
     /tmp/ccRhgh01.s:18     .text.chMBObjectInit:00000000 L0
     /tmp/ccRhgh01.s:23     .text.chMBObjectInit:00000000 .Loc.1
     /tmp/ccRhgh01.s:26     .text.chMBObjectInit:00000004 .Loc.2
     /tmp/ccRhgh01.s:27     .text.chMBObjectInit:00000004 .Loc.3
     /tmp/ccRhgh01.s:28     .text.chMBObjectInit:00000004 .Loc.4
     /tmp/ccRhgh01.s:29     .text.chMBObjectInit:00000004 .Loc.5
     /tmp/ccRhgh01.s:30     .text.chMBObjectInit:00000004 .Loc.6
     /tmp/ccRhgh01.s:33     .text.chMBObjectInit:00000008 .Loc.7
     /tmp/ccRhgh01.s:34     .text.chMBObjectInit:00000008 .Loc.8
     /tmp/ccRhgh01.s:37     .text.chMBObjectInit:0000000c .Loc.9
     /tmp/ccRhgh01.s:38     .text.chMBObjectInit:0000000c .Loc.10
     /tmp/ccRhgh01.s:41     .text.chMBObjectInit:00000010 .Loc.11
     /tmp/ccRhgh01.s:42     .text.chMBObjectInit:00000010 .Loc.12
     /tmp/ccRhgh01.s:46     .text.chMBObjectInit:00000014 .Loc.13
     /tmp/ccRhgh01.s:49     .text.chMBObjectInit:00000018 .Loc.14
     /tmp/ccRhgh01.s:52     .text.chMBObjectInit:0000001c .Loc.15
     /tmp/ccRhgh01.s:53     .text.chMBObjectInit:0000001c .Loc.16
     /tmp/ccRhgh01.s:56     .text.chMBObjectInit:00000020 .Loc.17
     /tmp/ccRhgh01.s:57     .text.chMBObjectInit:00000020 .Loc.18
     /tmp/ccRhgh01.s:59     .text.chMBObjectInit:00000022 .Loc.19
     /tmp/ccRhgh01.s:61     .text.chMBObjectInit:00000024 .Loc.20
     /tmp/ccRhgh01.s:64     .text.chMBObjectInit:00000026 .Loc.21
     /tmp/ccRhgh01.s:66     .text.chMBObjectInit:00000028 L0
     /tmp/ccRhgh01.s:72     .text.chMBReset:00000000 chMBReset
     /tmp/ccRhgh01.s:75     .text.chMBReset:00000000 .Loc.22
     /tmp/ccRhgh01.s:76     .text.chMBReset:00000000 L0
     /tmp/ccRhgh01.s:77     .text.chMBReset:00000000 .Loc.23
     /tmp/ccRhgh01.s:91     .text.chMBReset:00000006 .Loc.24
     /tmp/ccRhgh01.s:95     .text.chMBReset:00000006 .Loc.25
     /tmp/ccRhgh01.s:97     .text.chMBReset:00000006 .Loc.26
     /tmp/ccRhgh01.s:105    .text.chMBReset:00000008 .Loc.27
     /tmp/ccRhgh01.s:106    .text.chMBReset:00000008 .Loc.28
     /tmp/ccRhgh01.s:107    .text.chMBReset:00000008 .Loc.29
     /tmp/ccRhgh01.s:111    .text.chMBReset:00000008 .Loc.30
     /tmp/ccRhgh01.s:113    .text.chMBReset:00000008 .Loc.31
     /tmp/ccRhgh01.s:114    .text.chMBReset:00000008 .Loc.32
     /tmp/ccRhgh01.s:115    .text.chMBReset:00000008 .Loc.33
     /tmp/ccRhgh01.s:116    .text.chMBReset:00000008 .Loc.34
     /tmp/ccRhgh01.s:117    .text.chMBReset:00000008 .Loc.35
     /tmp/ccRhgh01.s:118    .text.chMBReset:00000008 .Loc.36
     /tmp/ccRhgh01.s:122    .text.chMBReset:0000000c .Loc.37
     /tmp/ccRhgh01.s:125    .text.chMBReset:00000010 .Loc.38
     /tmp/ccRhgh01.s:126    .text.chMBReset:00000010 .Loc.39
     /tmp/ccRhgh01.s:129    .text.chMBReset:00000014 .Loc.40
     /tmp/ccRhgh01.s:130    .text.chMBReset:00000014 .Loc.41
     /tmp/ccRhgh01.s:133    .text.chMBReset:00000018 .Loc.42
     /tmp/ccRhgh01.s:134    .text.chMBReset:00000018 .Loc.43
     /tmp/ccRhgh01.s:137    .text.chMBReset:0000001c .Loc.44
     /tmp/ccRhgh01.s:144    .text.chMBReset:00000028 .Loc.45
     /tmp/ccRhgh01.s:151    .text.chMBReset:00000034 .Loc.46
     /tmp/ccRhgh01.s:154    .text.chMBReset:00000034 .Loc.47
     /tmp/ccRhgh01.s:157    .text.chMBReset:00000038 .Loc.48
     /tmp/ccRhgh01.s:158    .text.chMBReset:00000038 .Loc.49
     /tmp/ccRhgh01.s:161    .text.chMBReset:00000038 .Loc.50
     /tmp/ccRhgh01.s:163    .text.chMBReset:00000038 .Loc.51
     /tmp/ccRhgh01.s:171    .text.chMBReset:0000003a .Loc.52
     /tmp/ccRhgh01.s:173    .text.chMBReset:0000003a .Loc.53
     /tmp/ccRhgh01.s:177    .text.chMBReset:0000003e .Loc.54
     /tmp/ccRhgh01.s:179    .text.chMBReset:00000040 L0
     /tmp/ccRhgh01.s:185    .text.chMBResetI:00000000 chMBResetI
     /tmp/ccRhgh01.s:188    .text.chMBResetI:00000000 .Loc.55
     /tmp/ccRhgh01.s:189    .text.chMBResetI:00000000 L0
     /tmp/ccRhgh01.s:190    .text.chMBResetI:00000000 .Loc.56
     /tmp/ccRhgh01.s:204    .text.chMBResetI:00000006 .Loc.57
     /tmp/ccRhgh01.s:205    .text.chMBResetI:00000006 .Loc.58
     /tmp/ccRhgh01.s:206    .text.chMBResetI:00000006 .Loc.59
     /tmp/ccRhgh01.s:207    .text.chMBResetI:00000006 .Loc.60
     /tmp/ccRhgh01.s:208    .text.chMBResetI:00000006 .Loc.61
     /tmp/ccRhgh01.s:209    .text.chMBResetI:00000006 .Loc.62
     /tmp/ccRhgh01.s:213    .text.chMBResetI:0000000a .Loc.63
     /tmp/ccRhgh01.s:216    .text.chMBResetI:0000000e .Loc.64
     /tmp/ccRhgh01.s:217    .text.chMBResetI:0000000e .Loc.65
     /tmp/ccRhgh01.s:220    .text.chMBResetI:00000012 .Loc.66
     /tmp/ccRhgh01.s:221    .text.chMBResetI:00000012 .Loc.67
     /tmp/ccRhgh01.s:224    .text.chMBResetI:00000016 .Loc.68
     /tmp/ccRhgh01.s:225    .text.chMBResetI:00000016 .Loc.69
     /tmp/ccRhgh01.s:228    .text.chMBResetI:0000001a .Loc.70
     /tmp/ccRhgh01.s:235    .text.chMBResetI:00000026 .Loc.71
     /tmp/ccRhgh01.s:241    .text.chMBResetI:0000002e .Loc.72
     /tmp/ccRhgh01.s:245    .text.chMBResetI:00000032 .Loc.73
     /tmp/ccRhgh01.s:248    .text.chMBResetI:00000036 .Loc.74
     /tmp/ccRhgh01.s:249    .text.chMBResetI:00000036 L0
     /tmp/ccRhgh01.s:255    .text.chMBPostTimeoutS:00000000 chMBPostTimeoutS
     /tmp/ccRhgh01.s:258    .text.chMBPostTimeoutS:00000000 .Loc.75
     /tmp/ccRhgh01.s:259    .text.chMBPostTimeoutS:00000000 L0
     /tmp/ccRhgh01.s:260    .text.chMBPostTimeoutS:00000000 .Loc.76
     /tmp/ccRhgh01.s:308    .text.chMBPostTimeoutS:0000001a .Loc.77
     /tmp/ccRhgh01.s:309    .text.chMBPostTimeoutS:0000001a .Loc.78
     /tmp/ccRhgh01.s:310    .text.chMBPostTimeoutS:0000001a .Loc.79
     /tmp/ccRhgh01.s:311    .text.chMBPostTimeoutS:0000001a .Loc.80
     /tmp/ccRhgh01.s:312    .text.chMBPostTimeoutS:0000001a .Loc.81
     /tmp/ccRhgh01.s:318    .text.chMBPostTimeoutS:00000022 .Loc.82
     /tmp/ccRhgh01.s:322    .text.chMBPostTimeoutS:00000024 .Loc.83
     /tmp/ccRhgh01.s:326    .text.chMBPostTimeoutS:00000024 .Loc.84
     /tmp/ccRhgh01.s:327    .text.chMBPostTimeoutS:00000024 .Loc.85
     /tmp/ccRhgh01.s:328    .text.chMBPostTimeoutS:00000024 .Loc.86
     /tmp/ccRhgh01.s:331    .text.chMBPostTimeoutS:00000024 .Loc.87
     /tmp/ccRhgh01.s:333    .text.chMBPostTimeoutS:00000024 .Loc.88
     /tmp/ccRhgh01.s:334    .text.chMBPostTimeoutS:00000024 .Loc.89
     /tmp/ccRhgh01.s:337    .text.chMBPostTimeoutS:00000028 .Loc.90
     /tmp/ccRhgh01.s:341    .text.chMBPostTimeoutS:0000002c .Loc.91
     /tmp/ccRhgh01.s:346    .text.chMBPostTimeoutS:0000002c .Loc.92
     /tmp/ccRhgh01.s:348    .text.chMBPostTimeoutS:0000002c .Loc.93
     /tmp/ccRhgh01.s:349    .text.chMBPostTimeoutS:0000002c .Loc.94
     /tmp/ccRhgh01.s:350    .text.chMBPostTimeoutS:0000002c .Loc.95
     /tmp/ccRhgh01.s:355    .text.chMBPostTimeoutS:0000002c .Loc.96
     /tmp/ccRhgh01.s:364    .text.chMBPostTimeoutS:00000036 .Loc.97
     /tmp/ccRhgh01.s:370    .text.chMBPostTimeoutS:00000040 .Loc.98
     /tmp/ccRhgh01.s:371    .text.chMBPostTimeoutS:00000040 .Loc.99
     /tmp/ccRhgh01.s:378    .text.chMBPostTimeoutS:0000004a .Loc.100
     /tmp/ccRhgh01.s:383    .text.chMBPostTimeoutS:0000004e .Loc.101
     /tmp/ccRhgh01.s:384    .text.chMBPostTimeoutS:0000004e .Loc.102
     /tmp/ccRhgh01.s:385    .text.chMBPostTimeoutS:0000004e .Loc.103
     /tmp/ccRhgh01.s:386    .text.chMBPostTimeoutS:0000004e .Loc.104
     /tmp/ccRhgh01.s:390    .text.chMBPostTimeoutS:00000054 .Loc.105
     /tmp/ccRhgh01.s:394    .text.chMBPostTimeoutS:00000058 .Loc.106
     /tmp/ccRhgh01.s:400    .text.chMBPostTimeoutS:0000005e .Loc.107
     /tmp/ccRhgh01.s:406    .text.chMBPostTimeoutS:00000066 .Loc.108
     /tmp/ccRhgh01.s:410    .text.chMBPostTimeoutS:0000006a .Loc.109
     /tmp/ccRhgh01.s:414    .text.chMBPostTimeoutS:0000006e .Loc.110
     /tmp/ccRhgh01.s:418    .text.chMBPostTimeoutS:00000070 .Loc.111
     /tmp/ccRhgh01.s:419    .text.chMBPostTimeoutS:00000070 .Loc.112
     /tmp/ccRhgh01.s:422    .text.chMBPostTimeoutS:00000074 .Loc.113
     /tmp/ccRhgh01.s:427    .text.chMBPostTimeoutS:0000007c .Loc.114
     /tmp/ccRhgh01.s:430    .text.chMBPostTimeoutS:00000080 .Loc.115
     /tmp/ccRhgh01.s:431    .text.chMBPostTimeoutS:00000080 .Loc.116
     /tmp/ccRhgh01.s:435    .text.chMBPostTimeoutS:00000086 .Loc.117
     /tmp/ccRhgh01.s:436    .text.chMBPostTimeoutS:00000086 .Loc.118
     /tmp/ccRhgh01.s:440    .text.chMBPostTimeoutS:0000008a .Loc.119
     /tmp/ccRhgh01.s:441    .text.chMBPostTimeoutS:0000008a .Loc.120
     /tmp/ccRhgh01.s:447    .text.chMBPostTimeoutS:00000094 .Loc.121
     /tmp/ccRhgh01.s:454    .text.chMBPostTimeoutS:000000a0 .Loc.122
     /tmp/ccRhgh01.s:457    .text.chMBPostTimeoutS:000000a4 .Loc.123
     /tmp/ccRhgh01.s:458    .text.chMBPostTimeoutS:000000a4 .Loc.124
     /tmp/ccRhgh01.s:462    .text.chMBPostTimeoutS:000000aa L0
     /tmp/ccRhgh01.s:468    .text.chMBPostTimeout:00000000 chMBPostTimeout
     /tmp/ccRhgh01.s:471    .text.chMBPostTimeout:00000000 .Loc.125
     /tmp/ccRhgh01.s:472    .text.chMBPostTimeout:00000000 L0
     /tmp/ccRhgh01.s:477    .text.chMBPostTimeout:00000000 .Loc.126
     /tmp/ccRhgh01.s:478    .text.chMBPostTimeout:00000000 .Loc.127
     /tmp/ccRhgh01.s:481    .text.chMBPostTimeout:00000000 .Loc.128
     /tmp/ccRhgh01.s:483    .text.chMBPostTimeout:00000000 .Loc.129
     /tmp/ccRhgh01.s:491    .text.chMBPostTimeout:00000002 .Loc.130
     /tmp/ccRhgh01.s:492    .text.chMBPostTimeout:00000002 .Loc.131
     /tmp/ccRhgh01.s:493    .text.chMBPostTimeout:00000002 .Loc.132
     /tmp/ccRhgh01.s:494    .text.chMBPostTimeout:00000002 .Loc.133
     /tmp/ccRhgh01.s:497    .text.chMBPostTimeout:00000006 .Loc.134
     /tmp/ccRhgh01.s:498    .text.chMBPostTimeout:00000006 .Loc.135
     /tmp/ccRhgh01.s:501    .text.chMBPostTimeout:00000006 .Loc.136
     /tmp/ccRhgh01.s:503    .text.chMBPostTimeout:00000006 .Loc.137
     /tmp/ccRhgh01.s:511    .text.chMBPostTimeout:00000008 .Loc.138
     /tmp/ccRhgh01.s:512    .text.chMBPostTimeout:00000008 .Loc.139
     /tmp/ccRhgh01.s:514    .text.chMBPostTimeout:00000008 .Loc.140
     /tmp/ccRhgh01.s:516    .text.chMBPostTimeout:0000000a L0
     /tmp/ccRhgh01.s:522    .text.chMBPostI:00000000 chMBPostI
     /tmp/ccRhgh01.s:525    .text.chMBPostI:00000000 .Loc.141
     /tmp/ccRhgh01.s:526    .text.chMBPostI:00000000 L0
     /tmp/ccRhgh01.s:531    .text.chMBPostI:00000000 .Loc.142
     /tmp/ccRhgh01.s:533    .text.chMBPostI:00000002 .Loc.143
     /tmp/ccRhgh01.s:534    .text.chMBPostI:00000002 .Loc.144
     /tmp/ccRhgh01.s:535    .text.chMBPostI:00000002 .Loc.145
     /tmp/ccRhgh01.s:536    .text.chMBPostI:00000002 .Loc.146
     /tmp/ccRhgh01.s:537    .text.chMBPostI:00000002 .Loc.147
     /tmp/ccRhgh01.s:538    .text.chMBPostI:00000002 .Loc.148
     /tmp/ccRhgh01.s:541    .text.chMBPostI:00000004 .Loc.149
     /tmp/ccRhgh01.s:544    .text.chMBPostI:00000008 .Loc.150
     /tmp/ccRhgh01.s:548    .text.chMBPostI:00000008 .Loc.151
     /tmp/ccRhgh01.s:549    .text.chMBPostI:00000008 .Loc.152
     /tmp/ccRhgh01.s:550    .text.chMBPostI:00000008 .Loc.153
     /tmp/ccRhgh01.s:553    .text.chMBPostI:00000008 .Loc.154
     /tmp/ccRhgh01.s:555    .text.chMBPostI:00000008 .Loc.155
     /tmp/ccRhgh01.s:556    .text.chMBPostI:00000008 .Loc.156
     /tmp/ccRhgh01.s:559    .text.chMBPostI:0000000c .Loc.157
     /tmp/ccRhgh01.s:563    .text.chMBPostI:00000010 .Loc.158
     /tmp/ccRhgh01.s:568    .text.chMBPostI:00000010 .Loc.159
     /tmp/ccRhgh01.s:570    .text.chMBPostI:00000010 .Loc.160
     /tmp/ccRhgh01.s:571    .text.chMBPostI:00000010 .Loc.161
     /tmp/ccRhgh01.s:572    .text.chMBPostI:00000010 .Loc.162
     /tmp/ccRhgh01.s:577    .text.chMBPostI:00000010 .Loc.163
     /tmp/ccRhgh01.s:586    .text.chMBPostI:0000001a .Loc.164
     /tmp/ccRhgh01.s:592    .text.chMBPostI:00000024 .Loc.165
     /tmp/ccRhgh01.s:593    .text.chMBPostI:00000024 .Loc.166
     /tmp/ccRhgh01.s:596    .text.chMBPostI:00000028 .Loc.167
     /tmp/ccRhgh01.s:601    .text.chMBPostI:00000030 .Loc.168
     /tmp/ccRhgh01.s:605    .text.chMBPostI:00000036 .Loc.169
     /tmp/ccRhgh01.s:606    .text.chMBPostI:00000036 .Loc.170
     /tmp/ccRhgh01.s:610    .text.chMBPostI:0000003c .Loc.171
     /tmp/ccRhgh01.s:611    .text.chMBPostI:0000003c .Loc.172
     /tmp/ccRhgh01.s:615    .text.chMBPostI:00000040 .Loc.173
     /tmp/ccRhgh01.s:616    .text.chMBPostI:00000040 .Loc.174
     /tmp/ccRhgh01.s:622    .text.chMBPostI:0000004a .Loc.175
     /tmp/ccRhgh01.s:626    .text.chMBPostI:0000004e .Loc.176
     /tmp/ccRhgh01.s:631    .text.chMBPostI:00000056 .Loc.177
     /tmp/ccRhgh01.s:632    .text.chMBPostI:00000056 .Loc.178
     /tmp/ccRhgh01.s:638    .text.chMBPostI:0000005c .Loc.179
     /tmp/ccRhgh01.s:642    .text.chMBPostI:00000060 .Loc.180
     /tmp/ccRhgh01.s:645    .text.chMBPostI:00000062 .Loc.181
     /tmp/ccRhgh01.s:649    .text.chMBPostI:00000068 L0
     /tmp/ccRhgh01.s:655    .text.chMBPostAheadTimeoutS:00000000 chMBPostAheadTimeoutS
     /tmp/ccRhgh01.s:658    .text.chMBPostAheadTimeoutS:00000000 .Loc.182
     /tmp/ccRhgh01.s:659    .text.chMBPostAheadTimeoutS:00000000 L0
     /tmp/ccRhgh01.s:660    .text.chMBPostAheadTimeoutS:00000000 .Loc.183
     /tmp/ccRhgh01.s:708    .text.chMBPostAheadTimeoutS:0000001a .Loc.184
     /tmp/ccRhgh01.s:709    .text.chMBPostAheadTimeoutS:0000001a .Loc.185
     /tmp/ccRhgh01.s:710    .text.chMBPostAheadTimeoutS:0000001a .Loc.186
     /tmp/ccRhgh01.s:711    .text.chMBPostAheadTimeoutS:0000001a .Loc.187
     /tmp/ccRhgh01.s:712    .text.chMBPostAheadTimeoutS:0000001a .Loc.188
     /tmp/ccRhgh01.s:718    .text.chMBPostAheadTimeoutS:00000022 .Loc.189
     /tmp/ccRhgh01.s:722    .text.chMBPostAheadTimeoutS:00000024 .Loc.190
     /tmp/ccRhgh01.s:725    .text.chMBPostAheadTimeoutS:00000024 .Loc.191
     /tmp/ccRhgh01.s:726    .text.chMBPostAheadTimeoutS:00000024 .Loc.192
     /tmp/ccRhgh01.s:727    .text.chMBPostAheadTimeoutS:00000024 .Loc.193
     /tmp/ccRhgh01.s:730    .text.chMBPostAheadTimeoutS:00000024 .Loc.194
     /tmp/ccRhgh01.s:732    .text.chMBPostAheadTimeoutS:00000024 .Loc.195
     /tmp/ccRhgh01.s:733    .text.chMBPostAheadTimeoutS:00000024 .Loc.196
     /tmp/ccRhgh01.s:736    .text.chMBPostAheadTimeoutS:00000028 .Loc.197
     /tmp/ccRhgh01.s:740    .text.chMBPostAheadTimeoutS:0000002c .Loc.198
     /tmp/ccRhgh01.s:745    .text.chMBPostAheadTimeoutS:0000002c .Loc.199
     /tmp/ccRhgh01.s:747    .text.chMBPostAheadTimeoutS:0000002c .Loc.200
     /tmp/ccRhgh01.s:748    .text.chMBPostAheadTimeoutS:0000002c .Loc.201
     /tmp/ccRhgh01.s:749    .text.chMBPostAheadTimeoutS:0000002c .Loc.202
     /tmp/ccRhgh01.s:754    .text.chMBPostAheadTimeoutS:0000002c .Loc.203
     /tmp/ccRhgh01.s:763    .text.chMBPostAheadTimeoutS:00000036 .Loc.204
     /tmp/ccRhgh01.s:769    .text.chMBPostAheadTimeoutS:00000040 .Loc.205
     /tmp/ccRhgh01.s:770    .text.chMBPostAheadTimeoutS:00000040 .Loc.206
     /tmp/ccRhgh01.s:777    .text.chMBPostAheadTimeoutS:0000004a .Loc.207
     /tmp/ccRhgh01.s:782    .text.chMBPostAheadTimeoutS:0000004e .Loc.208
     /tmp/ccRhgh01.s:783    .text.chMBPostAheadTimeoutS:0000004e .Loc.209
     /tmp/ccRhgh01.s:784    .text.chMBPostAheadTimeoutS:0000004e .Loc.210
     /tmp/ccRhgh01.s:785    .text.chMBPostAheadTimeoutS:0000004e .Loc.211
     /tmp/ccRhgh01.s:789    .text.chMBPostAheadTimeoutS:00000054 .Loc.212
     /tmp/ccRhgh01.s:793    .text.chMBPostAheadTimeoutS:00000058 .Loc.213
     /tmp/ccRhgh01.s:799    .text.chMBPostAheadTimeoutS:0000005e .Loc.214
     /tmp/ccRhgh01.s:805    .text.chMBPostAheadTimeoutS:00000066 .Loc.215
     /tmp/ccRhgh01.s:809    .text.chMBPostAheadTimeoutS:0000006a .Loc.216
     /tmp/ccRhgh01.s:813    .text.chMBPostAheadTimeoutS:0000006e .Loc.217
     /tmp/ccRhgh01.s:817    .text.chMBPostAheadTimeoutS:00000070 .Loc.218
     /tmp/ccRhgh01.s:818    .text.chMBPostAheadTimeoutS:00000070 .Loc.219
     /tmp/ccRhgh01.s:822    .text.chMBPostAheadTimeoutS:00000076 .Loc.220
     /tmp/ccRhgh01.s:826    .text.chMBPostAheadTimeoutS:0000007c .Loc.221
     /tmp/ccRhgh01.s:827    .text.chMBPostAheadTimeoutS:0000007c .Loc.222
     /tmp/ccRhgh01.s:831    .text.chMBPostAheadTimeoutS:00000080 .Loc.223
     /tmp/ccRhgh01.s:834    .text.chMBPostAheadTimeoutS:00000084 .Loc.224
     /tmp/ccRhgh01.s:835    .text.chMBPostAheadTimeoutS:00000084 .Loc.225
     /tmp/ccRhgh01.s:838    .text.chMBPostAheadTimeoutS:00000088 .Loc.226
     /tmp/ccRhgh01.s:839    .text.chMBPostAheadTimeoutS:00000088 .Loc.227
     /tmp/ccRhgh01.s:845    .text.chMBPostAheadTimeoutS:00000092 .Loc.228
     /tmp/ccRhgh01.s:852    .text.chMBPostAheadTimeoutS:0000009e .Loc.229
     /tmp/ccRhgh01.s:855    .text.chMBPostAheadTimeoutS:000000a2 .Loc.230
     /tmp/ccRhgh01.s:856    .text.chMBPostAheadTimeoutS:000000a2 .Loc.231
     /tmp/ccRhgh01.s:860    .text.chMBPostAheadTimeoutS:000000a8 L0
     /tmp/ccRhgh01.s:866    .text.chMBPostAheadTimeout:00000000 chMBPostAheadTimeout
     /tmp/ccRhgh01.s:869    .text.chMBPostAheadTimeout:00000000 .Loc.232
     /tmp/ccRhgh01.s:870    .text.chMBPostAheadTimeout:00000000 L0
     /tmp/ccRhgh01.s:875    .text.chMBPostAheadTimeout:00000000 .Loc.233
     /tmp/ccRhgh01.s:876    .text.chMBPostAheadTimeout:00000000 .Loc.234
     /tmp/ccRhgh01.s:879    .text.chMBPostAheadTimeout:00000000 .Loc.235
     /tmp/ccRhgh01.s:881    .text.chMBPostAheadTimeout:00000000 .Loc.236
     /tmp/ccRhgh01.s:889    .text.chMBPostAheadTimeout:00000002 .Loc.237
     /tmp/ccRhgh01.s:890    .text.chMBPostAheadTimeout:00000002 .Loc.238
     /tmp/ccRhgh01.s:891    .text.chMBPostAheadTimeout:00000002 .Loc.239
     /tmp/ccRhgh01.s:892    .text.chMBPostAheadTimeout:00000002 .Loc.240
     /tmp/ccRhgh01.s:895    .text.chMBPostAheadTimeout:00000006 .Loc.241
     /tmp/ccRhgh01.s:896    .text.chMBPostAheadTimeout:00000006 .Loc.242
     /tmp/ccRhgh01.s:899    .text.chMBPostAheadTimeout:00000006 .Loc.243
     /tmp/ccRhgh01.s:901    .text.chMBPostAheadTimeout:00000006 .Loc.244
     /tmp/ccRhgh01.s:909    .text.chMBPostAheadTimeout:00000008 .Loc.245
     /tmp/ccRhgh01.s:910    .text.chMBPostAheadTimeout:00000008 .Loc.246
     /tmp/ccRhgh01.s:912    .text.chMBPostAheadTimeout:00000008 .Loc.247
     /tmp/ccRhgh01.s:914    .text.chMBPostAheadTimeout:0000000a L0
     /tmp/ccRhgh01.s:920    .text.chMBPostAheadI:00000000 chMBPostAheadI
     /tmp/ccRhgh01.s:923    .text.chMBPostAheadI:00000000 .Loc.248
     /tmp/ccRhgh01.s:924    .text.chMBPostAheadI:00000000 L0
     /tmp/ccRhgh01.s:929    .text.chMBPostAheadI:00000000 .Loc.249
     /tmp/ccRhgh01.s:931    .text.chMBPostAheadI:00000002 .Loc.250
     /tmp/ccRhgh01.s:932    .text.chMBPostAheadI:00000002 .Loc.251
     /tmp/ccRhgh01.s:933    .text.chMBPostAheadI:00000002 .Loc.252
     /tmp/ccRhgh01.s:934    .text.chMBPostAheadI:00000002 .Loc.253
     /tmp/ccRhgh01.s:935    .text.chMBPostAheadI:00000002 .Loc.254
     /tmp/ccRhgh01.s:936    .text.chMBPostAheadI:00000002 .Loc.255
     /tmp/ccRhgh01.s:939    .text.chMBPostAheadI:00000004 .Loc.256
     /tmp/ccRhgh01.s:942    .text.chMBPostAheadI:00000008 .Loc.257
     /tmp/ccRhgh01.s:946    .text.chMBPostAheadI:00000008 .Loc.258
     /tmp/ccRhgh01.s:947    .text.chMBPostAheadI:00000008 .Loc.259
     /tmp/ccRhgh01.s:948    .text.chMBPostAheadI:00000008 .Loc.260
     /tmp/ccRhgh01.s:951    .text.chMBPostAheadI:00000008 .Loc.261
     /tmp/ccRhgh01.s:953    .text.chMBPostAheadI:00000008 .Loc.262
     /tmp/ccRhgh01.s:954    .text.chMBPostAheadI:00000008 .Loc.263
     /tmp/ccRhgh01.s:957    .text.chMBPostAheadI:0000000c .Loc.264
     /tmp/ccRhgh01.s:961    .text.chMBPostAheadI:00000010 .Loc.265
     /tmp/ccRhgh01.s:966    .text.chMBPostAheadI:00000010 .Loc.266
     /tmp/ccRhgh01.s:968    .text.chMBPostAheadI:00000010 .Loc.267
     /tmp/ccRhgh01.s:969    .text.chMBPostAheadI:00000010 .Loc.268
     /tmp/ccRhgh01.s:970    .text.chMBPostAheadI:00000010 .Loc.269
     /tmp/ccRhgh01.s:975    .text.chMBPostAheadI:00000010 .Loc.270
     /tmp/ccRhgh01.s:984    .text.chMBPostAheadI:0000001a .Loc.271
     /tmp/ccRhgh01.s:990    .text.chMBPostAheadI:00000024 .Loc.272
     /tmp/ccRhgh01.s:991    .text.chMBPostAheadI:00000024 .Loc.273
     /tmp/ccRhgh01.s:995    .text.chMBPostAheadI:0000002a .Loc.274
     /tmp/ccRhgh01.s:999    .text.chMBPostAheadI:00000030 .Loc.275
     /tmp/ccRhgh01.s:1000   .text.chMBPostAheadI:00000030 .Loc.276
     /tmp/ccRhgh01.s:1004   .text.chMBPostAheadI:00000034 .Loc.277
     /tmp/ccRhgh01.s:1007   .text.chMBPostAheadI:00000038 .Loc.278
     /tmp/ccRhgh01.s:1008   .text.chMBPostAheadI:00000038 .Loc.279
     /tmp/ccRhgh01.s:1012   .text.chMBPostAheadI:0000003e .Loc.280
     /tmp/ccRhgh01.s:1013   .text.chMBPostAheadI:0000003e .Loc.281
     /tmp/ccRhgh01.s:1019   .text.chMBPostAheadI:00000048 .Loc.282
     /tmp/ccRhgh01.s:1023   .text.chMBPostAheadI:0000004c .Loc.283
     /tmp/ccRhgh01.s:1028   .text.chMBPostAheadI:00000054 .Loc.284
     /tmp/ccRhgh01.s:1029   .text.chMBPostAheadI:00000054 .Loc.285
     /tmp/ccRhgh01.s:1035   .text.chMBPostAheadI:0000005a .Loc.286
     /tmp/ccRhgh01.s:1039   .text.chMBPostAheadI:0000005e .Loc.287
     /tmp/ccRhgh01.s:1042   .text.chMBPostAheadI:00000060 .Loc.288
     /tmp/ccRhgh01.s:1046   .text.chMBPostAheadI:00000066 L0
     /tmp/ccRhgh01.s:1052   .text.chMBFetchTimeoutS:00000000 chMBFetchTimeoutS
     /tmp/ccRhgh01.s:1055   .text.chMBFetchTimeoutS:00000000 .Loc.289
     /tmp/ccRhgh01.s:1056   .text.chMBFetchTimeoutS:00000000 L0
     /tmp/ccRhgh01.s:1057   .text.chMBFetchTimeoutS:00000000 .Loc.290
     /tmp/ccRhgh01.s:1105   .text.chMBFetchTimeoutS:0000001a .Loc.291
     /tmp/ccRhgh01.s:1106   .text.chMBFetchTimeoutS:0000001a .Loc.292
     /tmp/ccRhgh01.s:1107   .text.chMBFetchTimeoutS:0000001a .Loc.293
     /tmp/ccRhgh01.s:1108   .text.chMBFetchTimeoutS:0000001a .Loc.294
     /tmp/ccRhgh01.s:1109   .text.chMBFetchTimeoutS:0000001a .Loc.295
     /tmp/ccRhgh01.s:1115   .text.chMBFetchTimeoutS:00000022 .Loc.296
     /tmp/ccRhgh01.s:1119   .text.chMBFetchTimeoutS:00000024 .Loc.297
     /tmp/ccRhgh01.s:1122   .text.chMBFetchTimeoutS:00000024 .Loc.298
     /tmp/ccRhgh01.s:1124   .text.chMBFetchTimeoutS:00000024 .Loc.299
     /tmp/ccRhgh01.s:1125   .text.chMBFetchTimeoutS:00000024 .Loc.300
     /tmp/ccRhgh01.s:1126   .text.chMBFetchTimeoutS:00000024 .Loc.301
     /tmp/ccRhgh01.s:1129   .text.chMBFetchTimeoutS:00000024 .Loc.302
     /tmp/ccRhgh01.s:1136   .text.chMBFetchTimeoutS:00000030 .Loc.303
     /tmp/ccRhgh01.s:1137   .text.chMBFetchTimeoutS:00000030 .Loc.304
     /tmp/ccRhgh01.s:1144   .text.chMBFetchTimeoutS:0000003a .Loc.305
     /tmp/ccRhgh01.s:1149   .text.chMBFetchTimeoutS:0000003e .Loc.306
     /tmp/ccRhgh01.s:1150   .text.chMBFetchTimeoutS:0000003e .Loc.307
     /tmp/ccRhgh01.s:1151   .text.chMBFetchTimeoutS:0000003e .Loc.308
     /tmp/ccRhgh01.s:1152   .text.chMBFetchTimeoutS:0000003e .Loc.309
     /tmp/ccRhgh01.s:1159   .text.chMBFetchTimeoutS:0000004a .Loc.310
     /tmp/ccRhgh01.s:1163   .text.chMBFetchTimeoutS:0000004e .Loc.311
     /tmp/ccRhgh01.s:1171   .text.chMBFetchTimeoutS:00000058 .Loc.312
     /tmp/ccRhgh01.s:1175   .text.chMBFetchTimeoutS:0000005c .Loc.313
     /tmp/ccRhgh01.s:1179   .text.chMBFetchTimeoutS:00000060 .Loc.314
     /tmp/ccRhgh01.s:1183   .text.chMBFetchTimeoutS:00000064 .Loc.315
     /tmp/ccRhgh01.s:1189   .text.chMBFetchTimeoutS:00000066 .Loc.316
     /tmp/ccRhgh01.s:1191   .text.chMBFetchTimeoutS:00000066 .Loc.317
     /tmp/ccRhgh01.s:1192   .text.chMBFetchTimeoutS:00000066 .Loc.318
     /tmp/ccRhgh01.s:1197   .text.chMBFetchTimeoutS:0000006e .Loc.319
     /tmp/ccRhgh01.s:1204   .text.chMBFetchTimeoutS:0000007a .Loc.320
     /tmp/ccRhgh01.s:1207   .text.chMBFetchTimeoutS:0000007e .Loc.321
     /tmp/ccRhgh01.s:1211   .text.chMBFetchTimeoutS:00000084 .Loc.322
     /tmp/ccRhgh01.s:1212   .text.chMBFetchTimeoutS:00000084 .Loc.323
     /tmp/ccRhgh01.s:1220   .text.chMBFetchTimeoutS:00000092 .Loc.324
     /tmp/ccRhgh01.s:1221   .text.chMBFetchTimeoutS:00000092 .Loc.325
     /tmp/ccRhgh01.s:1230   .text.chMBFetchTimeoutS:000000a0 .Loc.326
     /tmp/ccRhgh01.s:1231   .text.chMBFetchTimeoutS:000000a0 .Loc.327
     /tmp/ccRhgh01.s:1242   .text.chMBFetchTimeoutS:000000b4 .Loc.328
     /tmp/ccRhgh01.s:1249   .text.chMBFetchTimeoutS:000000c0 .Loc.329
     /tmp/ccRhgh01.s:1252   .text.chMBFetchTimeoutS:000000c4 .Loc.330
     /tmp/ccRhgh01.s:1253   .text.chMBFetchTimeoutS:000000c4 .Loc.331
     /tmp/ccRhgh01.s:1259   .text.chMBFetchTimeoutS:000000ca L0
     /tmp/ccRhgh01.s:1265   .text.chMBFetchTimeout:00000000 chMBFetchTimeout
     /tmp/ccRhgh01.s:1268   .text.chMBFetchTimeout:00000000 .Loc.332
     /tmp/ccRhgh01.s:1269   .text.chMBFetchTimeout:00000000 L0
     /tmp/ccRhgh01.s:1274   .text.chMBFetchTimeout:00000000 .Loc.333
     /tmp/ccRhgh01.s:1275   .text.chMBFetchTimeout:00000000 .Loc.334
     /tmp/ccRhgh01.s:1278   .text.chMBFetchTimeout:00000000 .Loc.335
     /tmp/ccRhgh01.s:1280   .text.chMBFetchTimeout:00000000 .Loc.336
     /tmp/ccRhgh01.s:1288   .text.chMBFetchTimeout:00000002 .Loc.337
     /tmp/ccRhgh01.s:1289   .text.chMBFetchTimeout:00000002 .Loc.338
     /tmp/ccRhgh01.s:1290   .text.chMBFetchTimeout:00000002 .Loc.339
     /tmp/ccRhgh01.s:1291   .text.chMBFetchTimeout:00000002 .Loc.340
     /tmp/ccRhgh01.s:1294   .text.chMBFetchTimeout:00000006 .Loc.341
     /tmp/ccRhgh01.s:1295   .text.chMBFetchTimeout:00000006 .Loc.342
     /tmp/ccRhgh01.s:1298   .text.chMBFetchTimeout:00000006 .Loc.343
     /tmp/ccRhgh01.s:1300   .text.chMBFetchTimeout:00000006 .Loc.344
     /tmp/ccRhgh01.s:1308   .text.chMBFetchTimeout:00000008 .Loc.345
     /tmp/ccRhgh01.s:1309   .text.chMBFetchTimeout:00000008 .Loc.346
     /tmp/ccRhgh01.s:1311   .text.chMBFetchTimeout:00000008 .Loc.347
     /tmp/ccRhgh01.s:1313   .text.chMBFetchTimeout:0000000a L0
     /tmp/ccRhgh01.s:1319   .text.chMBFetchI:00000000 chMBFetchI
     /tmp/ccRhgh01.s:1322   .text.chMBFetchI:00000000 .Loc.348
     /tmp/ccRhgh01.s:1323   .text.chMBFetchI:00000000 L0
     /tmp/ccRhgh01.s:1324   .text.chMBFetchI:00000000 .Loc.349
     /tmp/ccRhgh01.s:1339   .text.chMBFetchI:00000008 .Loc.350
     /tmp/ccRhgh01.s:1340   .text.chMBFetchI:00000008 .Loc.351
     /tmp/ccRhgh01.s:1341   .text.chMBFetchI:00000008 .Loc.352
     /tmp/ccRhgh01.s:1342   .text.chMBFetchI:00000008 .Loc.353
     /tmp/ccRhgh01.s:1343   .text.chMBFetchI:00000008 .Loc.354
     /tmp/ccRhgh01.s:1344   .text.chMBFetchI:00000008 .Loc.355
     /tmp/ccRhgh01.s:1347   .text.chMBFetchI:0000000a .Loc.356
     /tmp/ccRhgh01.s:1350   .text.chMBFetchI:0000000e .Loc.357
     /tmp/ccRhgh01.s:1354   .text.chMBFetchI:0000000e .Loc.358
     /tmp/ccRhgh01.s:1356   .text.chMBFetchI:0000000e .Loc.359
     /tmp/ccRhgh01.s:1357   .text.chMBFetchI:0000000e .Loc.360
     /tmp/ccRhgh01.s:1358   .text.chMBFetchI:0000000e .Loc.361
     /tmp/ccRhgh01.s:1361   .text.chMBFetchI:0000000e .Loc.362
     /tmp/ccRhgh01.s:1366   .text.chMBFetchI:00000016 .Loc.363
     /tmp/ccRhgh01.s:1367   .text.chMBFetchI:00000016 .Loc.364
     /tmp/ccRhgh01.s:1370   .text.chMBFetchI:0000001a .Loc.365
     /tmp/ccRhgh01.s:1375   .text.chMBFetchI:00000022 .Loc.366
     /tmp/ccRhgh01.s:1378   .text.chMBFetchI:00000026 .Loc.367
     /tmp/ccRhgh01.s:1381   .text.chMBFetchI:0000002a .Loc.368
     /tmp/ccRhgh01.s:1382   .text.chMBFetchI:0000002a .Loc.369
     /tmp/ccRhgh01.s:1389   .text.chMBFetchI:00000034 .Loc.370
     /tmp/ccRhgh01.s:1390   .text.chMBFetchI:00000034 .Loc.371
     /tmp/ccRhgh01.s:1396   .text.chMBFetchI:0000003e .Loc.372
     /tmp/ccRhgh01.s:1400   .text.chMBFetchI:00000042 .Loc.373
     /tmp/ccRhgh01.s:1405   .text.chMBFetchI:0000004a .Loc.374
     /tmp/ccRhgh01.s:1406   .text.chMBFetchI:0000004a .Loc.375
     /tmp/ccRhgh01.s:1411   .text.chMBFetchI:0000004e .Loc.376
     /tmp/ccRhgh01.s:1417   .text.chMBFetchI:00000054 .Loc.377
     /tmp/ccRhgh01.s:1418   .text.chMBFetchI:00000054 .Loc.378
     /tmp/ccRhgh01.s:1425   .text.chMBFetchI:0000005e .Loc.379
     /tmp/ccRhgh01.s:1430   .text.chMBFetchI:00000064 .Loc.380
     /tmp/ccRhgh01.s:1434   .text.chMBFetchI:0000006a L0
     /tmp/ccRhgh01.s:69     .text.chMBObjectInit:00000028 L0
     /tmp/ccRhgh01.s:182    .text.chMBReset:00000040 L0
     /tmp/ccRhgh01.s:252    .text.chMBResetI:00000036 L0
     /tmp/ccRhgh01.s:465    .text.chMBPostTimeoutS:000000aa L0
     /tmp/ccRhgh01.s:519    .text.chMBPostTimeout:0000000a L0
     /tmp/ccRhgh01.s:652    .text.chMBPostI:00000068 L0
     /tmp/ccRhgh01.s:863    .text.chMBPostAheadTimeoutS:000000a8 L0
     /tmp/ccRhgh01.s:917    .text.chMBPostAheadTimeout:0000000a L0
     /tmp/ccRhgh01.s:1049   .text.chMBPostAheadI:00000066 L0
     /tmp/ccRhgh01.s:1262   .text.chMBFetchTimeoutS:000000ca L0
     /tmp/ccRhgh01.s:1316   .text.chMBFetchTimeout:0000000a L0
     /tmp/ccRhgh01.s:1437   .text.chMBFetchI:0000006a L0
                     .debug_frame:00000000 L0
     /tmp/ccRhgh01.s:382    .text.chMBPostTimeoutS:0000004e .L9
     /tmp/ccRhgh01.s:417    .text.chMBPostTimeoutS:00000070 .L13
     /tmp/ccRhgh01.s:393    .text.chMBPostTimeoutS:00000058 .L5
     /tmp/ccRhgh01.s:321    .text.chMBPostTimeoutS:00000024 .L14
     /tmp/ccRhgh01.s:439    .text.chMBPostTimeoutS:0000008a .L8
     /tmp/ccRhgh01.s:644    .text.chMBPostI:00000062 .L19
     /tmp/ccRhgh01.s:637    .text.chMBPostI:0000005c .L20
     /tmp/ccRhgh01.s:614    .text.chMBPostI:00000040 .L18
     /tmp/ccRhgh01.s:781    .text.chMBPostAheadTimeoutS:0000004e .L25
     /tmp/ccRhgh01.s:816    .text.chMBPostAheadTimeoutS:00000070 .L30
     /tmp/ccRhgh01.s:792    .text.chMBPostAheadTimeoutS:00000058 .L21
     /tmp/ccRhgh01.s:721    .text.chMBPostAheadTimeoutS:00000024 .L31
     /tmp/ccRhgh01.s:830    .text.chMBPostAheadTimeoutS:00000080 .L24
     /tmp/ccRhgh01.s:1041   .text.chMBPostAheadI:00000060 .L36
     /tmp/ccRhgh01.s:1034   .text.chMBPostAheadI:0000005a .L37
     /tmp/ccRhgh01.s:1003   .text.chMBPostAheadI:00000034 .L35
     /tmp/ccRhgh01.s:1148   .text.chMBFetchTimeoutS:0000003e .L43
     /tmp/ccRhgh01.s:1186   .text.chMBFetchTimeoutS:00000066 .L47
     /tmp/ccRhgh01.s:1162   .text.chMBFetchTimeoutS:0000004e .L39
     /tmp/ccRhgh01.s:1118   .text.chMBFetchTimeoutS:00000024 .L48
     /tmp/ccRhgh01.s:1229   .text.chMBFetchTimeoutS:000000a0 .L42
     /tmp/ccRhgh01.s:1429   .text.chMBFetchI:00000064 .L53
     /tmp/ccRhgh01.s:1424   .text.chMBFetchI:0000005e .L54
     /tmp/ccRhgh01.s:1416   .text.chMBFetchI:00000054 .L55
     /tmp/ccRhgh01.s:1388   .text.chMBFetchI:00000034 .L52
     /tmp/ccRhgh01.s:1409   .text.chMBFetchI:0000004e .L50
     /tmp/ccRhgh01.s:3234   .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/ccRhgh01.s:6073   .debug_ranges:00000000 .Ldebug_ranges0
     /tmp/ccRhgh01.s:6125   .debug_line:00000000 .Ldebug_line0
     /tmp/ccRhgh01.s:1321   .text.chMBFetchI:00000000 .LFB109
     /tmp/ccRhgh01.s:1435   .text.chMBFetchI:0000006a .LFE109
     /tmp/ccRhgh01.s:4199   .debug_loc:00000000 .LLST54
     /tmp/ccRhgh01.s:4229   .debug_loc:00000037 .LLST55
     /tmp/ccRhgh01.s:4220   .debug_loc:0000002f .LVUS55
     /tmp/ccRhgh01.s:4281   .debug_loc:0000008b .LLST56
     /tmp/ccRhgh01.s:4272   .debug_loc:00000083 .LVUS56
     /tmp/ccRhgh01.s:1353   .text.chMBFetchI:0000000e .LBI114
     /tmp/ccRhgh01.s:1352   .text.chMBFetchI:0000000e .LBB114
     /tmp/ccRhgh01.s:1360   .text.chMBFetchI:0000000e .LBE114
     /tmp/ccRhgh01.s:4327   .debug_loc:000000d9 .LLST57
     /tmp/ccRhgh01.s:4324   .debug_loc:000000d7 .LVUS57
     /tmp/ccRhgh01.s:1404   .text.chMBFetchI:0000004a .LVL79
     /tmp/ccRhgh01.s:1267   .text.chMBFetchTimeout:00000000 .LFB107
     /tmp/ccRhgh01.s:1314   .text.chMBFetchTimeout:0000000a .LFE107
     /tmp/ccRhgh01.s:4344   .debug_loc:000000f5 .LLST50
     /tmp/ccRhgh01.s:4339   .debug_loc:000000f1 .LVUS50
     /tmp/ccRhgh01.s:4374   .debug_loc:00000125 .LLST51
     /tmp/ccRhgh01.s:4369   .debug_loc:00000121 .LVUS51
     /tmp/ccRhgh01.s:4404   .debug_loc:00000155 .LLST52
     /tmp/ccRhgh01.s:4399   .debug_loc:00000151 .LVUS52
     /tmp/ccRhgh01.s:4432   .debug_loc:00000183 .LLST53
     /tmp/ccRhgh01.s:4429   .debug_loc:00000181 .LVUS53
     /tmp/ccRhgh01.s:1277   .text.chMBFetchTimeout:00000000 .LBI110
     /tmp/ccRhgh01.s:1276   .text.chMBFetchTimeout:00000000 .LBB110
     /tmp/ccRhgh01.s:1287   .text.chMBFetchTimeout:00000002 .LBE110
     /tmp/ccRhgh01.s:1297   .text.chMBFetchTimeout:00000006 .LBI112
     /tmp/ccRhgh01.s:1296   .text.chMBFetchTimeout:00000006 .LBB112
     /tmp/ccRhgh01.s:1307   .text.chMBFetchTimeout:00000008 .LBE112
     /tmp/ccRhgh01.s:1293   .text.chMBFetchTimeout:00000006 .LVL74
     /tmp/ccRhgh01.s:922    .text.chMBPostAheadI:00000000 .LFB106
     /tmp/ccRhgh01.s:1047   .text.chMBPostAheadI:00000066 .LFE106
     /tmp/ccRhgh01.s:4453   .debug_loc:000001a3 .LLST36
     /tmp/ccRhgh01.s:4444   .debug_loc:0000019b .LVUS36
     /tmp/ccRhgh01.s:4503   .debug_loc:000001f5 .LLST37
     /tmp/ccRhgh01.s:4496   .debug_loc:000001ef .LVUS37
     /tmp/ccRhgh01.s:945    .text.chMBPostAheadI:00000008 .LBI93
     /tmp/ccRhgh01.s:944    .text.chMBPostAheadI:00000008 .LBB93
     /tmp/ccRhgh01.s:983    .text.chMBPostAheadI:0000001a .LBE93
     /tmp/ccRhgh01.s:4540   .debug_loc:00000233 .LLST38
     /tmp/ccRhgh01.s:4537   .debug_loc:00000231 .LVUS38
     /tmp/ccRhgh01.s:950    .text.chMBPostAheadI:00000008 .LBI94
     /tmp/ccRhgh01.s:4555   .debug_loc:0000024d .LLST39
     /tmp/ccRhgh01.s:4552   .debug_loc:0000024b .LVUS39
     /tmp/ccRhgh01.s:965    .text.chMBPostAheadI:00000010 .LBI97
     /tmp/ccRhgh01.s:964    .text.chMBPostAheadI:00000010 .LBB97
     /tmp/ccRhgh01.s:972    .text.chMBPostAheadI:00000010 .LBE97
     /tmp/ccRhgh01.s:4570   .debug_loc:00000267 .LLST40
     /tmp/ccRhgh01.s:4567   .debug_loc:00000265 .LVUS40
     /tmp/ccRhgh01.s:1027   .text.chMBPostAheadI:00000054 .LVL58
     /tmp/ccRhgh01.s:657    .text.chMBPostAheadTimeoutS:00000000 .LFB105
     /tmp/ccRhgh01.s:861    .text.chMBPostAheadTimeoutS:000000a8 .LFE105
     /tmp/ccRhgh01.s:4582   .debug_loc:0000027f .LLST24
     /tmp/ccRhgh01.s:4662   .debug_loc:00000320 .LLST25
     /tmp/ccRhgh01.s:4651   .debug_loc:00000316 .LVUS25
     /tmp/ccRhgh01.s:4720   .debug_loc:00000381 .LLST26
     /tmp/ccRhgh01.s:4711   .debug_loc:00000379 .LVUS26
     /tmp/ccRhgh01.s:4772   .debug_loc:000003d5 .LLST27
     /tmp/ccRhgh01.s:4763   .debug_loc:000003cd .LVUS27
     /tmp/ccRhgh01.s:4818   .debug_loc:00000423 .LLST28
     /tmp/ccRhgh01.s:4815   .debug_loc:00000421 .LVUS28
     /tmp/ccRhgh01.s:724    .text.chMBPostAheadTimeoutS:00000024 .LBI82
     /tmp/ccRhgh01.s:723    .text.chMBPostAheadTimeoutS:00000024 .LBB82
     /tmp/ccRhgh01.s:762    .text.chMBPostAheadTimeoutS:00000036 .LBE82
     /tmp/ccRhgh01.s:4833   .debug_loc:0000043d .LLST29
     /tmp/ccRhgh01.s:4830   .debug_loc:0000043b .LVUS29
     /tmp/ccRhgh01.s:729    .text.chMBPostAheadTimeoutS:00000024 .LBI83
     /tmp/ccRhgh01.s:4848   .debug_loc:00000457 .LLST30
     /tmp/ccRhgh01.s:4845   .debug_loc:00000455 .LVUS30
     /tmp/ccRhgh01.s:744    .text.chMBPostAheadTimeoutS:0000002c .LBI86
     /tmp/ccRhgh01.s:743    .text.chMBPostAheadTimeoutS:0000002c .LBB86
     /tmp/ccRhgh01.s:751    .text.chMBPostAheadTimeoutS:0000002c .LBE86
     /tmp/ccRhgh01.s:4863   .debug_loc:00000471 .LLST31
     /tmp/ccRhgh01.s:4860   .debug_loc:0000046f .LVUS31
     /tmp/ccRhgh01.s:774    .text.chMBPostAheadTimeoutS:00000048 .LVL41
     /tmp/ccRhgh01.s:851    .text.chMBPostAheadTimeoutS:0000009e .LVL49
     /tmp/ccRhgh01.s:854    .text.chMBPostAheadTimeoutS:000000a2 .LVL50
     /tmp/ccRhgh01.s:868    .text.chMBPostAheadTimeout:00000000 .LFB104
     /tmp/ccRhgh01.s:915    .text.chMBPostAheadTimeout:0000000a .LFE104
     /tmp/ccRhgh01.s:4880   .debug_loc:0000048d .LLST32
     /tmp/ccRhgh01.s:4875   .debug_loc:00000489 .LVUS32
     /tmp/ccRhgh01.s:4910   .debug_loc:000004bd .LLST33
     /tmp/ccRhgh01.s:4905   .debug_loc:000004b9 .LVUS33
     /tmp/ccRhgh01.s:4940   .debug_loc:000004ed .LLST34
     /tmp/ccRhgh01.s:4935   .debug_loc:000004e9 .LVUS34
     /tmp/ccRhgh01.s:4968   .debug_loc:0000051b .LLST35
     /tmp/ccRhgh01.s:4965   .debug_loc:00000519 .LVUS35
     /tmp/ccRhgh01.s:878    .text.chMBPostAheadTimeout:00000000 .LBI89
     /tmp/ccRhgh01.s:877    .text.chMBPostAheadTimeout:00000000 .LBB89
     /tmp/ccRhgh01.s:888    .text.chMBPostAheadTimeout:00000002 .LBE89
     /tmp/ccRhgh01.s:898    .text.chMBPostAheadTimeout:00000006 .LBI91
     /tmp/ccRhgh01.s:897    .text.chMBPostAheadTimeout:00000006 .LBB91
     /tmp/ccRhgh01.s:908    .text.chMBPostAheadTimeout:00000008 .LBE91
     /tmp/ccRhgh01.s:894    .text.chMBPostAheadTimeout:00000006 .LVL52
     /tmp/ccRhgh01.s:524    .text.chMBPostI:00000000 .LFB103
     /tmp/ccRhgh01.s:650    .text.chMBPostI:00000068 .LFE103
     /tmp/ccRhgh01.s:4989   .debug_loc:0000053b .LLST19
     /tmp/ccRhgh01.s:4980   .debug_loc:00000533 .LVUS19
     /tmp/ccRhgh01.s:5039   .debug_loc:0000058d .LLST20
     /tmp/ccRhgh01.s:5032   .debug_loc:00000587 .LVUS20
     /tmp/ccRhgh01.s:547    .text.chMBPostI:00000008 .LBI75
     /tmp/ccRhgh01.s:546    .text.chMBPostI:00000008 .LBB75
     /tmp/ccRhgh01.s:585    .text.chMBPostI:0000001a .LBE75
     /tmp/ccRhgh01.s:5076   .debug_loc:000005cb .LLST21
     /tmp/ccRhgh01.s:5073   .debug_loc:000005c9 .LVUS21
     /tmp/ccRhgh01.s:552    .text.chMBPostI:00000008 .LBI76
     /tmp/ccRhgh01.s:5091   .debug_loc:000005e5 .LLST22
     /tmp/ccRhgh01.s:5088   .debug_loc:000005e3 .LVUS22
     /tmp/ccRhgh01.s:567    .text.chMBPostI:00000010 .LBI79
     /tmp/ccRhgh01.s:566    .text.chMBPostI:00000010 .LBB79
     /tmp/ccRhgh01.s:574    .text.chMBPostI:00000010 .LBE79
     /tmp/ccRhgh01.s:5106   .debug_loc:000005ff .LLST23
     /tmp/ccRhgh01.s:5103   .debug_loc:000005fd .LVUS23
     /tmp/ccRhgh01.s:630    .text.chMBPostI:00000056 .LVL35
     /tmp/ccRhgh01.s:257    .text.chMBPostTimeoutS:00000000 .LFB102
     /tmp/ccRhgh01.s:463    .text.chMBPostTimeoutS:000000aa .LFE102
     /tmp/ccRhgh01.s:5118   .debug_loc:00000617 .LLST7
     /tmp/ccRhgh01.s:5198   .debug_loc:000006b8 .LLST8
     /tmp/ccRhgh01.s:5187   .debug_loc:000006ae .LVUS8
     /tmp/ccRhgh01.s:5256   .debug_loc:00000719 .LLST9
     /tmp/ccRhgh01.s:5247   .debug_loc:00000711 .LVUS9
     /tmp/ccRhgh01.s:5308   .debug_loc:0000076d .LLST10
     /tmp/ccRhgh01.s:5299   .debug_loc:00000765 .LVUS10
     /tmp/ccRhgh01.s:5354   .debug_loc:000007bb .LLST11
     /tmp/ccRhgh01.s:5351   .debug_loc:000007b9 .LVUS11
     /tmp/ccRhgh01.s:324    .text.chMBPostTimeoutS:00000024 .LBI64
     /tmp/ccRhgh01.s:323    .text.chMBPostTimeoutS:00000024 .LBB64
     /tmp/ccRhgh01.s:363    .text.chMBPostTimeoutS:00000036 .LBE64
     /tmp/ccRhgh01.s:5369   .debug_loc:000007d5 .LLST12
     /tmp/ccRhgh01.s:5366   .debug_loc:000007d3 .LVUS12
     /tmp/ccRhgh01.s:330    .text.chMBPostTimeoutS:00000024 .LBI65
     /tmp/ccRhgh01.s:5384   .debug_loc:000007ef .LLST13
     /tmp/ccRhgh01.s:5381   .debug_loc:000007ed .LVUS13
     /tmp/ccRhgh01.s:345    .text.chMBPostTimeoutS:0000002c .LBI68
     /tmp/ccRhgh01.s:344    .text.chMBPostTimeoutS:0000002c .LBB68
     /tmp/ccRhgh01.s:352    .text.chMBPostTimeoutS:0000002c .LBE68
     /tmp/ccRhgh01.s:5399   .debug_loc:00000809 .LLST14
     /tmp/ccRhgh01.s:5396   .debug_loc:00000807 .LVUS14
     /tmp/ccRhgh01.s:375    .text.chMBPostTimeoutS:00000048 .LVL18
     /tmp/ccRhgh01.s:453    .text.chMBPostTimeoutS:000000a0 .LVL26
     /tmp/ccRhgh01.s:456    .text.chMBPostTimeoutS:000000a4 .LVL27
     /tmp/ccRhgh01.s:470    .text.chMBPostTimeout:00000000 .LFB101
     /tmp/ccRhgh01.s:517    .text.chMBPostTimeout:0000000a .LFE101
     /tmp/ccRhgh01.s:5416   .debug_loc:00000825 .LLST15
     /tmp/ccRhgh01.s:5411   .debug_loc:00000821 .LVUS15
     /tmp/ccRhgh01.s:5446   .debug_loc:00000855 .LLST16
     /tmp/ccRhgh01.s:5441   .debug_loc:00000851 .LVUS16
     /tmp/ccRhgh01.s:5476   .debug_loc:00000885 .LLST17
     /tmp/ccRhgh01.s:5471   .debug_loc:00000881 .LVUS17
     /tmp/ccRhgh01.s:5504   .debug_loc:000008b3 .LLST18
     /tmp/ccRhgh01.s:5501   .debug_loc:000008b1 .LVUS18
     /tmp/ccRhgh01.s:480    .text.chMBPostTimeout:00000000 .LBI71
     /tmp/ccRhgh01.s:479    .text.chMBPostTimeout:00000000 .LBB71
     /tmp/ccRhgh01.s:490    .text.chMBPostTimeout:00000002 .LBE71
     /tmp/ccRhgh01.s:500    .text.chMBPostTimeout:00000006 .LBI73
     /tmp/ccRhgh01.s:499    .text.chMBPostTimeout:00000006 .LBB73
     /tmp/ccRhgh01.s:510    .text.chMBPostTimeout:00000008 .LBE73
     /tmp/ccRhgh01.s:496    .text.chMBPostTimeout:00000006 .LVL29
     /tmp/ccRhgh01.s:74     .text.chMBReset:00000000 .LFB99
     /tmp/ccRhgh01.s:180    .text.chMBReset:00000040 .LFE99
     /tmp/ccRhgh01.s:5516   .debug_loc:000008cb .LLST2
     /tmp/ccRhgh01.s:5544   .debug_loc:00000900 .LLST3
     /tmp/ccRhgh01.s:5537   .debug_loc:000008fa .LVUS3
     /tmp/ccRhgh01.s:93     .text.chMBReset:00000006 .LBI58
     /tmp/ccRhgh01.s:92     .text.chMBReset:00000006 .LBB58
     /tmp/ccRhgh01.s:104    .text.chMBReset:00000008 .LBE58
     /tmp/ccRhgh01.s:110    .text.chMBReset:00000008 .LBI60
     /tmp/ccRhgh01.s:109    .text.chMBReset:00000008 .LBB60
     /tmp/ccRhgh01.s:153    .text.chMBReset:00000034 .LBE60
     /tmp/ccRhgh01.s:5583   .debug_loc:00000940 .LLST4
     /tmp/ccRhgh01.s:5578   .debug_loc:0000093c .LVUS4
     /tmp/ccRhgh01.s:143    .text.chMBReset:00000028 .LVL5
     /tmp/ccRhgh01.s:150    .text.chMBReset:00000034 .LVL6
     /tmp/ccRhgh01.s:160    .text.chMBReset:00000038 .LBI62
     /tmp/ccRhgh01.s:159    .text.chMBReset:00000038 .LBB62
     /tmp/ccRhgh01.s:170    .text.chMBReset:0000003a .LBE62
     /tmp/ccRhgh01.s:156    .text.chMBReset:00000038 .LVL7
     /tmp/ccRhgh01.s:16     .text.chMBObjectInit:00000000 .LFB98
     /tmp/ccRhgh01.s:67     .text.chMBObjectInit:00000028 .LFE98
     /tmp/ccRhgh01.s:5609   .debug_loc:0000096c .LLST0
     /tmp/ccRhgh01.s:5604   .debug_loc:00000968 .LVUS0
     /tmp/ccRhgh01.s:5635   .debug_loc:00000998 .LLST1
     /tmp/ccRhgh01.s:5630   .debug_loc:00000994 .LVUS1
     /tmp/ccRhgh01.s:187    .text.chMBResetI:00000000 .LFB100
     /tmp/ccRhgh01.s:250    .text.chMBResetI:00000036 .LFE100
     /tmp/ccRhgh01.s:5660   .debug_loc:000009c4 .LLST5
     /tmp/ccRhgh01.s:5690   .debug_loc:000009fb .LLST6
     /tmp/ccRhgh01.s:5681   .debug_loc:000009f3 .LVUS6
     /tmp/ccRhgh01.s:234    .text.chMBResetI:00000026 .LVL11
     /tmp/ccRhgh01.s:247    .text.chMBResetI:00000036 .LVL13
     /tmp/ccRhgh01.s:1054   .text.chMBFetchTimeoutS:00000000 .LFB108
     /tmp/ccRhgh01.s:1260   .text.chMBFetchTimeoutS:000000ca .LFE108
     /tmp/ccRhgh01.s:5730   .debug_loc:00000a44 .LLST41
     /tmp/ccRhgh01.s:5810   .debug_loc:00000ae5 .LLST42
     /tmp/ccRhgh01.s:5799   .debug_loc:00000adb .LVUS42
     /tmp/ccRhgh01.s:5868   .debug_loc:00000b46 .LLST43
     /tmp/ccRhgh01.s:5859   .debug_loc:00000b3e .LVUS43
     /tmp/ccRhgh01.s:5920   .debug_loc:00000b9a .LLST44
     /tmp/ccRhgh01.s:5911   .debug_loc:00000b92 .LVUS44
     /tmp/ccRhgh01.s:5966   .debug_loc:00000be8 .LLST45
     /tmp/ccRhgh01.s:5963   .debug_loc:00000be6 .LVUS45
     /tmp/ccRhgh01.s:1121   .text.chMBFetchTimeoutS:00000024 .LBI106
     /tmp/ccRhgh01.s:1120   .text.chMBFetchTimeoutS:00000024 .LBB106
     /tmp/ccRhgh01.s:1128   .text.chMBFetchTimeoutS:00000024 .LBE106
     /tmp/ccRhgh01.s:5981   .debug_loc:00000c02 .LLST46
     /tmp/ccRhgh01.s:5978   .debug_loc:00000c00 .LVUS46
     /tmp/ccRhgh01.s:1188   .text.chMBFetchTimeoutS:00000066 .LBI108
     /tmp/ccRhgh01.s:1187   .text.chMBFetchTimeoutS:00000066 .LBB108
     /tmp/ccRhgh01.s:1258   .text.chMBFetchTimeoutS:000000ca .LBE108
     /tmp/ccRhgh01.s:5996   .debug_loc:00000c1c .LLST47
     /tmp/ccRhgh01.s:5993   .debug_loc:00000c1a .LVUS47
     /tmp/ccRhgh01.s:6011   .debug_loc:00000c36 .LLST48
     /tmp/ccRhgh01.s:6008   .debug_loc:00000c34 .LVUS48
     /tmp/ccRhgh01.s:6026   .debug_loc:00000c50 .LLST49
     /tmp/ccRhgh01.s:6023   .debug_loc:00000c4e .LVUS49
     /tmp/ccRhgh01.s:1248   .text.chMBFetchTimeoutS:000000c0 .LVL71
     /tmp/ccRhgh01.s:1251   .text.chMBFetchTimeoutS:000000c4 .LVL72
     /tmp/ccRhgh01.s:1141   .text.chMBFetchTimeoutS:00000038 .LVL63
     /tmp/ccRhgh01.s:1326   .text.chMBFetchI:00000002 .LCFI34
     /tmp/ccRhgh01.s:1330   .text.chMBFetchI:00000004 .LCFI35
     /tmp/ccRhgh01.s:1320   .text.chMBFetchI:00000000 .LVL75
     /tmp/ccRhgh01.s:1346   .text.chMBFetchI:0000000a .LVL76
     /tmp/ccRhgh01.s:1415   .text.chMBFetchI:00000054 .LVL80
     /tmp/ccRhgh01.s:1399   .text.chMBFetchI:00000042 .LVL78
     /tmp/ccRhgh01.s:1351   .text.chMBFetchI:0000000e .LVL77
     /tmp/ccRhgh01.s:1266   .text.chMBFetchTimeout:00000000 .LVL73
     /tmp/ccRhgh01.s:921    .text.chMBPostAheadI:00000000 .LVL53
     /tmp/ccRhgh01.s:938    .text.chMBPostAheadI:00000004 .LVL54
     /tmp/ccRhgh01.s:1033   .text.chMBPostAheadI:0000005a .LVL59
     /tmp/ccRhgh01.s:1022   .text.chMBPostAheadI:0000004c .LVL57
     /tmp/ccRhgh01.s:943    .text.chMBPostAheadI:00000008 .LVL55
     /tmp/ccRhgh01.s:960    .text.chMBPostAheadI:00000010 .LVL56
     /tmp/ccRhgh01.s:662    .text.chMBPostAheadTimeoutS:00000002 .LCFI14
     /tmp/ccRhgh01.s:666    .text.chMBPostAheadTimeoutS:00000004 .LCFI15
     /tmp/ccRhgh01.s:670    .text.chMBPostAheadTimeoutS:00000006 .LCFI16
     /tmp/ccRhgh01.s:674    .text.chMBPostAheadTimeoutS:00000008 .LCFI17
     /tmp/ccRhgh01.s:678    .text.chMBPostAheadTimeoutS:0000000a .LCFI18
     /tmp/ccRhgh01.s:682    .text.chMBPostAheadTimeoutS:0000000c .LCFI19
     /tmp/ccRhgh01.s:686    .text.chMBPostAheadTimeoutS:0000000e .LCFI20
     /tmp/ccRhgh01.s:690    .text.chMBPostAheadTimeoutS:00000010 .LCFI21
     /tmp/ccRhgh01.s:694    .text.chMBPostAheadTimeoutS:00000012 .LCFI22
     /tmp/ccRhgh01.s:698    .text.chMBPostAheadTimeoutS:00000014 .LCFI23
     /tmp/ccRhgh01.s:656    .text.chMBPostAheadTimeoutS:00000000 .LVL37
     /tmp/ccRhgh01.s:717    .text.chMBPostAheadTimeoutS:00000022 .LVL38
     /tmp/ccRhgh01.s:798    .text.chMBPostAheadTimeoutS:0000005e .LVL44
     /tmp/ccRhgh01.s:804    .text.chMBPostAheadTimeoutS:00000066 .LVL45
     /tmp/ccRhgh01.s:815    .text.chMBPostAheadTimeoutS:00000070 .LVL48
     /tmp/ccRhgh01.s:720    .text.chMBPostAheadTimeoutS:00000024 .LVL39
     /tmp/ccRhgh01.s:812    .text.chMBPostAheadTimeoutS:0000006e .LVL47
     /tmp/ccRhgh01.s:808    .text.chMBPostAheadTimeoutS:0000006a .LVL46
     /tmp/ccRhgh01.s:776    .text.chMBPostAheadTimeoutS:0000004a .LVL42
     /tmp/ccRhgh01.s:780    .text.chMBPostAheadTimeoutS:0000004e .LVL43
     /tmp/ccRhgh01.s:739    .text.chMBPostAheadTimeoutS:0000002c .LVL40
     /tmp/ccRhgh01.s:867    .text.chMBPostAheadTimeout:00000000 .LVL51
     /tmp/ccRhgh01.s:523    .text.chMBPostI:00000000 .LVL30
     /tmp/ccRhgh01.s:540    .text.chMBPostI:00000004 .LVL31
     /tmp/ccRhgh01.s:636    .text.chMBPostI:0000005c .LVL36
     /tmp/ccRhgh01.s:625    .text.chMBPostI:0000004e .LVL34
     /tmp/ccRhgh01.s:545    .text.chMBPostI:00000008 .LVL32
     /tmp/ccRhgh01.s:562    .text.chMBPostI:00000010 .LVL33
     /tmp/ccRhgh01.s:262    .text.chMBPostTimeoutS:00000002 .LCFI4
     /tmp/ccRhgh01.s:266    .text.chMBPostTimeoutS:00000004 .LCFI5
     /tmp/ccRhgh01.s:270    .text.chMBPostTimeoutS:00000006 .LCFI6
     /tmp/ccRhgh01.s:274    .text.chMBPostTimeoutS:00000008 .LCFI7
     /tmp/ccRhgh01.s:278    .text.chMBPostTimeoutS:0000000a .LCFI8
     /tmp/ccRhgh01.s:282    .text.chMBPostTimeoutS:0000000c .LCFI9
     /tmp/ccRhgh01.s:286    .text.chMBPostTimeoutS:0000000e .LCFI10
     /tmp/ccRhgh01.s:290    .text.chMBPostTimeoutS:00000010 .LCFI11
     /tmp/ccRhgh01.s:294    .text.chMBPostTimeoutS:00000012 .LCFI12
     /tmp/ccRhgh01.s:298    .text.chMBPostTimeoutS:00000014 .LCFI13
     /tmp/ccRhgh01.s:256    .text.chMBPostTimeoutS:00000000 .LVL14
     /tmp/ccRhgh01.s:317    .text.chMBPostTimeoutS:00000022 .LVL15
     /tmp/ccRhgh01.s:399    .text.chMBPostTimeoutS:0000005e .LVL21
     /tmp/ccRhgh01.s:405    .text.chMBPostTimeoutS:00000066 .LVL22
     /tmp/ccRhgh01.s:416    .text.chMBPostTimeoutS:00000070 .LVL25
     /tmp/ccRhgh01.s:320    .text.chMBPostTimeoutS:00000024 .LVL16
     /tmp/ccRhgh01.s:413    .text.chMBPostTimeoutS:0000006e .LVL24
     /tmp/ccRhgh01.s:409    .text.chMBPostTimeoutS:0000006a .LVL23
     /tmp/ccRhgh01.s:377    .text.chMBPostTimeoutS:0000004a .LVL19
     /tmp/ccRhgh01.s:381    .text.chMBPostTimeoutS:0000004e .LVL20
     /tmp/ccRhgh01.s:340    .text.chMBPostTimeoutS:0000002c .LVL17
     /tmp/ccRhgh01.s:469    .text.chMBPostTimeout:00000000 .LVL28
     /tmp/ccRhgh01.s:79     .text.chMBReset:00000002 .LCFI0
     /tmp/ccRhgh01.s:83     .text.chMBReset:00000004 .LCFI1
     /tmp/ccRhgh01.s:73     .text.chMBReset:00000000 .LVL2
     /tmp/ccRhgh01.s:121    .text.chMBReset:0000000c .LVL4
     /tmp/ccRhgh01.s:176    .text.chMBReset:0000003e .LVL8
     /tmp/ccRhgh01.s:108    .text.chMBReset:00000008 .LVL3
     /tmp/ccRhgh01.s:15     .text.chMBObjectInit:00000000 .LVL0
     /tmp/ccRhgh01.s:45     .text.chMBObjectInit:00000014 .LVL1
     /tmp/ccRhgh01.s:192    .text.chMBResetI:00000002 .LCFI2
     /tmp/ccRhgh01.s:196    .text.chMBResetI:00000004 .LCFI3
     /tmp/ccRhgh01.s:186    .text.chMBResetI:00000000 .LVL9
     /tmp/ccRhgh01.s:212    .text.chMBResetI:0000000a .LVL10
     /tmp/ccRhgh01.s:244    .text.chMBResetI:00000032 .LVL12
     /tmp/ccRhgh01.s:1059   .text.chMBFetchTimeoutS:00000002 .LCFI24
     /tmp/ccRhgh01.s:1063   .text.chMBFetchTimeoutS:00000004 .LCFI25
     /tmp/ccRhgh01.s:1067   .text.chMBFetchTimeoutS:00000006 .LCFI26
     /tmp/ccRhgh01.s:1071   .text.chMBFetchTimeoutS:00000008 .LCFI27
     /tmp/ccRhgh01.s:1075   .text.chMBFetchTimeoutS:0000000a .LCFI28
     /tmp/ccRhgh01.s:1079   .text.chMBFetchTimeoutS:0000000c .LCFI29
     /tmp/ccRhgh01.s:1083   .text.chMBFetchTimeoutS:0000000e .LCFI30
     /tmp/ccRhgh01.s:1087   .text.chMBFetchTimeoutS:00000010 .LCFI31
     /tmp/ccRhgh01.s:1091   .text.chMBFetchTimeoutS:00000012 .LCFI32
     /tmp/ccRhgh01.s:1095   .text.chMBFetchTimeoutS:00000014 .LCFI33
     /tmp/ccRhgh01.s:1053   .text.chMBFetchTimeoutS:00000000 .LVL60
     /tmp/ccRhgh01.s:1114   .text.chMBFetchTimeoutS:00000022 .LVL61
     /tmp/ccRhgh01.s:1170   .text.chMBFetchTimeoutS:00000058 .LVL66
     /tmp/ccRhgh01.s:1174   .text.chMBFetchTimeoutS:0000005c .LVL67
     /tmp/ccRhgh01.s:1185   .text.chMBFetchTimeoutS:00000066 .LVL70
     /tmp/ccRhgh01.s:1117   .text.chMBFetchTimeoutS:00000024 .LVL62
     /tmp/ccRhgh01.s:1178   .text.chMBFetchTimeoutS:00000060 .LVL68
     /tmp/ccRhgh01.s:1182   .text.chMBFetchTimeoutS:00000064 .LVL69
     /tmp/ccRhgh01.s:1143   .text.chMBFetchTimeoutS:0000003a .LVL64
     /tmp/ccRhgh01.s:1147   .text.chMBFetchTimeoutS:0000003e .LVL65
     /tmp/ccRhgh01.s:1444   .debug_info:00000000 .Ldebug_info0
     /tmp/ccRhgh01.s:329    .text.chMBPostTimeoutS:00000024 .LBB65
     /tmp/ccRhgh01.s:343    .text.chMBPostTimeoutS:0000002c .LBE65
     /tmp/ccRhgh01.s:353    .text.chMBPostTimeoutS:0000002c .LBB70
     /tmp/ccRhgh01.s:362    .text.chMBPostTimeoutS:00000036 .LBE70
     /tmp/ccRhgh01.s:551    .text.chMBPostI:00000008 .LBB76
     /tmp/ccRhgh01.s:565    .text.chMBPostI:00000010 .LBE76
     /tmp/ccRhgh01.s:575    .text.chMBPostI:00000010 .LBB81
     /tmp/ccRhgh01.s:584    .text.chMBPostI:0000001a .LBE81
     /tmp/ccRhgh01.s:728    .text.chMBPostAheadTimeoutS:00000024 .LBB83
     /tmp/ccRhgh01.s:742    .text.chMBPostAheadTimeoutS:0000002c .LBE83
     /tmp/ccRhgh01.s:752    .text.chMBPostAheadTimeoutS:0000002c .LBB88
     /tmp/ccRhgh01.s:761    .text.chMBPostAheadTimeoutS:00000036 .LBE88
     /tmp/ccRhgh01.s:949    .text.chMBPostAheadI:00000008 .LBB94
     /tmp/ccRhgh01.s:963    .text.chMBPostAheadI:00000010 .LBE94
     /tmp/ccRhgh01.s:973    .text.chMBPostAheadI:00000010 .LBB99
     /tmp/ccRhgh01.s:982    .text.chMBPostAheadI:0000001a .LBE99

UNDEFINED SYMBOLS
chThdDequeueAllI
chSchRescheduleS
chThdEnqueueTimeoutS
chThdDequeueNextI
