   1               		.file	"hal_pwm.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 1 "../../os/hal/src/hal_pwm.c"
  11               		.section	.text.pwmInit,"ax",@progbits
  12               	.global	pwmInit
  14               	pwmInit:
  15               	.LFB146:
   1:../../os/hal/src/hal_pwm.c **** /*
   2:../../os/hal/src/hal_pwm.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../os/hal/src/hal_pwm.c **** 
   4:../../os/hal/src/hal_pwm.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../os/hal/src/hal_pwm.c ****     you may not use this file except in compliance with the License.
   6:../../os/hal/src/hal_pwm.c ****     You may obtain a copy of the License at
   7:../../os/hal/src/hal_pwm.c **** 
   8:../../os/hal/src/hal_pwm.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../os/hal/src/hal_pwm.c **** 
  10:../../os/hal/src/hal_pwm.c ****     Unless required by applicable law or agreed to in writing, software
  11:../../os/hal/src/hal_pwm.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../os/hal/src/hal_pwm.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../os/hal/src/hal_pwm.c ****     See the License for the specific language governing permissions and
  14:../../os/hal/src/hal_pwm.c ****     limitations under the License.
  15:../../os/hal/src/hal_pwm.c **** */
  16:../../os/hal/src/hal_pwm.c **** 
  17:../../os/hal/src/hal_pwm.c **** /**
  18:../../os/hal/src/hal_pwm.c ****  * @file    hal_pwm.c
  19:../../os/hal/src/hal_pwm.c ****  * @brief   PWM Driver code.
  20:../../os/hal/src/hal_pwm.c ****  *
  21:../../os/hal/src/hal_pwm.c ****  * @addtogroup PWM
  22:../../os/hal/src/hal_pwm.c ****  * @{
  23:../../os/hal/src/hal_pwm.c ****  */
  24:../../os/hal/src/hal_pwm.c **** 
  25:../../os/hal/src/hal_pwm.c **** #include "hal.h"
  26:../../os/hal/src/hal_pwm.c **** 
  27:../../os/hal/src/hal_pwm.c **** #if (HAL_USE_PWM == TRUE) || defined(__DOXYGEN__)
  28:../../os/hal/src/hal_pwm.c **** 
  29:../../os/hal/src/hal_pwm.c **** /*===========================================================================*/
  30:../../os/hal/src/hal_pwm.c **** /* Driver local definitions.                                                 */
  31:../../os/hal/src/hal_pwm.c **** /*===========================================================================*/
  32:../../os/hal/src/hal_pwm.c **** 
  33:../../os/hal/src/hal_pwm.c **** /*===========================================================================*/
  34:../../os/hal/src/hal_pwm.c **** /* Driver exported variables.                                                */
  35:../../os/hal/src/hal_pwm.c **** /*===========================================================================*/
  36:../../os/hal/src/hal_pwm.c **** 
  37:../../os/hal/src/hal_pwm.c **** /*===========================================================================*/
  38:../../os/hal/src/hal_pwm.c **** /* Driver local variables and types.                                         */
  39:../../os/hal/src/hal_pwm.c **** /*===========================================================================*/
  40:../../os/hal/src/hal_pwm.c **** 
  41:../../os/hal/src/hal_pwm.c **** /*===========================================================================*/
  42:../../os/hal/src/hal_pwm.c **** /* Driver local functions.                                                   */
  43:../../os/hal/src/hal_pwm.c **** /*===========================================================================*/
  44:../../os/hal/src/hal_pwm.c **** 
  45:../../os/hal/src/hal_pwm.c **** /*===========================================================================*/
  46:../../os/hal/src/hal_pwm.c **** /* Driver exported functions.                                                */
  47:../../os/hal/src/hal_pwm.c **** /*===========================================================================*/
  48:../../os/hal/src/hal_pwm.c **** 
  49:../../os/hal/src/hal_pwm.c **** /**
  50:../../os/hal/src/hal_pwm.c ****  * @brief   PWM Driver initialization.
  51:../../os/hal/src/hal_pwm.c ****  * @note    This function is implicitly invoked by @p halInit(), there is
  52:../../os/hal/src/hal_pwm.c ****  *          no need to explicitly initialize the driver.
  53:../../os/hal/src/hal_pwm.c ****  *
  54:../../os/hal/src/hal_pwm.c ****  * @init
  55:../../os/hal/src/hal_pwm.c ****  */
  56:../../os/hal/src/hal_pwm.c **** void pwmInit(void) {
  16               		.loc 1 56 20 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  57:../../os/hal/src/hal_pwm.c **** 
  58:../../os/hal/src/hal_pwm.c ****   pwm_lld_init();
  22               		.loc 1 58 3 view .LVU1
  23 0000 0C94 0000 		jmp pwm_lld_init
  24               	.LVL0:
  25               		.cfi_endproc
  26               	.LFE146:
  28               		.section	.text.pwmObjectInit,"ax",@progbits
  29               	.global	pwmObjectInit
  31               	pwmObjectInit:
  32               	.LVL1:
  33               	.LFB147:
  59:../../os/hal/src/hal_pwm.c **** }
  60:../../os/hal/src/hal_pwm.c **** 
  61:../../os/hal/src/hal_pwm.c **** /**
  62:../../os/hal/src/hal_pwm.c ****  * @brief   Initializes the standard part of a @p PWMDriver structure.
  63:../../os/hal/src/hal_pwm.c ****  *
  64:../../os/hal/src/hal_pwm.c ****  * @param[out] pwmp     pointer to a @p PWMDriver object
  65:../../os/hal/src/hal_pwm.c ****  *
  66:../../os/hal/src/hal_pwm.c ****  * @init
  67:../../os/hal/src/hal_pwm.c ****  */
  68:../../os/hal/src/hal_pwm.c **** void pwmObjectInit(PWMDriver *pwmp) {
  34               		.loc 1 68 37 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
  40               		.loc 1 68 37 is_stmt 0 view .LVU3
  41 0000 FC01      		movw r30,r24
  69:../../os/hal/src/hal_pwm.c **** 
  70:../../os/hal/src/hal_pwm.c ****   pwmp->state    = PWM_STOP;
  42               		.loc 1 70 3 is_stmt 1 view .LVU4
  43               		.loc 1 70 18 is_stmt 0 view .LVU5
  44 0002 81E0      		ldi r24,lo8(1)
  45               	.LVL2:
  46               		.loc 1 70 18 view .LVU6
  47 0004 8083      		st Z,r24
  71:../../os/hal/src/hal_pwm.c ****   pwmp->config   = NULL;
  48               		.loc 1 71 3 is_stmt 1 view .LVU7
  49               		.loc 1 71 18 is_stmt 0 view .LVU8
  50 0006 1282      		std Z+2,__zero_reg__
  51 0008 1182      		std Z+1,__zero_reg__
  72:../../os/hal/src/hal_pwm.c ****   pwmp->enabled  = 0;
  52               		.loc 1 72 3 is_stmt 1 view .LVU9
  53               		.loc 1 72 18 is_stmt 0 view .LVU10
  54 000a 1582      		std Z+5,__zero_reg__
  73:../../os/hal/src/hal_pwm.c ****   pwmp->channels = 0;
  55               		.loc 1 73 3 is_stmt 1 view .LVU11
  56               		.loc 1 73 18 is_stmt 0 view .LVU12
  57 000c 1682      		std Z+6,__zero_reg__
  58               	/* epilogue start */
  74:../../os/hal/src/hal_pwm.c **** #if defined(PWM_DRIVER_EXT_INIT_HOOK)
  75:../../os/hal/src/hal_pwm.c ****   PWM_DRIVER_EXT_INIT_HOOK(pwmp);
  76:../../os/hal/src/hal_pwm.c **** #endif
  77:../../os/hal/src/hal_pwm.c **** }
  59               		.loc 1 77 1 view .LVU13
  60 000e 0895      		ret
  61               		.cfi_endproc
  62               	.LFE147:
  64               		.section	.text.pwmStart,"ax",@progbits
  65               	.global	pwmStart
  67               	pwmStart:
  68               	.LVL3:
  69               	.LFB148:
  78:../../os/hal/src/hal_pwm.c **** 
  79:../../os/hal/src/hal_pwm.c **** /**
  80:../../os/hal/src/hal_pwm.c ****  * @brief   Configures and activates the PWM peripheral.
  81:../../os/hal/src/hal_pwm.c ****  * @note    Starting a driver that is already in the @p PWM_READY state
  82:../../os/hal/src/hal_pwm.c ****  *          disables all the active channels.
  83:../../os/hal/src/hal_pwm.c ****  *
  84:../../os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
  85:../../os/hal/src/hal_pwm.c ****  * @param[in] config    pointer to a @p PWMConfig object
  86:../../os/hal/src/hal_pwm.c ****  * @return              The operation status.
  87:../../os/hal/src/hal_pwm.c ****  *
  88:../../os/hal/src/hal_pwm.c ****  * @api
  89:../../os/hal/src/hal_pwm.c ****  */
  90:../../os/hal/src/hal_pwm.c **** msg_t pwmStart(PWMDriver *pwmp, const PWMConfig *config) {
  70               		.loc 1 90 58 is_stmt 1 view -0
  71               		.cfi_startproc
  72               		.loc 1 90 58 is_stmt 0 view .LVU15
  73 0000 CF93      		push r28
  74               	.LCFI0:
  75               		.cfi_def_cfa_offset 3
  76               		.cfi_offset 28, -2
  77 0002 DF93      		push r29
  78               	.LCFI1:
  79               		.cfi_def_cfa_offset 4
  80               		.cfi_offset 29, -3
  81               	/* prologue: function */
  82               	/* frame size = 0 */
  83               	/* stack size = 2 */
  84               	.L__stack_usage = 2
  85 0004 EC01      		movw r28,r24
  86 0006 FB01      		movw r30,r22
  91:../../os/hal/src/hal_pwm.c ****   msg_t msg;
  87               		.loc 1 91 3 is_stmt 1 view .LVU16
  92:../../os/hal/src/hal_pwm.c **** 
  93:../../os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (config != NULL));
  88               		.loc 1 93 3 view .LVU17
  89               		.loc 1 93 3 view .LVU18
  90               		.loc 1 93 3 discriminator 7 view .LVU19
  94:../../os/hal/src/hal_pwm.c **** 
  95:../../os/hal/src/hal_pwm.c ****   osalSysLock();
  91               		.loc 1 95 3 view .LVU20
  92               	.LBB78:
  93               	.LBI78:
  94               		.file 2 "../../os/hal/osal/rt-nil/osal.h"
   1:../../os/hal/osal/rt-nil/osal.h **** /*
   2:../../os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../os/hal/osal/rt-nil/osal.h **** 
   4:../../os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:../../os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:../../os/hal/osal/rt-nil/osal.h **** 
   8:../../os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../os/hal/osal/rt-nil/osal.h **** 
  10:../../os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:../../os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:../../os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:../../os/hal/osal/rt-nil/osal.h **** */
  16:../../os/hal/osal/rt-nil/osal.h **** 
  17:../../os/hal/osal/rt-nil/osal.h **** /**
  18:../../os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:../../os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:../../os/hal/osal/rt-nil/osal.h ****  *
  21:../../os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:../../os/hal/osal/rt-nil/osal.h ****  * @{
  23:../../os/hal/osal/rt-nil/osal.h ****  */
  24:../../os/hal/osal/rt-nil/osal.h **** 
  25:../../os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:../../os/hal/osal/rt-nil/osal.h **** 
  28:../../os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:../../os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:../../os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:../../os/hal/osal/rt-nil/osal.h **** 
  32:../../os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:../../os/hal/osal/rt-nil/osal.h **** 
  34:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:../../os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:../../os/hal/osal/rt-nil/osal.h **** 
  38:../../os/hal/osal/rt-nil/osal.h **** /**
  39:../../os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:../../os/hal/osal/rt-nil/osal.h ****  * @{
  41:../../os/hal/osal/rt-nil/osal.h ****  */
  42:../../os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:../../os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:../../os/hal/osal/rt-nil/osal.h **** #endif
  45:../../os/hal/osal/rt-nil/osal.h **** 
  46:../../os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:../../os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:../../os/hal/osal/rt-nil/osal.h **** #endif
  49:../../os/hal/osal/rt-nil/osal.h **** 
  50:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:../../os/hal/osal/rt-nil/osal.h **** /** @} */
  53:../../os/hal/osal/rt-nil/osal.h **** 
  54:../../os/hal/osal/rt-nil/osal.h **** #if 0
  55:../../os/hal/osal/rt-nil/osal.h **** /**
  56:../../os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:../../os/hal/osal/rt-nil/osal.h ****  * @{
  58:../../os/hal/osal/rt-nil/osal.h ****  */
  59:../../os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:../../os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:../../os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:../../os/hal/osal/rt-nil/osal.h **** /** @} */
  63:../../os/hal/osal/rt-nil/osal.h **** #endif
  64:../../os/hal/osal/rt-nil/osal.h **** 
  65:../../os/hal/osal/rt-nil/osal.h **** #if 0
  66:../../os/hal/osal/rt-nil/osal.h **** /**
  67:../../os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:../../os/hal/osal/rt-nil/osal.h ****  * @{
  69:../../os/hal/osal/rt-nil/osal.h ****  */
  70:../../os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:../../os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:../../os/hal/osal/rt-nil/osal.h **** /** @} */
  73:../../os/hal/osal/rt-nil/osal.h **** #endif
  74:../../os/hal/osal/rt-nil/osal.h **** 
  75:../../os/hal/osal/rt-nil/osal.h **** /**
  76:../../os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:../../os/hal/osal/rt-nil/osal.h ****  * @{
  78:../../os/hal/osal/rt-nil/osal.h ****  */
  79:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:../../os/hal/osal/rt-nil/osal.h **** /** @} */
  83:../../os/hal/osal/rt-nil/osal.h **** 
  84:../../os/hal/osal/rt-nil/osal.h **** /**
  85:../../os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:../../os/hal/osal/rt-nil/osal.h ****  * @{
  87:../../os/hal/osal/rt-nil/osal.h ****  */
  88:../../os/hal/osal/rt-nil/osal.h **** /**
  89:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:../../os/hal/osal/rt-nil/osal.h ****  */
  91:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:../../os/hal/osal/rt-nil/osal.h **** 
  93:../../os/hal/osal/rt-nil/osal.h **** /**
  94:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:../../os/hal/osal/rt-nil/osal.h ****  */
  96:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:../../os/hal/osal/rt-nil/osal.h **** 
  98:../../os/hal/osal/rt-nil/osal.h **** /**
  99:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:../../os/hal/osal/rt-nil/osal.h ****  */
 101:../../os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:../../os/hal/osal/rt-nil/osal.h **** #else
 104:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:../../os/hal/osal/rt-nil/osal.h **** #endif
 106:../../os/hal/osal/rt-nil/osal.h **** /** @} */
 107:../../os/hal/osal/rt-nil/osal.h **** 
 108:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:../../os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:../../os/hal/osal/rt-nil/osal.h **** 
 112:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:../../os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:../../os/hal/osal/rt-nil/osal.h **** 
 116:../../os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:../../os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:../../os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:../../os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:../../os/hal/osal/rt-nil/osal.h **** #endif
 121:../../os/hal/osal/rt-nil/osal.h **** 
 122:../../os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32) &&             \
 123:../../os/hal/osal/rt-nil/osal.h ****     (OSAL_ST_RESOLUTION != 64)
 124:../../os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16, 32 or 64"
 125:../../os/hal/osal/rt-nil/osal.h **** #endif
 126:../../os/hal/osal/rt-nil/osal.h **** 
 127:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 128:../../os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 129:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 130:../../os/hal/osal/rt-nil/osal.h **** 
 131:../../os/hal/osal/rt-nil/osal.h **** #if 0
 132:../../os/hal/osal/rt-nil/osal.h **** /**
 133:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 134:../../os/hal/osal/rt-nil/osal.h ****  */
 135:../../os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 136:../../os/hal/osal/rt-nil/osal.h **** #endif
 137:../../os/hal/osal/rt-nil/osal.h **** 
 138:../../os/hal/osal/rt-nil/osal.h **** #if 0
 139:../../os/hal/osal/rt-nil/osal.h **** /**
 140:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 141:../../os/hal/osal/rt-nil/osal.h ****  */
 142:../../os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 143:../../os/hal/osal/rt-nil/osal.h **** #endif
 144:../../os/hal/osal/rt-nil/osal.h **** 
 145:../../os/hal/osal/rt-nil/osal.h **** #if 0
 146:../../os/hal/osal/rt-nil/osal.h **** /**
 147:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 148:../../os/hal/osal/rt-nil/osal.h ****  */
 149:../../os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 150:../../os/hal/osal/rt-nil/osal.h **** #endif
 151:../../os/hal/osal/rt-nil/osal.h **** 
 152:../../os/hal/osal/rt-nil/osal.h **** #if 0
 153:../../os/hal/osal/rt-nil/osal.h **** /**
 154:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 155:../../os/hal/osal/rt-nil/osal.h ****  */
 156:../../os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 157:../../os/hal/osal/rt-nil/osal.h **** #endif
 158:../../os/hal/osal/rt-nil/osal.h **** 
 159:../../os/hal/osal/rt-nil/osal.h **** #if 0
 160:../../os/hal/osal/rt-nil/osal.h **** /**
 161:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of time conversion variable.
 162:../../os/hal/osal/rt-nil/osal.h ****  * @note    This type must have double width than other time types, it is
 163:../../os/hal/osal/rt-nil/osal.h ****  *          only used internally for conversions.
 164:../../os/hal/osal/rt-nil/osal.h ****  */
 165:../../os/hal/osal/rt-nil/osal.h **** typedef uint64_t time_conv_t;
 166:../../os/hal/osal/rt-nil/osal.h **** #endif
 167:../../os/hal/osal/rt-nil/osal.h **** 
 168:../../os/hal/osal/rt-nil/osal.h **** #if 0
 169:../../os/hal/osal/rt-nil/osal.h **** /**
 170:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 171:../../os/hal/osal/rt-nil/osal.h ****  */
 172:../../os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 173:../../os/hal/osal/rt-nil/osal.h **** #endif
 174:../../os/hal/osal/rt-nil/osal.h **** 
 175:../../os/hal/osal/rt-nil/osal.h **** #if 0
 176:../../os/hal/osal/rt-nil/osal.h **** /**
 177:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 178:../../os/hal/osal/rt-nil/osal.h ****  */
 179:../../os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 180:../../os/hal/osal/rt-nil/osal.h **** #endif
 181:../../os/hal/osal/rt-nil/osal.h **** 
 182:../../os/hal/osal/rt-nil/osal.h **** #if 0
 183:../../os/hal/osal/rt-nil/osal.h **** /**
 184:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 185:../../os/hal/osal/rt-nil/osal.h ****  */
 186:../../os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 187:../../os/hal/osal/rt-nil/osal.h **** #endif
 188:../../os/hal/osal/rt-nil/osal.h **** 
 189:../../os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 190:../../os/hal/osal/rt-nil/osal.h **** /**
 191:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 192:../../os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 193:../../os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 194:../../os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 195:../../os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 196:../../os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 197:../../os/hal/osal/rt-nil/osal.h ****  */
 198:../../os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 199:../../os/hal/osal/rt-nil/osal.h **** 
 200:../../os/hal/osal/rt-nil/osal.h **** /**
 201:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 202:../../os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 203:../../os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 204:../../os/hal/osal/rt-nil/osal.h ****  */
 205:../../os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 206:../../os/hal/osal/rt-nil/osal.h **** 
 207:../../os/hal/osal/rt-nil/osal.h **** /**
 208:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 209:../../os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 210:../../os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 211:../../os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 212:../../os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 213:../../os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 214:../../os/hal/osal/rt-nil/osal.h ****  */
 215:../../os/hal/osal/rt-nil/osal.h **** struct event_source {
 216:../../os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 217:../../os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 218:../../os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 219:../../os/hal/osal/rt-nil/osal.h **** };
 220:../../os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 221:../../os/hal/osal/rt-nil/osal.h **** 
 222:../../os/hal/osal/rt-nil/osal.h **** /**
 223:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 224:../../os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 225:../../os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 226:../../os/hal/osal/rt-nil/osal.h ****  */
 227:../../os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 228:../../os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 229:../../os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 230:../../os/hal/osal/rt-nil/osal.h **** #else
 231:../../os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 232:../../os/hal/osal/rt-nil/osal.h **** #endif
 233:../../os/hal/osal/rt-nil/osal.h **** 
 234:../../os/hal/osal/rt-nil/osal.h **** #if 0
 235:../../os/hal/osal/rt-nil/osal.h **** /**
 236:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 237:../../os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 238:../../os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 239:../../os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 240:../../os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 241:../../os/hal/osal/rt-nil/osal.h ****  */
 242:../../os/hal/osal/rt-nil/osal.h **** typedef struct {
 243:../../os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 244:../../os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 245:../../os/hal/osal/rt-nil/osal.h **** #endif
 246:../../os/hal/osal/rt-nil/osal.h **** 
 247:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 248:../../os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 249:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 250:../../os/hal/osal/rt-nil/osal.h **** 
 251:../../os/hal/osal/rt-nil/osal.h **** /**
 252:../../os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 253:../../os/hal/osal/rt-nil/osal.h ****  * @{
 254:../../os/hal/osal/rt-nil/osal.h ****  */
 255:../../os/hal/osal/rt-nil/osal.h **** /**
 256:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 257:../../os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 258:../../os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 259:../../os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 260:../../os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 261:../../os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 262:../../os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 263:../../os/hal/osal/rt-nil/osal.h ****  *
 264:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 265:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 266:../../os/hal/osal/rt-nil/osal.h ****  *
 267:../../os/hal/osal/rt-nil/osal.h ****  * @api
 268:../../os/hal/osal/rt-nil/osal.h ****  */
 269:../../os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 270:../../os/hal/osal/rt-nil/osal.h **** 
 271:../../os/hal/osal/rt-nil/osal.h **** /**
 272:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 273:../../os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 274:../../os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 275:../../os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 276:../../os/hal/osal/rt-nil/osal.h ****  *
 277:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 278:../../os/hal/osal/rt-nil/osal.h ****  *
 279:../../os/hal/osal/rt-nil/osal.h ****  * @api
 280:../../os/hal/osal/rt-nil/osal.h ****  */
 281:../../os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 282:../../os/hal/osal/rt-nil/osal.h **** 
 283:../../os/hal/osal/rt-nil/osal.h **** /**
 284:../../os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 285:../../os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 286:../../os/hal/osal/rt-nil/osal.h ****  */
 287:../../os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 288:../../os/hal/osal/rt-nil/osal.h **** 
 289:../../os/hal/osal/rt-nil/osal.h **** /**
 290:../../os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 291:../../os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 292:../../os/hal/osal/rt-nil/osal.h ****  */
 293:../../os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 294:../../os/hal/osal/rt-nil/osal.h **** /** @} */
 295:../../os/hal/osal/rt-nil/osal.h **** 
 296:../../os/hal/osal/rt-nil/osal.h **** /**
 297:../../os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 298:../../os/hal/osal/rt-nil/osal.h ****  * @{
 299:../../os/hal/osal/rt-nil/osal.h ****  */
 300:../../os/hal/osal/rt-nil/osal.h **** /**
 301:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 302:../../os/hal/osal/rt-nil/osal.h ****  */
 303:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 304:../../os/hal/osal/rt-nil/osal.h **** 
 305:../../os/hal/osal/rt-nil/osal.h **** /**
 306:../../os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 307:../../os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 308:../../os/hal/osal/rt-nil/osal.h ****  */
 309:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 310:../../os/hal/osal/rt-nil/osal.h **** 
 311:../../os/hal/osal/rt-nil/osal.h **** /**
 312:../../os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 313:../../os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 314:../../os/hal/osal/rt-nil/osal.h ****  */
 315:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 316:../../os/hal/osal/rt-nil/osal.h **** 
 317:../../os/hal/osal/rt-nil/osal.h **** /**
 318:../../os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 319:../../os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 320:../../os/hal/osal/rt-nil/osal.h ****  *
 321:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 322:../../os/hal/osal/rt-nil/osal.h ****  */
 323:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 324:../../os/hal/osal/rt-nil/osal.h **** /** @} */
 325:../../os/hal/osal/rt-nil/osal.h **** 
 326:../../os/hal/osal/rt-nil/osal.h **** /**
 327:../../os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 328:../../os/hal/osal/rt-nil/osal.h ****  * @{
 329:../../os/hal/osal/rt-nil/osal.h ****  */
 330:../../os/hal/osal/rt-nil/osal.h **** /**
 331:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to time interval.
 332:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 333:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 334:../../os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 335:../../os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 336:../../os/hal/osal/rt-nil/osal.h ****  *          converted.
 337:../../os/hal/osal/rt-nil/osal.h ****  *
 338:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 339:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 340:../../os/hal/osal/rt-nil/osal.h ****  *
 341:../../os/hal/osal/rt-nil/osal.h ****  * @api
 342:../../os/hal/osal/rt-nil/osal.h ****  */
 343:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 344:../../os/hal/osal/rt-nil/osal.h **** 
 345:../../os/hal/osal/rt-nil/osal.h **** /**
 346:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to time interval.
 347:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 348:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 349:../../os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 350:../../os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 351:../../os/hal/osal/rt-nil/osal.h ****  *          converted.
 352:../../os/hal/osal/rt-nil/osal.h ****  *
 353:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 354:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 355:../../os/hal/osal/rt-nil/osal.h ****  *
 356:../../os/hal/osal/rt-nil/osal.h ****  * @api
 357:../../os/hal/osal/rt-nil/osal.h ****  */
 358:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 359:../../os/hal/osal/rt-nil/osal.h **** 
 360:../../os/hal/osal/rt-nil/osal.h **** /**
 361:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to time interval.
 362:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 363:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 364:../../os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 365:../../os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 366:../../os/hal/osal/rt-nil/osal.h ****  *          converted.
 367:../../os/hal/osal/rt-nil/osal.h ****  *
 368:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 369:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 370:../../os/hal/osal/rt-nil/osal.h ****  *
 371:../../os/hal/osal/rt-nil/osal.h ****  * @api
 372:../../os/hal/osal/rt-nil/osal.h ****  */
 373:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 374:../../os/hal/osal/rt-nil/osal.h **** 
 375:../../os/hal/osal/rt-nil/osal.h **** /**
 376:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to seconds.
 377:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to seconds.
 378:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next second boundary.
 379:../../os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 380:../../os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 381:../../os/hal/osal/rt-nil/osal.h ****  *          converted.
 382:../../os/hal/osal/rt-nil/osal.h ****  *
 383:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 384:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of seconds.
 385:../../os/hal/osal/rt-nil/osal.h ****  *
 386:../../os/hal/osal/rt-nil/osal.h ****  * @api
 387:../../os/hal/osal/rt-nil/osal.h ****  */
 388:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_I2S(interval) TIME_I2S(interval)
 389:../../os/hal/osal/rt-nil/osal.h **** 
 390:../../os/hal/osal/rt-nil/osal.h **** /**
 391:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to milliseconds.
 392:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to milliseconds.
 393:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next millisecond boundary.
 394:../../os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 395:../../os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 396:../../os/hal/osal/rt-nil/osal.h ****  *          converted.
 397:../../os/hal/osal/rt-nil/osal.h ****  *
 398:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 399:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of milliseconds.
 400:../../os/hal/osal/rt-nil/osal.h ****  *
 401:../../os/hal/osal/rt-nil/osal.h ****  * @api
 402:../../os/hal/osal/rt-nil/osal.h ****  */
 403:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_I2MS(interval) TIME_I2MS(interval)
 404:../../os/hal/osal/rt-nil/osal.h **** 
 405:../../os/hal/osal/rt-nil/osal.h **** /**
 406:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to microseconds.
 407:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to microseconds.
 408:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next microsecond boundary.
 409:../../os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 410:../../os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 411:../../os/hal/osal/rt-nil/osal.h ****  *          converted.
 412:../../os/hal/osal/rt-nil/osal.h ****  *
 413:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 414:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of microseconds.
 415:../../os/hal/osal/rt-nil/osal.h ****  *
 416:../../os/hal/osal/rt-nil/osal.h ****  * @api
 417:../../os/hal/osal/rt-nil/osal.h ****  */
 418:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_I2US(interval) TIME_I2US(interval)
 419:../../os/hal/osal/rt-nil/osal.h **** /** @} */
 420:../../os/hal/osal/rt-nil/osal.h **** 
 421:../../os/hal/osal/rt-nil/osal.h **** /**
 422:../../os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 423:../../os/hal/osal/rt-nil/osal.h ****  * @{
 424:../../os/hal/osal/rt-nil/osal.h ****  */
 425:../../os/hal/osal/rt-nil/osal.h **** /**
 426:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 427:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 428:../../os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 429:../../os/hal/osal/rt-nil/osal.h ****  *
 430:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 431:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 432:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 433:../../os/hal/osal/rt-nil/osal.h ****  *
 434:../../os/hal/osal/rt-nil/osal.h ****  * @api
 435:../../os/hal/osal/rt-nil/osal.h ****  */
 436:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 437:../../os/hal/osal/rt-nil/osal.h **** 
 438:../../os/hal/osal/rt-nil/osal.h **** /**
 439:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 440:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 441:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 442:../../os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 443:../../os/hal/osal/rt-nil/osal.h ****  *
 444:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 445:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 446:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 447:../../os/hal/osal/rt-nil/osal.h ****  *
 448:../../os/hal/osal/rt-nil/osal.h ****  * @api
 449:../../os/hal/osal/rt-nil/osal.h ****  */
 450:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 451:../../os/hal/osal/rt-nil/osal.h **** 
 452:../../os/hal/osal/rt-nil/osal.h **** /**
 453:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 454:../../os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 455:../../os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 456:../../os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 457:../../os/hal/osal/rt-nil/osal.h ****  *
 458:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 459:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 460:../../os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 461:../../os/hal/osal/rt-nil/osal.h ****  *
 462:../../os/hal/osal/rt-nil/osal.h ****  * @api
 463:../../os/hal/osal/rt-nil/osal.h ****  */
 464:../../os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 465:../../os/hal/osal/rt-nil/osal.h **** /** @} */
 466:../../os/hal/osal/rt-nil/osal.h **** 
 467:../../os/hal/osal/rt-nil/osal.h **** /**
 468:../../os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 469:../../os/hal/osal/rt-nil/osal.h ****  * @{
 470:../../os/hal/osal/rt-nil/osal.h ****  */
 471:../../os/hal/osal/rt-nil/osal.h **** /**
 472:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 473:../../os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 474:../../os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 475:../../os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 476:../../os/hal/osal/rt-nil/osal.h ****  *
 477:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 478:../../os/hal/osal/rt-nil/osal.h ****  *
 479:../../os/hal/osal/rt-nil/osal.h ****  * @api
 480:../../os/hal/osal/rt-nil/osal.h ****  */
 481:../../os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 482:../../os/hal/osal/rt-nil/osal.h **** 
 483:../../os/hal/osal/rt-nil/osal.h **** /**
 484:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 485:../../os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 486:../../os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 487:../../os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 488:../../os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 489:../../os/hal/osal/rt-nil/osal.h ****  *
 490:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 491:../../os/hal/osal/rt-nil/osal.h ****  *
 492:../../os/hal/osal/rt-nil/osal.h ****  * @api
 493:../../os/hal/osal/rt-nil/osal.h ****  */
 494:../../os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 495:../../os/hal/osal/rt-nil/osal.h **** 
 496:../../os/hal/osal/rt-nil/osal.h **** /**
 497:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 498:../../os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 499:../../os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 500:../../os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 501:../../os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 502:../../os/hal/osal/rt-nil/osal.h ****  *
 503:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 504:../../os/hal/osal/rt-nil/osal.h ****  *
 505:../../os/hal/osal/rt-nil/osal.h ****  * @api
 506:../../os/hal/osal/rt-nil/osal.h ****  */
 507:../../os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 508:../../os/hal/osal/rt-nil/osal.h **** /** @} */
 509:../../os/hal/osal/rt-nil/osal.h **** 
 510:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 511:../../os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 512:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 513:../../os/hal/osal/rt-nil/osal.h **** 
 514:../../os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 515:../../os/hal/osal/rt-nil/osal.h **** extern "C" {
 516:../../os/hal/osal/rt-nil/osal.h **** #endif
 517:../../os/hal/osal/rt-nil/osal.h **** 
 518:../../os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 519:../../os/hal/osal/rt-nil/osal.h **** }
 520:../../os/hal/osal/rt-nil/osal.h **** #endif
 521:../../os/hal/osal/rt-nil/osal.h **** 
 522:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 523:../../os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 524:../../os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 525:../../os/hal/osal/rt-nil/osal.h **** 
 526:../../os/hal/osal/rt-nil/osal.h **** /**
 527:../../os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 528:../../os/hal/osal/rt-nil/osal.h ****  *
 529:../../os/hal/osal/rt-nil/osal.h ****  * @api
 530:../../os/hal/osal/rt-nil/osal.h ****  */
 531:../../os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 532:../../os/hal/osal/rt-nil/osal.h **** 
 533:../../os/hal/osal/rt-nil/osal.h **** }
 534:../../os/hal/osal/rt-nil/osal.h **** 
 535:../../os/hal/osal/rt-nil/osal.h **** /**
 536:../../os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 537:../../os/hal/osal/rt-nil/osal.h ****  *
 538:../../os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 539:../../os/hal/osal/rt-nil/osal.h ****  *
 540:../../os/hal/osal/rt-nil/osal.h ****  * @api
 541:../../os/hal/osal/rt-nil/osal.h ****  */
 542:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 543:../../os/hal/osal/rt-nil/osal.h **** 
 544:../../os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 545:../../os/hal/osal/rt-nil/osal.h **** }
 546:../../os/hal/osal/rt-nil/osal.h **** 
 547:../../os/hal/osal/rt-nil/osal.h **** /**
 548:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 549:../../os/hal/osal/rt-nil/osal.h ****  *
 550:../../os/hal/osal/rt-nil/osal.h ****  * @special
 551:../../os/hal/osal/rt-nil/osal.h ****  */
 552:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 553:../../os/hal/osal/rt-nil/osal.h **** 
 554:../../os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 555:../../os/hal/osal/rt-nil/osal.h **** }
 556:../../os/hal/osal/rt-nil/osal.h **** 
 557:../../os/hal/osal/rt-nil/osal.h **** /**
 558:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 559:../../os/hal/osal/rt-nil/osal.h ****  *
 560:../../os/hal/osal/rt-nil/osal.h ****  * @special
 561:../../os/hal/osal/rt-nil/osal.h ****  */
 562:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 563:../../os/hal/osal/rt-nil/osal.h **** 
 564:../../os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 565:../../os/hal/osal/rt-nil/osal.h **** }
 566:../../os/hal/osal/rt-nil/osal.h **** 
 567:../../os/hal/osal/rt-nil/osal.h **** /**
 568:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 569:../../os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 570:../../os/hal/osal/rt-nil/osal.h ****  *
 571:../../os/hal/osal/rt-nil/osal.h ****  * @special
 572:../../os/hal/osal/rt-nil/osal.h ****  */
 573:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
  95               		.loc 2 573 20 view .LVU21
 574:../../os/hal/osal/rt-nil/osal.h **** 
 575:../../os/hal/osal/rt-nil/osal.h ****   chSysLock();
  96               		.loc 2 575 3 view .LVU22
  97               	.LBB79:
  98               	.LBI79:
  99               		.file 3 "../../os/common/ports/AVR/chcore.h"
   1:../../os/common/ports/AVR/chcore.h **** /*
   2:../../os/common/ports/AVR/chcore.h ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:../../os/common/ports/AVR/chcore.h ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:../../os/common/ports/AVR/chcore.h **** 
   5:../../os/common/ports/AVR/chcore.h ****     This file is part of ChibiOS.
   6:../../os/common/ports/AVR/chcore.h **** 
   7:../../os/common/ports/AVR/chcore.h ****     ChibiOS is free software; you can redistribute it and/or modify
   8:../../os/common/ports/AVR/chcore.h ****     it under the terms of the GNU General Public License as published by
   9:../../os/common/ports/AVR/chcore.h ****     the Free Software Foundation version 3 of the License.
  10:../../os/common/ports/AVR/chcore.h **** 
  11:../../os/common/ports/AVR/chcore.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../os/common/ports/AVR/chcore.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../os/common/ports/AVR/chcore.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../os/common/ports/AVR/chcore.h ****     GNU General Public License for more details.
  15:../../os/common/ports/AVR/chcore.h **** 
  16:../../os/common/ports/AVR/chcore.h ****     You should have received a copy of the GNU General Public License
  17:../../os/common/ports/AVR/chcore.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../os/common/ports/AVR/chcore.h **** */
  19:../../os/common/ports/AVR/chcore.h **** 
  20:../../os/common/ports/AVR/chcore.h **** /**
  21:../../os/common/ports/AVR/chcore.h ****  * @file    chcore.h
  22:../../os/common/ports/AVR/chcore.h ****  * @brief   AVR port macros and structures.
  23:../../os/common/ports/AVR/chcore.h ****  *
  24:../../os/common/ports/AVR/chcore.h ****  * @addtogroup AVR_CORE
  25:../../os/common/ports/AVR/chcore.h ****  * @{
  26:../../os/common/ports/AVR/chcore.h ****  */
  27:../../os/common/ports/AVR/chcore.h **** 
  28:../../os/common/ports/AVR/chcore.h **** #ifndef CHCORE_H
  29:../../os/common/ports/AVR/chcore.h **** #define CHCORE_H
  30:../../os/common/ports/AVR/chcore.h **** 
  31:../../os/common/ports/AVR/chcore.h **** #include <avr/io.h>
  32:../../os/common/ports/AVR/chcore.h **** #include <avr/interrupt.h>
  33:../../os/common/ports/AVR/chcore.h **** 
  34:../../os/common/ports/AVR/chcore.h **** extern bool __avr_in_isr;
  35:../../os/common/ports/AVR/chcore.h **** 
  36:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  37:../../os/common/ports/AVR/chcore.h **** /* Module constants.                                                         */
  38:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  39:../../os/common/ports/AVR/chcore.h **** 
  40:../../os/common/ports/AVR/chcore.h **** /**
  41:../../os/common/ports/AVR/chcore.h ****  * @name    Port Capabilities and Constants
  42:../../os/common/ports/AVR/chcore.h ****  * @{
  43:../../os/common/ports/AVR/chcore.h ****  */
  44:../../os/common/ports/AVR/chcore.h **** /**
  45:../../os/common/ports/AVR/chcore.h ****  * @brief   This port supports a realtime counter.
  46:../../os/common/ports/AVR/chcore.h ****  */
  47:../../os/common/ports/AVR/chcore.h **** #define PORT_SUPPORTS_RT                FALSE
  48:../../os/common/ports/AVR/chcore.h **** 
  49:../../os/common/ports/AVR/chcore.h **** /**
  50:../../os/common/ports/AVR/chcore.h ****  * @brief   Natural alignment constant.
  51:../../os/common/ports/AVR/chcore.h ****  * @note    It is the minimum alignment for pointer-size variables.
  52:../../os/common/ports/AVR/chcore.h ****  */
  53:../../os/common/ports/AVR/chcore.h **** #define PORT_NATURAL_ALIGN              1U
  54:../../os/common/ports/AVR/chcore.h **** 
  55:../../os/common/ports/AVR/chcore.h **** /**
  56:../../os/common/ports/AVR/chcore.h ****  * @brief   Stack alignment constant.
  57:../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignment required for the stack pointer.
  58:../../os/common/ports/AVR/chcore.h ****  */
  59:../../os/common/ports/AVR/chcore.h **** #define PORT_STACK_ALIGN                1U
  60:../../os/common/ports/AVR/chcore.h **** 
  61:../../os/common/ports/AVR/chcore.h **** /**
  62:../../os/common/ports/AVR/chcore.h ****  * @brief   Working Areas alignment constant.
  63:../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignment to be enforced for thread working areas.
  64:../../os/common/ports/AVR/chcore.h ****  */
  65:../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA_ALIGN         1U
  66:../../os/common/ports/AVR/chcore.h **** /** @} */
  67:../../os/common/ports/AVR/chcore.h **** 
  68:../../os/common/ports/AVR/chcore.h **** /**
  69:../../os/common/ports/AVR/chcore.h ****  * @name    Architecture and Compiler
  70:../../os/common/ports/AVR/chcore.h ****  * @{
  71:../../os/common/ports/AVR/chcore.h ****  */
  72:../../os/common/ports/AVR/chcore.h **** /**
  73:../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining an AVR architecture.
  74:../../os/common/ports/AVR/chcore.h ****  */
  75:../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR
  76:../../os/common/ports/AVR/chcore.h **** 
  77:../../os/common/ports/AVR/chcore.h **** /**
  78:../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining the specific AVR architecture.
  79:../../os/common/ports/AVR/chcore.h ****  */
  80:../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR_MEGAAVR
  81:../../os/common/ports/AVR/chcore.h **** 
  82:../../os/common/ports/AVR/chcore.h **** /**
  83:../../os/common/ports/AVR/chcore.h ****  * @brief   Name of the implemented architecture.
  84:../../os/common/ports/AVR/chcore.h ****  */
  85:../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_NAME          "AVR"
  86:../../os/common/ports/AVR/chcore.h **** 
  87:../../os/common/ports/AVR/chcore.h **** /**
  88:../../os/common/ports/AVR/chcore.h ****  * @brief   Name of the architecture variant.
  89:../../os/common/ports/AVR/chcore.h ****  */
  90:../../os/common/ports/AVR/chcore.h **** #define PORT_CORE_VARIANT_NAME          "MegaAVR"
  91:../../os/common/ports/AVR/chcore.h **** 
  92:../../os/common/ports/AVR/chcore.h **** /**
  93:../../os/common/ports/AVR/chcore.h ****  * @brief   Compiler name and version.
  94:../../os/common/ports/AVR/chcore.h ****  */
  95:../../os/common/ports/AVR/chcore.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
  96:../../os/common/ports/AVR/chcore.h **** #define PORT_COMPILER_NAME              "GCC " __VERSION__
  97:../../os/common/ports/AVR/chcore.h **** 
  98:../../os/common/ports/AVR/chcore.h **** #else
  99:../../os/common/ports/AVR/chcore.h **** #error "unsupported compiler"
 100:../../os/common/ports/AVR/chcore.h **** #endif
 101:../../os/common/ports/AVR/chcore.h **** 
 102:../../os/common/ports/AVR/chcore.h **** /**
 103:../../os/common/ports/AVR/chcore.h ****  * @brief   Port-specific information string.
 104:../../os/common/ports/AVR/chcore.h ****  */
 105:../../os/common/ports/AVR/chcore.h **** #define PORT_INFO                       "None"
 106:../../os/common/ports/AVR/chcore.h **** /** @} */
 107:../../os/common/ports/AVR/chcore.h **** 
 108:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 109:../../os/common/ports/AVR/chcore.h **** /* Module pre-compile time settings.                                         */
 110:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 111:../../os/common/ports/AVR/chcore.h **** 
 112:../../os/common/ports/AVR/chcore.h **** /**
 113:../../os/common/ports/AVR/chcore.h ****  * @brief   Stack size for the system idle thread.
 114:../../os/common/ports/AVR/chcore.h ****  * @details This size depends on the idle thread implementation, usually
 115:../../os/common/ports/AVR/chcore.h ****  *          the idle thread should take no more space than those reserved
 116:../../os/common/ports/AVR/chcore.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 117:../../os/common/ports/AVR/chcore.h ****  */
 118:../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 119:../../os/common/ports/AVR/chcore.h **** #define PORT_IDLE_THREAD_STACK_SIZE     8
 120:../../os/common/ports/AVR/chcore.h **** #endif
 121:../../os/common/ports/AVR/chcore.h **** 
 122:../../os/common/ports/AVR/chcore.h **** /**
 123:../../os/common/ports/AVR/chcore.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 124:../../os/common/ports/AVR/chcore.h ****  * @details This constant is used in the calculation of the correct working
 125:../../os/common/ports/AVR/chcore.h ****  *          area size.
 126:../../os/common/ports/AVR/chcore.h ****  */
 127:../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 128:../../os/common/ports/AVR/chcore.h **** #define PORT_INT_REQUIRED_STACK         32
 129:../../os/common/ports/AVR/chcore.h **** #endif
 130:../../os/common/ports/AVR/chcore.h **** 
 131:../../os/common/ports/AVR/chcore.h **** /**
 132:../../os/common/ports/AVR/chcore.h ****  * @brief   Enables a "wait for interrupt" instruction in the idle loop.
 133:../../os/common/ports/AVR/chcore.h ****  */
 134:../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_AVR_WFI_SLEEP_IDLE) || defined(__DOXYGEN__)
 135:../../os/common/ports/AVR/chcore.h **** #define PORT_AVR_WFI_SLEEP_IDLE      FALSE
 136:../../os/common/ports/AVR/chcore.h **** #endif
 137:../../os/common/ports/AVR/chcore.h **** 
 138:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 139:../../os/common/ports/AVR/chcore.h **** /* Derived constants and error checks.                                       */
 140:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 141:../../os/common/ports/AVR/chcore.h **** 
 142:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 143:../../os/common/ports/AVR/chcore.h **** /* Module data structures and types.                                         */
 144:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 145:../../os/common/ports/AVR/chcore.h **** 
 146:../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 147:../../os/common/ports/AVR/chcore.h ****    asm module.*/
 148:../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 149:../../os/common/ports/AVR/chcore.h **** 
 150:../../os/common/ports/AVR/chcore.h **** /**
 151:../../os/common/ports/AVR/chcore.h ****  * @brief   Type of stack and memory alignment enforcement.
 152:../../os/common/ports/AVR/chcore.h ****  * @note    In this architecture the stack alignment is enforced to 8 bits.
 153:../../os/common/ports/AVR/chcore.h ****  */
 154:../../os/common/ports/AVR/chcore.h **** typedef uint8_t stkalign_t;
 155:../../os/common/ports/AVR/chcore.h **** 
 156:../../os/common/ports/AVR/chcore.h **** /**
 157:../../os/common/ports/AVR/chcore.h ****  * @brief   Interrupt saved context.
 158:../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the stack frame saved during a
 159:../../os/common/ports/AVR/chcore.h ****  *          preemption-capable interrupt handler.
 160:../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 161:../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 162:../../os/common/ports/AVR/chcore.h ****  */
 163:../../os/common/ports/AVR/chcore.h **** struct port_extctx {
 164:../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 165:../../os/common/ports/AVR/chcore.h ****   uint8_t       r31;
 166:../../os/common/ports/AVR/chcore.h ****   uint8_t       r30;
 167:../../os/common/ports/AVR/chcore.h ****   uint8_t       r27;
 168:../../os/common/ports/AVR/chcore.h ****   uint8_t       r26;
 169:../../os/common/ports/AVR/chcore.h ****   uint8_t       r25;
 170:../../os/common/ports/AVR/chcore.h ****   uint8_t       r24;
 171:../../os/common/ports/AVR/chcore.h ****   uint8_t       r23;
 172:../../os/common/ports/AVR/chcore.h ****   uint8_t       r22;
 173:../../os/common/ports/AVR/chcore.h ****   uint8_t       r21;
 174:../../os/common/ports/AVR/chcore.h ****   uint8_t       r20;
 175:../../os/common/ports/AVR/chcore.h ****   uint8_t       r19;
 176:../../os/common/ports/AVR/chcore.h ****   uint8_t       r18;
 177:../../os/common/ports/AVR/chcore.h ****   uint8_t       sr;
 178:../../os/common/ports/AVR/chcore.h ****   uint8_t       r1;
 179:../../os/common/ports/AVR/chcore.h ****   uint8_t       r0;
 180:../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 181:../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 182:../../os/common/ports/AVR/chcore.h **** #endif
 183:../../os/common/ports/AVR/chcore.h ****   uint16_t      pc;
 184:../../os/common/ports/AVR/chcore.h **** };
 185:../../os/common/ports/AVR/chcore.h **** 
 186:../../os/common/ports/AVR/chcore.h **** /**
 187:../../os/common/ports/AVR/chcore.h ****  * @brief   System saved context.
 188:../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the inner stack frame during a context
 189:../../os/common/ports/AVR/chcore.h ****  *          switching.
 190:../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 191:../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 192:../../os/common/ports/AVR/chcore.h ****  * @note    LR is stored in the caller context so it is not present in this
 193:../../os/common/ports/AVR/chcore.h ****  *          structure.
 194:../../os/common/ports/AVR/chcore.h ****  */
 195:../../os/common/ports/AVR/chcore.h **** struct port_intctx {
 196:../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 197:../../os/common/ports/AVR/chcore.h ****   uint8_t       r29;
 198:../../os/common/ports/AVR/chcore.h ****   uint8_t       r28;
 199:../../os/common/ports/AVR/chcore.h ****   uint8_t       r17;
 200:../../os/common/ports/AVR/chcore.h ****   uint8_t       r16;
 201:../../os/common/ports/AVR/chcore.h ****   uint8_t       r15;
 202:../../os/common/ports/AVR/chcore.h ****   uint8_t       r14;
 203:../../os/common/ports/AVR/chcore.h ****   uint8_t       r13;
 204:../../os/common/ports/AVR/chcore.h ****   uint8_t       r12;
 205:../../os/common/ports/AVR/chcore.h ****   uint8_t       r11;
 206:../../os/common/ports/AVR/chcore.h ****   uint8_t       r10;
 207:../../os/common/ports/AVR/chcore.h ****   uint8_t       r9;
 208:../../os/common/ports/AVR/chcore.h ****   uint8_t       r8;
 209:../../os/common/ports/AVR/chcore.h ****   uint8_t       r7;
 210:../../os/common/ports/AVR/chcore.h ****   uint8_t       r6;
 211:../../os/common/ports/AVR/chcore.h ****   uint8_t       r5;
 212:../../os/common/ports/AVR/chcore.h ****   uint8_t       r4;
 213:../../os/common/ports/AVR/chcore.h ****   uint8_t       r3;
 214:../../os/common/ports/AVR/chcore.h ****   uint8_t       r2;
 215:../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 216:../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 217:../../os/common/ports/AVR/chcore.h **** #endif
 218:../../os/common/ports/AVR/chcore.h ****   uint8_t       pcl;
 219:../../os/common/ports/AVR/chcore.h ****   uint8_t       pch;
 220:../../os/common/ports/AVR/chcore.h **** };
 221:../../os/common/ports/AVR/chcore.h **** 
 222:../../os/common/ports/AVR/chcore.h **** /**
 223:../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p thread_t structure.
 224:../../os/common/ports/AVR/chcore.h ****  * @details This structure usually contains just the saved stack pointer
 225:../../os/common/ports/AVR/chcore.h ****  *          defined as a pointer to a @p port_intctx structure.
 226:../../os/common/ports/AVR/chcore.h ****  */
 227:../../os/common/ports/AVR/chcore.h **** struct port_context {
 228:../../os/common/ports/AVR/chcore.h ****   struct port_intctx *sp;
 229:../../os/common/ports/AVR/chcore.h **** };
 230:../../os/common/ports/AVR/chcore.h **** 
 231:../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 232:../../os/common/ports/AVR/chcore.h **** 
 233:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 234:../../os/common/ports/AVR/chcore.h **** /* Module macros.                                                            */
 235:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 236:../../os/common/ports/AVR/chcore.h **** 
 237:../../os/common/ports/AVR/chcore.h **** /**
 238:../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 239:../../os/common/ports/AVR/chcore.h ****  * @details This code usually setup the context switching frame represented
 240:../../os/common/ports/AVR/chcore.h ****  *          by an @p port_intctx structure.
 241:../../os/common/ports/AVR/chcore.h ****  */
 242:../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__) || defined(__DOXYGEN__)
 243:../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 244:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 245:../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 246:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 247:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 248:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 249:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 250:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcx = (uint8_t)0;                                             \
 251:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 252:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 253:../../os/common/ports/AVR/chcore.h **** }
 254:../../os/common/ports/AVR/chcore.h **** #else /* !__AVR_3_BYTE_PC__ */
 255:../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 256:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 257:../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 258:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 259:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 260:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 261:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 262:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 263:../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 264:../../os/common/ports/AVR/chcore.h **** }
 265:../../os/common/ports/AVR/chcore.h **** #endif /* !__AVR_3_BYTE_PC__ */
 266:../../os/common/ports/AVR/chcore.h **** 
 267:../../os/common/ports/AVR/chcore.h **** /**
 268:../../os/common/ports/AVR/chcore.h ****  * @brief   Computes the thread working area global size.
 269:../../os/common/ports/AVR/chcore.h ****  * @note    There is no need to perform alignments in this macro.
 270:../../os/common/ports/AVR/chcore.h ****  */
 271:../../os/common/ports/AVR/chcore.h **** #define PORT_WA_SIZE(n) ((sizeof(struct port_intctx) - 1) +                \
 272:../../os/common/ports/AVR/chcore.h ****                          (sizeof(struct port_extctx) - 1) +                \
 273:../../os/common/ports/AVR/chcore.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 274:../../os/common/ports/AVR/chcore.h **** 
 275:../../os/common/ports/AVR/chcore.h **** /**
 276:../../os/common/ports/AVR/chcore.h ****  * @brief   Static working area allocation.
 277:../../os/common/ports/AVR/chcore.h ****  * @details This macro is used to allocate a static thread working area
 278:../../os/common/ports/AVR/chcore.h ****  *          aligned as both position and size.
 279:../../os/common/ports/AVR/chcore.h ****  *
 280:../../os/common/ports/AVR/chcore.h ****  * @param[in] s         the name to be assigned to the stack array
 281:../../os/common/ports/AVR/chcore.h ****  * @param[in] n         the stack size to be assigned to the thread
 282:../../os/common/ports/AVR/chcore.h ****  */
 283:../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA(s, n)                                             \
 284:../../os/common/ports/AVR/chcore.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 285:../../os/common/ports/AVR/chcore.h **** 
 286:../../os/common/ports/AVR/chcore.h **** /**
 287:../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 288:../../os/common/ports/AVR/chcore.h ****  */
 289:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_PRIORITY(n) false
 290:../../os/common/ports/AVR/chcore.h **** 
 291:../../os/common/ports/AVR/chcore.h **** /**
 292:../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 293:../../os/common/ports/AVR/chcore.h ****  */
 294:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_KERNEL_PRIORITY(n) false
 295:../../os/common/ports/AVR/chcore.h **** 
 296:../../os/common/ports/AVR/chcore.h **** /**
 297:../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ prologue code.
 298:../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 299:../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 300:../../os/common/ports/AVR/chcore.h ****  * @note    This code tricks the compiler to save all the specified registers
 301:../../os/common/ports/AVR/chcore.h ****  *          by "touching" them.
 302:../../os/common/ports/AVR/chcore.h ****  */
 303:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_PROLOGUE() {                                               \
 304:../../os/common/ports/AVR/chcore.h ****   asm ("" : : : "r18", "r19", "r20", "r21", "r22", "r23", "r24",            \
 305:../../os/common/ports/AVR/chcore.h ****                 "r25", "r26", "r27", "r30", "r31");                         \
 306:../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 307:../../os/common/ports/AVR/chcore.h **** }
 308:../../os/common/ports/AVR/chcore.h **** 
 309:../../os/common/ports/AVR/chcore.h **** /**
 310:../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ epilogue code.
 311:../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 312:../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 313:../../os/common/ports/AVR/chcore.h ****  */
 314:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_EPILOGUE() {                                               \
 315:../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = false;                                                     \
 316:../../os/common/ports/AVR/chcore.h ****   __dbg_check_lock();                                                       \
 317:../../os/common/ports/AVR/chcore.h ****   if (chSchIsPreemptionRequired())                                          \
 318:../../os/common/ports/AVR/chcore.h ****     chSchDoPreemption();                                                    \
 319:../../os/common/ports/AVR/chcore.h ****   __dbg_check_unlock();                                                     \
 320:../../os/common/ports/AVR/chcore.h **** }
 321:../../os/common/ports/AVR/chcore.h **** 
 322:../../os/common/ports/AVR/chcore.h **** /**
 323:../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ handler function declaration.
 324:../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 325:../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 326:../../os/common/ports/AVR/chcore.h ****  */
 327:../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_HANDLER(id) ISR(id)
 328:../../os/common/ports/AVR/chcore.h **** 
 329:../../os/common/ports/AVR/chcore.h **** /**
 330:../../os/common/ports/AVR/chcore.h ****  * @brief   Fast IRQ handler function declaration.
 331:../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 332:../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 333:../../os/common/ports/AVR/chcore.h ****  */
 334:../../os/common/ports/AVR/chcore.h **** #define PORT_FAST_IRQ_HANDLER(id) ISR(id)
 335:../../os/common/ports/AVR/chcore.h **** 
 336:../../os/common/ports/AVR/chcore.h **** /**
 337:../../os/common/ports/AVR/chcore.h ****  * @brief   Performs a context switch between two threads.
 338:../../os/common/ports/AVR/chcore.h ****  * @details This is the most critical code in any port, this function
 339:../../os/common/ports/AVR/chcore.h ****  *          is responsible for the context switch between 2 threads.
 340:../../os/common/ports/AVR/chcore.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 341:../../os/common/ports/AVR/chcore.h ****  *          switch performance so optimize here as much as you can.
 342:../../os/common/ports/AVR/chcore.h ****  *
 343:../../os/common/ports/AVR/chcore.h ****  * @param[in] ntp       the thread to be switched in
 344:../../os/common/ports/AVR/chcore.h ****  * @param[in] otp       the thread to be switched out
 345:../../os/common/ports/AVR/chcore.h ****  */
 346:../../os/common/ports/AVR/chcore.h **** #define port_switch(ntp, otp) {                                             \
 347:../../os/common/ports/AVR/chcore.h ****   _port_switch(ntp, otp);                                                   \
 348:../../os/common/ports/AVR/chcore.h ****   asm volatile ("" : : : "memory");                                         \
 349:../../os/common/ports/AVR/chcore.h **** }
 350:../../os/common/ports/AVR/chcore.h **** 
 351:../../os/common/ports/AVR/chcore.h **** 
 352:../../os/common/ports/AVR/chcore.h **** /**
 353:../../os/common/ports/AVR/chcore.h ****  * @brief   Port-related initialization code.
 354:../../os/common/ports/AVR/chcore.h ****  * @note    This function is empty in this port.
 355:../../os/common/ports/AVR/chcore.h ****  */
 356:../../os/common/ports/AVR/chcore.h **** #define port_init(oip) {                                                    \
 357:../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 358:../../os/common/ports/AVR/chcore.h **** }
 359:../../os/common/ports/AVR/chcore.h **** 
 360:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 361:../../os/common/ports/AVR/chcore.h **** /* External declarations.                                                    */
 362:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 363:../../os/common/ports/AVR/chcore.h **** 
 364:../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 365:../../os/common/ports/AVR/chcore.h ****    asm module.*/
 366:../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 367:../../os/common/ports/AVR/chcore.h **** 
 368:../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 369:../../os/common/ports/AVR/chcore.h **** extern "C" {
 370:../../os/common/ports/AVR/chcore.h **** #endif
 371:../../os/common/ports/AVR/chcore.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 372:../../os/common/ports/AVR/chcore.h ****   void _port_thread_start(void);
 373:../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 374:../../os/common/ports/AVR/chcore.h **** }
 375:../../os/common/ports/AVR/chcore.h **** #endif
 376:../../os/common/ports/AVR/chcore.h **** 
 377:../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 378:../../os/common/ports/AVR/chcore.h **** 
 379:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 380:../../os/common/ports/AVR/chcore.h **** /* Module inline functions.                                                  */
 381:../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 382:../../os/common/ports/AVR/chcore.h **** 
 383:../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 384:../../os/common/ports/AVR/chcore.h ****    asm module.*/
 385:../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 386:../../os/common/ports/AVR/chcore.h **** 
 387:../../os/common/ports/AVR/chcore.h **** /**
 388:../../os/common/ports/AVR/chcore.h ****  * @brief   Returns a word encoding the current interrupts status.
 389:../../os/common/ports/AVR/chcore.h ****  *
 390:../../os/common/ports/AVR/chcore.h ****  * @return              The interrupts status.
 391:../../os/common/ports/AVR/chcore.h ****  */
 392:../../os/common/ports/AVR/chcore.h **** static inline syssts_t port_get_irq_status(void) {
 393:../../os/common/ports/AVR/chcore.h **** 
 394:../../os/common/ports/AVR/chcore.h ****   return SREG;
 395:../../os/common/ports/AVR/chcore.h **** }
 396:../../os/common/ports/AVR/chcore.h **** 
 397:../../os/common/ports/AVR/chcore.h **** /**
 398:../../os/common/ports/AVR/chcore.h ****  * @brief   Checks the interrupt status.
 399:../../os/common/ports/AVR/chcore.h ****  *
 400:../../os/common/ports/AVR/chcore.h ****  * @param[in] sts       the interrupt status word
 401:../../os/common/ports/AVR/chcore.h ****  *
 402:../../os/common/ports/AVR/chcore.h ****  * @return              The interrupt status.
 403:../../os/common/ports/AVR/chcore.h ****  * @retval false        the word specified a disabled interrupts status.
 404:../../os/common/ports/AVR/chcore.h ****  * @retval true         the word specified an enabled interrupts status.
 405:../../os/common/ports/AVR/chcore.h ****  */
 406:../../os/common/ports/AVR/chcore.h **** static inline bool port_irq_enabled(syssts_t sts) {
 407:../../os/common/ports/AVR/chcore.h **** 
 408:../../os/common/ports/AVR/chcore.h ****   return (bool)((sts & 0x80) != 0);
 409:../../os/common/ports/AVR/chcore.h **** }
 410:../../os/common/ports/AVR/chcore.h **** 
 411:../../os/common/ports/AVR/chcore.h **** /**
 412:../../os/common/ports/AVR/chcore.h ****  * @brief   Determines the current execution context.
 413:../../os/common/ports/AVR/chcore.h ****  *
 414:../../os/common/ports/AVR/chcore.h ****  * @return              The execution context.
 415:../../os/common/ports/AVR/chcore.h ****  * @retval false        not running in ISR mode.
 416:../../os/common/ports/AVR/chcore.h ****  * @retval true         running in ISR mode.
 417:../../os/common/ports/AVR/chcore.h ****  */
 418:../../os/common/ports/AVR/chcore.h **** static inline bool port_is_isr_context(void) {
 419:../../os/common/ports/AVR/chcore.h **** 
 420:../../os/common/ports/AVR/chcore.h ****   return __avr_in_isr;
 421:../../os/common/ports/AVR/chcore.h **** }
 422:../../os/common/ports/AVR/chcore.h **** 
 423:../../os/common/ports/AVR/chcore.h **** /**
 424:../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-lock action.
 425:../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just disables interrupts but may perform more
 426:../../os/common/ports/AVR/chcore.h ****  *          actions.
 427:../../os/common/ports/AVR/chcore.h ****  */
 428:../../os/common/ports/AVR/chcore.h **** static inline void port_lock(void) {
 100               		.loc 3 428 20 view .LVU23
 101               	.LBB80:
 429:../../os/common/ports/AVR/chcore.h **** 
 430:../../os/common/ports/AVR/chcore.h ****   asm volatile ("cli" : : : "memory");
 102               		.loc 3 430 3 view .LVU24
 103               	/* #APP */
 104               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 105 0008 F894      		cli
 106               	 ;  0 "" 2
 107               	/* #NOAPP */
 108               	.LBE80:
 109               	.LBE79:
 110               		.loc 2 575 3 discriminator 1 view .LVU25
 111               		.loc 2 575 14 discriminator 1 view .LVU26
 112               	.LBE78:
  96:../../os/hal/src/hal_pwm.c ****   osalDbgAssert((pwmp->state == PWM_STOP) || (pwmp->state == PWM_READY),
 113               		.loc 1 96 3 view .LVU27
 114               		.loc 1 96 3 view .LVU28
 115               		.loc 1 96 3 discriminator 5 view .LVU29
  97:../../os/hal/src/hal_pwm.c ****                 "invalid state");
  98:../../os/hal/src/hal_pwm.c **** 
  99:../../os/hal/src/hal_pwm.c ****   pwmp->config = config;
 116               		.loc 1 99 3 view .LVU30
 117               		.loc 1 99 16 is_stmt 0 view .LVU31
 118 000a 7A83      		std Y+2,r23
 119 000c 6983      		std Y+1,r22
 100:../../os/hal/src/hal_pwm.c ****   pwmp->period = config->period;
 120               		.loc 1 100 3 is_stmt 1 view .LVU32
 121               		.loc 1 100 16 is_stmt 0 view .LVU33
 122 000e 8481      		ldd r24,Z+4
 123 0010 9581      		ldd r25,Z+5
 124               	.LVL4:
 125               		.loc 1 100 16 view .LVU34
 126 0012 9C83      		std Y+4,r25
 127 0014 8B83      		std Y+3,r24
 101:../../os/hal/src/hal_pwm.c ****   pwmp->enabled = 0U;
 128               		.loc 1 101 3 is_stmt 1 view .LVU35
 129               		.loc 1 101 17 is_stmt 0 view .LVU36
 130 0016 1D82      		std Y+5,__zero_reg__
 102:../../os/hal/src/hal_pwm.c **** 
 103:../../os/hal/src/hal_pwm.c **** #if defined(PWM_LLD_ENHANCED_API)
 104:../../os/hal/src/hal_pwm.c ****   msg = pwm_lld_start(pwmp);
 105:../../os/hal/src/hal_pwm.c **** #else
 106:../../os/hal/src/hal_pwm.c ****   pwm_lld_start(pwmp);
 131               		.loc 1 106 3 is_stmt 1 view .LVU37
 132 0018 CE01      		movw r24,r28
 133 001a 0E94 0000 		call pwm_lld_start
 134               	.LVL5:
 107:../../os/hal/src/hal_pwm.c ****   msg = HAL_RET_SUCCESS;
 135               		.loc 1 107 3 view .LVU38
 108:../../os/hal/src/hal_pwm.c **** #endif
 109:../../os/hal/src/hal_pwm.c ****   if (msg == HAL_RET_SUCCESS) {
 136               		.loc 1 109 3 view .LVU39
 110:../../os/hal/src/hal_pwm.c ****     pwmp->state = PWM_READY;
 137               		.loc 1 110 5 view .LVU40
 138               		.loc 1 110 17 is_stmt 0 view .LVU41
 139 001e 82E0      		ldi r24,lo8(2)
 140 0020 8883      		st Y,r24
 111:../../os/hal/src/hal_pwm.c ****   }
 112:../../os/hal/src/hal_pwm.c ****   else {
 113:../../os/hal/src/hal_pwm.c ****     pwmp->state = PWM_STOP;
 114:../../os/hal/src/hal_pwm.c ****   }
 115:../../os/hal/src/hal_pwm.c **** 
 116:../../os/hal/src/hal_pwm.c ****   osalSysUnlock();
 141               		.loc 1 116 3 is_stmt 1 view .LVU42
 142               	.LBB81:
 143               	.LBI81:
 576:../../os/hal/osal/rt-nil/osal.h **** }
 577:../../os/hal/osal/rt-nil/osal.h **** 
 578:../../os/hal/osal/rt-nil/osal.h **** /**
 579:../../os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 580:../../os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 581:../../os/hal/osal/rt-nil/osal.h ****  *
 582:../../os/hal/osal/rt-nil/osal.h ****  * @special
 583:../../os/hal/osal/rt-nil/osal.h ****  */
 584:../../os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 144               		.loc 2 584 20 view .LVU43
 585:../../os/hal/osal/rt-nil/osal.h **** 
 586:../../os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 145               		.loc 2 586 3 view .LVU44
 146               		.loc 2 586 3 view .LVU45
 147               	.LBB82:
 148               	.LBI82:
 431:../../os/common/ports/AVR/chcore.h **** }
 432:../../os/common/ports/AVR/chcore.h **** 
 433:../../os/common/ports/AVR/chcore.h **** /**
 434:../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-unlock action.
 435:../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just enables interrupts but may perform more
 436:../../os/common/ports/AVR/chcore.h ****  *          actions.
 437:../../os/common/ports/AVR/chcore.h ****  */
 438:../../os/common/ports/AVR/chcore.h **** static inline void port_unlock(void) {
 149               		.loc 3 438 20 view .LVU46
 150               	.LBB83:
 439:../../os/common/ports/AVR/chcore.h **** 
 440:../../os/common/ports/AVR/chcore.h ****   asm volatile ("sei" : : : "memory");
 151               		.loc 3 440 3 view .LVU47
 152               	/* #APP */
 153               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 154 0022 7894      		sei
 155               	 ;  0 "" 2
 156               	/* #NOAPP */
 157               	.LBE83:
 158               	.LBE82:
 159               		.loc 2 586 16 discriminator 1 view .LVU48
 160               	.LBE81:
 117:../../os/hal/src/hal_pwm.c **** 
 118:../../os/hal/src/hal_pwm.c ****   return msg;
 161               		.loc 1 118 3 view .LVU49
 119:../../os/hal/src/hal_pwm.c **** }
 162               		.loc 1 119 1 is_stmt 0 view .LVU50
 163 0024 80E0      		ldi r24,0
 164 0026 90E0      		ldi r25,0
 165               	/* epilogue start */
 166 0028 DF91      		pop r29
 167 002a CF91      		pop r28
 168               	.LVL6:
 169               		.loc 1 119 1 view .LVU51
 170 002c 0895      		ret
 171               		.cfi_endproc
 172               	.LFE148:
 174               		.section	.text.pwmStop,"ax",@progbits
 175               	.global	pwmStop
 177               	pwmStop:
 178               	.LVL7:
 179               	.LFB149:
 120:../../os/hal/src/hal_pwm.c **** 
 121:../../os/hal/src/hal_pwm.c **** /**
 122:../../os/hal/src/hal_pwm.c ****  * @brief   Deactivates the PWM peripheral.
 123:../../os/hal/src/hal_pwm.c ****  *
 124:../../os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 125:../../os/hal/src/hal_pwm.c ****  *
 126:../../os/hal/src/hal_pwm.c ****  * @api
 127:../../os/hal/src/hal_pwm.c ****  */
 128:../../os/hal/src/hal_pwm.c **** void pwmStop(PWMDriver *pwmp) {
 180               		.loc 1 128 31 is_stmt 1 view -0
 181               		.cfi_startproc
 182               		.loc 1 128 31 is_stmt 0 view .LVU53
 183 0000 CF93      		push r28
 184               	.LCFI2:
 185               		.cfi_def_cfa_offset 3
 186               		.cfi_offset 28, -2
 187 0002 DF93      		push r29
 188               	.LCFI3:
 189               		.cfi_def_cfa_offset 4
 190               		.cfi_offset 29, -3
 191               	/* prologue: function */
 192               	/* frame size = 0 */
 193               	/* stack size = 2 */
 194               	.L__stack_usage = 2
 195 0004 EC01      		movw r28,r24
 129:../../os/hal/src/hal_pwm.c **** 
 130:../../os/hal/src/hal_pwm.c ****   osalDbgCheck(pwmp != NULL);
 196               		.loc 1 130 3 is_stmt 1 view .LVU54
 197               		.loc 1 130 3 view .LVU55
 198               		.loc 1 130 3 discriminator 5 view .LVU56
 131:../../os/hal/src/hal_pwm.c **** 
 132:../../os/hal/src/hal_pwm.c ****   osalSysLock();
 199               		.loc 1 132 3 view .LVU57
 200               	.LBB84:
 201               	.LBI84:
 573:../../os/hal/osal/rt-nil/osal.h **** 
 202               		.loc 2 573 20 view .LVU58
 575:../../os/hal/osal/rt-nil/osal.h **** }
 203               		.loc 2 575 3 view .LVU59
 204               	.LBB85:
 205               	.LBI85:
 428:../../os/common/ports/AVR/chcore.h **** 
 206               		.loc 3 428 20 view .LVU60
 207               	.LBB86:
 430:../../os/common/ports/AVR/chcore.h **** }
 208               		.loc 3 430 3 view .LVU61
 209               	/* #APP */
 210               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 211 0006 F894      		cli
 212               	 ;  0 "" 2
 213               	/* #NOAPP */
 214               	.LBE86:
 215               	.LBE85:
 575:../../os/hal/osal/rt-nil/osal.h **** }
 216               		.loc 2 575 3 discriminator 1 view .LVU62
 575:../../os/hal/osal/rt-nil/osal.h **** }
 217               		.loc 2 575 14 discriminator 1 view .LVU63
 218               	.LBE84:
 133:../../os/hal/src/hal_pwm.c **** 
 134:../../os/hal/src/hal_pwm.c ****   osalDbgAssert((pwmp->state == PWM_STOP) || (pwmp->state == PWM_READY),
 219               		.loc 1 134 3 view .LVU64
 220               		.loc 1 134 3 view .LVU65
 221               		.loc 1 134 3 discriminator 5 view .LVU66
 135:../../os/hal/src/hal_pwm.c ****                 "invalid state");
 136:../../os/hal/src/hal_pwm.c **** 
 137:../../os/hal/src/hal_pwm.c ****   pwm_lld_stop(pwmp);
 222               		.loc 1 137 3 view .LVU67
 223 0008 0E94 0000 		call pwm_lld_stop
 224               	.LVL8:
 138:../../os/hal/src/hal_pwm.c ****   pwmp->enabled = 0;
 225               		.loc 1 138 3 view .LVU68
 226               		.loc 1 138 17 is_stmt 0 view .LVU69
 227 000c 1D82      		std Y+5,__zero_reg__
 139:../../os/hal/src/hal_pwm.c ****   pwmp->config  = NULL;
 228               		.loc 1 139 3 is_stmt 1 view .LVU70
 229               		.loc 1 139 17 is_stmt 0 view .LVU71
 230 000e 1A82      		std Y+2,__zero_reg__
 231 0010 1982      		std Y+1,__zero_reg__
 140:../../os/hal/src/hal_pwm.c ****   pwmp->state   = PWM_STOP;
 232               		.loc 1 140 3 is_stmt 1 view .LVU72
 233               		.loc 1 140 17 is_stmt 0 view .LVU73
 234 0012 81E0      		ldi r24,lo8(1)
 235 0014 8883      		st Y,r24
 141:../../os/hal/src/hal_pwm.c **** 
 142:../../os/hal/src/hal_pwm.c ****   osalSysUnlock();
 236               		.loc 1 142 3 is_stmt 1 view .LVU74
 237               	.LBB87:
 238               	.LBI87:
 584:../../os/hal/osal/rt-nil/osal.h **** 
 239               		.loc 2 584 20 view .LVU75
 240               		.loc 2 586 3 view .LVU76
 241               		.loc 2 586 3 view .LVU77
 242               	.LBB88:
 243               	.LBI88:
 438:../../os/common/ports/AVR/chcore.h **** 
 244               		.loc 3 438 20 view .LVU78
 245               	.LBB89:
 246               		.loc 3 440 3 view .LVU79
 247               	/* #APP */
 248               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 249 0016 7894      		sei
 250               	 ;  0 "" 2
 251               	/* #NOAPP */
 252               	.LBE89:
 253               	.LBE88:
 254               		.loc 2 586 16 discriminator 1 view .LVU80
 255               	/* epilogue start */
 256               	.LBE87:
 143:../../os/hal/src/hal_pwm.c **** }
 257               		.loc 1 143 1 is_stmt 0 view .LVU81
 258 0018 DF91      		pop r29
 259 001a CF91      		pop r28
 260               	.LVL9:
 261               		.loc 1 143 1 view .LVU82
 262 001c 0895      		ret
 263               		.cfi_endproc
 264               	.LFE149:
 266               		.section	.text.pwmChangePeriod,"ax",@progbits
 267               	.global	pwmChangePeriod
 269               	pwmChangePeriod:
 270               	.LVL10:
 271               	.LFB150:
 144:../../os/hal/src/hal_pwm.c **** 
 145:../../os/hal/src/hal_pwm.c **** /**
 146:../../os/hal/src/hal_pwm.c ****  * @brief   Changes the period the PWM peripheral.
 147:../../os/hal/src/hal_pwm.c ****  * @details This function changes the period of a PWM unit that has already
 148:../../os/hal/src/hal_pwm.c ****  *          been activated using @p pwmStart().
 149:../../os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 150:../../os/hal/src/hal_pwm.c ****  * @post    The PWM unit period is changed to the new value.
 151:../../os/hal/src/hal_pwm.c ****  * @note    If a period is specified that is shorter than the pulse width
 152:../../os/hal/src/hal_pwm.c ****  *          programmed in one of the channels then the behavior is not
 153:../../os/hal/src/hal_pwm.c ****  *          guaranteed.
 154:../../os/hal/src/hal_pwm.c ****  *
 155:../../os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 156:../../os/hal/src/hal_pwm.c ****  * @param[in] period    new cycle time in ticks
 157:../../os/hal/src/hal_pwm.c ****  *
 158:../../os/hal/src/hal_pwm.c ****  * @api
 159:../../os/hal/src/hal_pwm.c ****  */
 160:../../os/hal/src/hal_pwm.c **** void pwmChangePeriod(PWMDriver *pwmp, pwmcnt_t period) {
 272               		.loc 1 160 56 is_stmt 1 view -0
 273               		.cfi_startproc
 274               	/* prologue: function */
 275               	/* frame size = 0 */
 276               	/* stack size = 0 */
 277               	.L__stack_usage = 0
 278               		.loc 1 160 56 is_stmt 0 view .LVU84
 279 0000 FC01      		movw r30,r24
 161:../../os/hal/src/hal_pwm.c **** 
 162:../../os/hal/src/hal_pwm.c ****   osalDbgCheck(pwmp != NULL);
 280               		.loc 1 162 3 is_stmt 1 view .LVU85
 281               		.loc 1 162 3 view .LVU86
 282               		.loc 1 162 3 discriminator 5 view .LVU87
 163:../../os/hal/src/hal_pwm.c **** 
 164:../../os/hal/src/hal_pwm.c ****   osalSysLock();
 283               		.loc 1 164 3 view .LVU88
 284               	.LBB90:
 285               	.LBI90:
 573:../../os/hal/osal/rt-nil/osal.h **** 
 286               		.loc 2 573 20 view .LVU89
 575:../../os/hal/osal/rt-nil/osal.h **** }
 287               		.loc 2 575 3 view .LVU90
 288               	.LBB91:
 289               	.LBI91:
 428:../../os/common/ports/AVR/chcore.h **** 
 290               		.loc 3 428 20 view .LVU91
 291               	.LBB92:
 430:../../os/common/ports/AVR/chcore.h **** }
 292               		.loc 3 430 3 view .LVU92
 293               	/* #APP */
 294               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 295 0002 F894      		cli
 296               	 ;  0 "" 2
 297               	/* #NOAPP */
 298               	.LBE92:
 299               	.LBE91:
 575:../../os/hal/osal/rt-nil/osal.h **** }
 300               		.loc 2 575 3 discriminator 1 view .LVU93
 575:../../os/hal/osal/rt-nil/osal.h **** }
 301               		.loc 2 575 14 discriminator 1 view .LVU94
 302               	.LBE90:
 165:../../os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "invalid state");
 303               		.loc 1 165 3 view .LVU95
 304               		.loc 1 165 3 view .LVU96
 305               		.loc 1 165 3 discriminator 5 view .LVU97
 166:../../os/hal/src/hal_pwm.c ****   pwmChangePeriodI(pwmp, period);
 306               		.loc 1 166 3 view .LVU98
 307 0004 6383      		std Z+3,r22
 308 0006 7483      		std Z+4,r23
 309               		.loc 1 166 3 view .LVU99
 310 0008 0E94 0000 		call pwm_lld_change_period
 311               	.LVL11:
 312               		.loc 1 166 33 discriminator 1 view .LVU100
 167:../../os/hal/src/hal_pwm.c ****   osalSysUnlock();
 313               		.loc 1 167 3 view .LVU101
 314               	.LBB93:
 315               	.LBI93:
 584:../../os/hal/osal/rt-nil/osal.h **** 
 316               		.loc 2 584 20 view .LVU102
 317               		.loc 2 586 3 view .LVU103
 318               		.loc 2 586 3 view .LVU104
 319               	.LBB94:
 320               	.LBI94:
 438:../../os/common/ports/AVR/chcore.h **** 
 321               		.loc 3 438 20 view .LVU105
 322               	.LBB95:
 323               		.loc 3 440 3 view .LVU106
 324               	/* #APP */
 325               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 326 000c 7894      		sei
 327               	 ;  0 "" 2
 328               	/* #NOAPP */
 329               	.LBE95:
 330               	.LBE94:
 331               		.loc 2 586 16 discriminator 1 view .LVU107
 332               	/* epilogue start */
 333               	.LBE93:
 168:../../os/hal/src/hal_pwm.c **** }
 334               		.loc 1 168 1 is_stmt 0 view .LVU108
 335 000e 0895      		ret
 336               		.cfi_endproc
 337               	.LFE150:
 339               		.section	.text.pwmEnableChannel,"ax",@progbits
 340               	.global	pwmEnableChannel
 342               	pwmEnableChannel:
 343               	.LVL12:
 344               	.LFB151:
 169:../../os/hal/src/hal_pwm.c **** 
 170:../../os/hal/src/hal_pwm.c **** /**
 171:../../os/hal/src/hal_pwm.c ****  * @brief   Enables a PWM channel.
 172:../../os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 173:../../os/hal/src/hal_pwm.c ****  * @post    The channel is active using the specified configuration.
 174:../../os/hal/src/hal_pwm.c ****  * @note    Depending on the hardware implementation this function has
 175:../../os/hal/src/hal_pwm.c ****  *          effect starting on the next cycle (recommended implementation)
 176:../../os/hal/src/hal_pwm.c ****  *          or immediately (fallback implementation).
 177:../../os/hal/src/hal_pwm.c ****  *
 178:../../os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 179:../../os/hal/src/hal_pwm.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 180:../../os/hal/src/hal_pwm.c ****  * @param[in] width     PWM pulse width as clock pulses number
 181:../../os/hal/src/hal_pwm.c ****  *
 182:../../os/hal/src/hal_pwm.c ****  * @api
 183:../../os/hal/src/hal_pwm.c ****  */
 184:../../os/hal/src/hal_pwm.c **** void pwmEnableChannel(PWMDriver *pwmp,
 185:../../os/hal/src/hal_pwm.c ****                       pwmchannel_t channel,
 186:../../os/hal/src/hal_pwm.c ****                       pwmcnt_t width) {
 345               		.loc 1 186 39 is_stmt 1 view -0
 346               		.cfi_startproc
 347               	/* prologue: function */
 348               	/* frame size = 0 */
 349               	/* stack size = 0 */
 350               	.L__stack_usage = 0
 351               		.loc 1 186 39 is_stmt 0 view .LVU110
 352 0000 FC01      		movw r30,r24
 187:../../os/hal/src/hal_pwm.c **** 
 188:../../os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (channel < pwmp->channels));
 353               		.loc 1 188 3 is_stmt 1 view .LVU111
 354               		.loc 1 188 3 view .LVU112
 355               		.loc 1 188 3 discriminator 7 view .LVU113
 189:../../os/hal/src/hal_pwm.c **** 
 190:../../os/hal/src/hal_pwm.c ****   osalSysLock();
 356               		.loc 1 190 3 view .LVU114
 357               	.LBB96:
 358               	.LBI96:
 573:../../os/hal/osal/rt-nil/osal.h **** 
 359               		.loc 2 573 20 view .LVU115
 575:../../os/hal/osal/rt-nil/osal.h **** }
 360               		.loc 2 575 3 view .LVU116
 361               	.LBB97:
 362               	.LBI97:
 428:../../os/common/ports/AVR/chcore.h **** 
 363               		.loc 3 428 20 view .LVU117
 364               	.LBB98:
 430:../../os/common/ports/AVR/chcore.h **** }
 365               		.loc 3 430 3 view .LVU118
 366               	/* #APP */
 367               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 368 0002 F894      		cli
 369               	 ;  0 "" 2
 370               	/* #NOAPP */
 371               	.LBE98:
 372               	.LBE97:
 575:../../os/hal/osal/rt-nil/osal.h **** }
 373               		.loc 2 575 3 discriminator 1 view .LVU119
 575:../../os/hal/osal/rt-nil/osal.h **** }
 374               		.loc 2 575 14 discriminator 1 view .LVU120
 375               	.LBE96:
 191:../../os/hal/src/hal_pwm.c **** 
 192:../../os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 376               		.loc 1 192 3 view .LVU121
 377               		.loc 1 192 3 view .LVU122
 378               		.loc 1 192 3 discriminator 5 view .LVU123
 193:../../os/hal/src/hal_pwm.c **** 
 194:../../os/hal/src/hal_pwm.c ****   pwmEnableChannelI(pwmp, channel, width);
 379               		.loc 1 194 3 view .LVU124
 380               		.loc 1 194 3 view .LVU125
 381 0004 21E0      		ldi r18,lo8(1)
 382 0006 30E0      		ldi r19,0
 383 0008 062E      		mov r0,r22
 384 000a 00C0      		rjmp 2f
 385               		1:
 386 000c 220F      		lsl r18
 387               		2:
 388 000e 0A94      		dec r0
 389 0010 02F4      		brpl 1b
 390 0012 8581      		ldd r24,Z+5
 391               	.LVL13:
 392               		.loc 1 194 3 is_stmt 0 view .LVU126
 393 0014 822B      		or r24,r18
 394 0016 8583      		std Z+5,r24
 395               		.loc 1 194 3 is_stmt 1 view .LVU127
 396 0018 CF01      		movw r24,r30
 397 001a 0E94 0000 		call pwm_lld_enable_channel
 398               	.LVL14:
 399               		.loc 1 194 3 discriminator 1 view .LVU128
 195:../../os/hal/src/hal_pwm.c **** 
 196:../../os/hal/src/hal_pwm.c ****   osalSysUnlock();
 400               		.loc 1 196 3 view .LVU129
 401               	.LBB99:
 402               	.LBI99:
 584:../../os/hal/osal/rt-nil/osal.h **** 
 403               		.loc 2 584 20 view .LVU130
 404               		.loc 2 586 3 view .LVU131
 405               		.loc 2 586 3 view .LVU132
 406               	.LBB100:
 407               	.LBI100:
 438:../../os/common/ports/AVR/chcore.h **** 
 408               		.loc 3 438 20 view .LVU133
 409               	.LBB101:
 410               		.loc 3 440 3 view .LVU134
 411               	/* #APP */
 412               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 413 001e 7894      		sei
 414               	 ;  0 "" 2
 415               	/* #NOAPP */
 416               	.LBE101:
 417               	.LBE100:
 418               		.loc 2 586 16 discriminator 1 view .LVU135
 419               	/* epilogue start */
 420               	.LBE99:
 197:../../os/hal/src/hal_pwm.c **** }
 421               		.loc 1 197 1 is_stmt 0 view .LVU136
 422 0020 0895      		ret
 423               		.cfi_endproc
 424               	.LFE151:
 426               		.section	.text.pwmDisableChannel,"ax",@progbits
 427               	.global	pwmDisableChannel
 429               	pwmDisableChannel:
 430               	.LVL15:
 431               	.LFB152:
 198:../../os/hal/src/hal_pwm.c **** 
 199:../../os/hal/src/hal_pwm.c **** /**
 200:../../os/hal/src/hal_pwm.c ****  * @brief   Disables a PWM channel and its notification.
 201:../../os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 202:../../os/hal/src/hal_pwm.c ****  * @post    The channel is disabled and its output line returned to the
 203:../../os/hal/src/hal_pwm.c ****  *          idle state.
 204:../../os/hal/src/hal_pwm.c ****  * @note    Depending on the hardware implementation this function has
 205:../../os/hal/src/hal_pwm.c ****  *          effect starting on the next cycle (recommended implementation)
 206:../../os/hal/src/hal_pwm.c ****  *          or immediately (fallback implementation).
 207:../../os/hal/src/hal_pwm.c ****  *
 208:../../os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 209:../../os/hal/src/hal_pwm.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 210:../../os/hal/src/hal_pwm.c ****  *
 211:../../os/hal/src/hal_pwm.c ****  * @api
 212:../../os/hal/src/hal_pwm.c ****  */
 213:../../os/hal/src/hal_pwm.c **** void pwmDisableChannel(PWMDriver *pwmp, pwmchannel_t channel) {
 432               		.loc 1 213 63 is_stmt 1 view -0
 433               		.cfi_startproc
 434               	/* prologue: function */
 435               	/* frame size = 0 */
 436               	/* stack size = 0 */
 437               	.L__stack_usage = 0
 438               		.loc 1 213 63 is_stmt 0 view .LVU138
 439 0000 FC01      		movw r30,r24
 214:../../os/hal/src/hal_pwm.c **** 
 215:../../os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (channel < pwmp->channels));
 440               		.loc 1 215 3 is_stmt 1 view .LVU139
 441               		.loc 1 215 3 view .LVU140
 442               		.loc 1 215 3 discriminator 7 view .LVU141
 216:../../os/hal/src/hal_pwm.c **** 
 217:../../os/hal/src/hal_pwm.c ****   osalSysLock();
 443               		.loc 1 217 3 view .LVU142
 444               	.LBB102:
 445               	.LBI102:
 573:../../os/hal/osal/rt-nil/osal.h **** 
 446               		.loc 2 573 20 view .LVU143
 575:../../os/hal/osal/rt-nil/osal.h **** }
 447               		.loc 2 575 3 view .LVU144
 448               	.LBB103:
 449               	.LBI103:
 428:../../os/common/ports/AVR/chcore.h **** 
 450               		.loc 3 428 20 view .LVU145
 451               	.LBB104:
 430:../../os/common/ports/AVR/chcore.h **** }
 452               		.loc 3 430 3 view .LVU146
 453               	/* #APP */
 454               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 455 0002 F894      		cli
 456               	 ;  0 "" 2
 457               	/* #NOAPP */
 458               	.LBE104:
 459               	.LBE103:
 575:../../os/hal/osal/rt-nil/osal.h **** }
 460               		.loc 2 575 3 discriminator 1 view .LVU147
 575:../../os/hal/osal/rt-nil/osal.h **** }
 461               		.loc 2 575 14 discriminator 1 view .LVU148
 462               	.LBE102:
 218:../../os/hal/src/hal_pwm.c **** 
 219:../../os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 463               		.loc 1 219 3 view .LVU149
 464               		.loc 1 219 3 view .LVU150
 465               		.loc 1 219 3 discriminator 5 view .LVU151
 220:../../os/hal/src/hal_pwm.c **** 
 221:../../os/hal/src/hal_pwm.c ****   pwmDisableChannelI(pwmp, channel);
 466               		.loc 1 221 3 view .LVU152
 467               		.loc 1 221 3 view .LVU153
 468 0004 81E0      		ldi r24,lo8(1)
 469 0006 90E0      		ldi r25,0
 470               	.LVL16:
 471               		.loc 1 221 3 is_stmt 0 view .LVU154
 472 0008 062E      		mov r0,r22
 473 000a 00C0      		rjmp 2f
 474               		1:
 475 000c 880F      		lsl r24
 476               		2:
 477 000e 0A94      		dec r0
 478 0010 02F4      		brpl 1b
 479 0012 8095      		com r24
 480 0014 9581      		ldd r25,Z+5
 481 0016 8923      		and r24,r25
 482 0018 8583      		std Z+5,r24
 483               		.loc 1 221 3 is_stmt 1 view .LVU155
 484 001a CF01      		movw r24,r30
 485 001c 0E94 0000 		call pwm_lld_disable_channel
 486               	.LVL17:
 487               		.loc 1 221 3 discriminator 1 view .LVU156
 222:../../os/hal/src/hal_pwm.c **** 
 223:../../os/hal/src/hal_pwm.c ****   osalSysUnlock();
 488               		.loc 1 223 3 view .LVU157
 489               	.LBB105:
 490               	.LBI105:
 584:../../os/hal/osal/rt-nil/osal.h **** 
 491               		.loc 2 584 20 view .LVU158
 492               		.loc 2 586 3 view .LVU159
 493               		.loc 2 586 3 view .LVU160
 494               	.LBB106:
 495               	.LBI106:
 438:../../os/common/ports/AVR/chcore.h **** 
 496               		.loc 3 438 20 view .LVU161
 497               	.LBB107:
 498               		.loc 3 440 3 view .LVU162
 499               	/* #APP */
 500               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 501 0020 7894      		sei
 502               	 ;  0 "" 2
 503               	/* #NOAPP */
 504               	.LBE107:
 505               	.LBE106:
 506               		.loc 2 586 16 discriminator 1 view .LVU163
 507               	/* epilogue start */
 508               	.LBE105:
 224:../../os/hal/src/hal_pwm.c **** }
 509               		.loc 1 224 1 is_stmt 0 view .LVU164
 510 0022 0895      		ret
 511               		.cfi_endproc
 512               	.LFE152:
 514               		.section	.text.pwmEnablePeriodicNotification,"ax",@progbits
 515               	.global	pwmEnablePeriodicNotification
 517               	pwmEnablePeriodicNotification:
 518               	.LVL18:
 519               	.LFB153:
 225:../../os/hal/src/hal_pwm.c **** 
 226:../../os/hal/src/hal_pwm.c **** /**
 227:../../os/hal/src/hal_pwm.c ****  * @brief   Enables the periodic activation edge notification.
 228:../../os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 229:../../os/hal/src/hal_pwm.c ****  * @note    If the notification is already enabled then the call has no effect.
 230:../../os/hal/src/hal_pwm.c ****  *
 231:../../os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 232:../../os/hal/src/hal_pwm.c ****  *
 233:../../os/hal/src/hal_pwm.c ****  * @api
 234:../../os/hal/src/hal_pwm.c ****  */
 235:../../os/hal/src/hal_pwm.c **** void pwmEnablePeriodicNotification(PWMDriver *pwmp) {
 520               		.loc 1 235 53 is_stmt 1 view -0
 521               		.cfi_startproc
 522               	/* prologue: function */
 523               	/* frame size = 0 */
 524               	/* stack size = 0 */
 525               	.L__stack_usage = 0
 236:../../os/hal/src/hal_pwm.c **** 
 237:../../os/hal/src/hal_pwm.c ****   osalDbgCheck(pwmp != NULL);
 526               		.loc 1 237 3 view .LVU166
 527               		.loc 1 237 3 view .LVU167
 528               		.loc 1 237 3 discriminator 5 view .LVU168
 238:../../os/hal/src/hal_pwm.c **** 
 239:../../os/hal/src/hal_pwm.c ****   osalSysLock();
 529               		.loc 1 239 3 view .LVU169
 530               	.LBB108:
 531               	.LBI108:
 573:../../os/hal/osal/rt-nil/osal.h **** 
 532               		.loc 2 573 20 view .LVU170
 575:../../os/hal/osal/rt-nil/osal.h **** }
 533               		.loc 2 575 3 view .LVU171
 534               	.LBB109:
 535               	.LBI109:
 428:../../os/common/ports/AVR/chcore.h **** 
 536               		.loc 3 428 20 view .LVU172
 537               	.LBB110:
 430:../../os/common/ports/AVR/chcore.h **** }
 538               		.loc 3 430 3 view .LVU173
 539               	/* #APP */
 540               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 541 0000 F894      		cli
 542               	 ;  0 "" 2
 543               	/* #NOAPP */
 544               	.LBE110:
 545               	.LBE109:
 575:../../os/hal/osal/rt-nil/osal.h **** }
 546               		.loc 2 575 3 discriminator 1 view .LVU174
 575:../../os/hal/osal/rt-nil/osal.h **** }
 547               		.loc 2 575 14 discriminator 1 view .LVU175
 548               	.LBE108:
 240:../../os/hal/src/hal_pwm.c **** 
 241:../../os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 549               		.loc 1 241 3 view .LVU176
 550               		.loc 1 241 3 view .LVU177
 551               		.loc 1 241 3 discriminator 5 view .LVU178
 242:../../os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->config->callback != NULL, "undefined periodic callback");
 552               		.loc 1 242 3 view .LVU179
 553               		.loc 1 242 3 view .LVU180
 554               		.loc 1 242 3 discriminator 5 view .LVU181
 243:../../os/hal/src/hal_pwm.c **** 
 244:../../os/hal/src/hal_pwm.c ****   pwmEnablePeriodicNotificationI(pwmp);
 555               		.loc 1 244 3 view .LVU182
 556 0002 0E94 0000 		call pwm_lld_enable_periodic_notification
 557               	.LVL19:
 245:../../os/hal/src/hal_pwm.c **** 
 246:../../os/hal/src/hal_pwm.c ****   osalSysUnlock();
 558               		.loc 1 246 3 view .LVU183
 559               	.LBB111:
 560               	.LBI111:
 584:../../os/hal/osal/rt-nil/osal.h **** 
 561               		.loc 2 584 20 view .LVU184
 562               		.loc 2 586 3 view .LVU185
 563               		.loc 2 586 3 view .LVU186
 564               	.LBB112:
 565               	.LBI112:
 438:../../os/common/ports/AVR/chcore.h **** 
 566               		.loc 3 438 20 view .LVU187
 567               	.LBB113:
 568               		.loc 3 440 3 view .LVU188
 569               	/* #APP */
 570               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 571 0006 7894      		sei
 572               	 ;  0 "" 2
 573               	/* #NOAPP */
 574               	.LBE113:
 575               	.LBE112:
 576               		.loc 2 586 16 discriminator 1 view .LVU189
 577               	/* epilogue start */
 578               	.LBE111:
 247:../../os/hal/src/hal_pwm.c **** }
 579               		.loc 1 247 1 is_stmt 0 view .LVU190
 580 0008 0895      		ret
 581               		.cfi_endproc
 582               	.LFE153:
 584               		.section	.text.pwmDisablePeriodicNotification,"ax",@progbits
 585               	.global	pwmDisablePeriodicNotification
 587               	pwmDisablePeriodicNotification:
 588               	.LVL20:
 589               	.LFB154:
 248:../../os/hal/src/hal_pwm.c **** 
 249:../../os/hal/src/hal_pwm.c **** /**
 250:../../os/hal/src/hal_pwm.c ****  * @brief   Disables the periodic activation edge notification.
 251:../../os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 252:../../os/hal/src/hal_pwm.c ****  * @note    If the notification is already disabled then the call has no effect.
 253:../../os/hal/src/hal_pwm.c ****  *
 254:../../os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 255:../../os/hal/src/hal_pwm.c ****  *
 256:../../os/hal/src/hal_pwm.c ****  * @api
 257:../../os/hal/src/hal_pwm.c ****  */
 258:../../os/hal/src/hal_pwm.c **** void pwmDisablePeriodicNotification(PWMDriver *pwmp) {
 590               		.loc 1 258 54 is_stmt 1 view -0
 591               		.cfi_startproc
 592               	/* prologue: function */
 593               	/* frame size = 0 */
 594               	/* stack size = 0 */
 595               	.L__stack_usage = 0
 259:../../os/hal/src/hal_pwm.c **** 
 260:../../os/hal/src/hal_pwm.c ****   osalDbgCheck(pwmp != NULL);
 596               		.loc 1 260 3 view .LVU192
 597               		.loc 1 260 3 view .LVU193
 598               		.loc 1 260 3 discriminator 5 view .LVU194
 261:../../os/hal/src/hal_pwm.c **** 
 262:../../os/hal/src/hal_pwm.c ****   osalSysLock();
 599               		.loc 1 262 3 view .LVU195
 600               	.LBB114:
 601               	.LBI114:
 573:../../os/hal/osal/rt-nil/osal.h **** 
 602               		.loc 2 573 20 view .LVU196
 575:../../os/hal/osal/rt-nil/osal.h **** }
 603               		.loc 2 575 3 view .LVU197
 604               	.LBB115:
 605               	.LBI115:
 428:../../os/common/ports/AVR/chcore.h **** 
 606               		.loc 3 428 20 view .LVU198
 607               	.LBB116:
 430:../../os/common/ports/AVR/chcore.h **** }
 608               		.loc 3 430 3 view .LVU199
 609               	/* #APP */
 610               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 611 0000 F894      		cli
 612               	 ;  0 "" 2
 613               	/* #NOAPP */
 614               	.LBE116:
 615               	.LBE115:
 575:../../os/hal/osal/rt-nil/osal.h **** }
 616               		.loc 2 575 3 discriminator 1 view .LVU200
 575:../../os/hal/osal/rt-nil/osal.h **** }
 617               		.loc 2 575 14 discriminator 1 view .LVU201
 618               	.LBE114:
 263:../../os/hal/src/hal_pwm.c **** 
 264:../../os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 619               		.loc 1 264 3 view .LVU202
 620               		.loc 1 264 3 view .LVU203
 621               		.loc 1 264 3 discriminator 5 view .LVU204
 265:../../os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->config->callback != NULL, "undefined periodic callback");
 622               		.loc 1 265 3 view .LVU205
 623               		.loc 1 265 3 view .LVU206
 624               		.loc 1 265 3 discriminator 5 view .LVU207
 266:../../os/hal/src/hal_pwm.c **** 
 267:../../os/hal/src/hal_pwm.c ****   pwmDisablePeriodicNotificationI(pwmp);
 625               		.loc 1 267 3 view .LVU208
 626 0002 0E94 0000 		call pwm_lld_disable_periodic_notification
 627               	.LVL21:
 268:../../os/hal/src/hal_pwm.c **** 
 269:../../os/hal/src/hal_pwm.c ****   osalSysUnlock();
 628               		.loc 1 269 3 view .LVU209
 629               	.LBB117:
 630               	.LBI117:
 584:../../os/hal/osal/rt-nil/osal.h **** 
 631               		.loc 2 584 20 view .LVU210
 632               		.loc 2 586 3 view .LVU211
 633               		.loc 2 586 3 view .LVU212
 634               	.LBB118:
 635               	.LBI118:
 438:../../os/common/ports/AVR/chcore.h **** 
 636               		.loc 3 438 20 view .LVU213
 637               	.LBB119:
 638               		.loc 3 440 3 view .LVU214
 639               	/* #APP */
 640               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 641 0006 7894      		sei
 642               	 ;  0 "" 2
 643               	/* #NOAPP */
 644               	.LBE119:
 645               	.LBE118:
 646               		.loc 2 586 16 discriminator 1 view .LVU215
 647               	/* epilogue start */
 648               	.LBE117:
 270:../../os/hal/src/hal_pwm.c **** }
 649               		.loc 1 270 1 is_stmt 0 view .LVU216
 650 0008 0895      		ret
 651               		.cfi_endproc
 652               	.LFE154:
 654               		.section	.text.pwmEnableChannelNotification,"ax",@progbits
 655               	.global	pwmEnableChannelNotification
 657               	pwmEnableChannelNotification:
 658               	.LVL22:
 659               	.LFB155:
 271:../../os/hal/src/hal_pwm.c **** 
 272:../../os/hal/src/hal_pwm.c **** /**
 273:../../os/hal/src/hal_pwm.c ****  * @brief   Enables a channel de-activation edge notification.
 274:../../os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 275:../../os/hal/src/hal_pwm.c ****  * @pre     The channel must have been activated using @p pwmEnableChannel().
 276:../../os/hal/src/hal_pwm.c ****  * @note    If the notification is already enabled then the call has no effect.
 277:../../os/hal/src/hal_pwm.c ****  *
 278:../../os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 279:../../os/hal/src/hal_pwm.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 280:../../os/hal/src/hal_pwm.c ****  *
 281:../../os/hal/src/hal_pwm.c ****  * @api
 282:../../os/hal/src/hal_pwm.c ****  */
 283:../../os/hal/src/hal_pwm.c **** void pwmEnableChannelNotification(PWMDriver *pwmp, pwmchannel_t channel) {
 660               		.loc 1 283 74 is_stmt 1 view -0
 661               		.cfi_startproc
 662               	/* prologue: function */
 663               	/* frame size = 0 */
 664               	/* stack size = 0 */
 665               	.L__stack_usage = 0
 284:../../os/hal/src/hal_pwm.c **** 
 285:../../os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (channel < pwmp->channels));
 666               		.loc 1 285 3 view .LVU218
 667               		.loc 1 285 3 view .LVU219
 668               		.loc 1 285 3 discriminator 7 view .LVU220
 286:../../os/hal/src/hal_pwm.c **** 
 287:../../os/hal/src/hal_pwm.c ****   osalSysLock();
 669               		.loc 1 287 3 view .LVU221
 670               	.LBB120:
 671               	.LBI120:
 573:../../os/hal/osal/rt-nil/osal.h **** 
 672               		.loc 2 573 20 view .LVU222
 575:../../os/hal/osal/rt-nil/osal.h **** }
 673               		.loc 2 575 3 view .LVU223
 674               	.LBB121:
 675               	.LBI121:
 428:../../os/common/ports/AVR/chcore.h **** 
 676               		.loc 3 428 20 view .LVU224
 677               	.LBB122:
 430:../../os/common/ports/AVR/chcore.h **** }
 678               		.loc 3 430 3 view .LVU225
 679               	/* #APP */
 680               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 681 0000 F894      		cli
 682               	 ;  0 "" 2
 683               	/* #NOAPP */
 684               	.LBE122:
 685               	.LBE121:
 575:../../os/hal/osal/rt-nil/osal.h **** }
 686               		.loc 2 575 3 discriminator 1 view .LVU226
 575:../../os/hal/osal/rt-nil/osal.h **** }
 687               		.loc 2 575 14 discriminator 1 view .LVU227
 688               	.LBE120:
 288:../../os/hal/src/hal_pwm.c **** 
 289:../../os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 689               		.loc 1 289 3 view .LVU228
 690               		.loc 1 289 3 view .LVU229
 691               		.loc 1 289 3 discriminator 5 view .LVU230
 290:../../os/hal/src/hal_pwm.c ****   osalDbgAssert((pwmp->enabled & ((pwmchnmsk_t)1U << (pwmchnmsk_t)channel)) != 0U,
 692               		.loc 1 290 3 view .LVU231
 693               		.loc 1 290 3 view .LVU232
 694               		.loc 1 290 3 discriminator 5 view .LVU233
 291:../../os/hal/src/hal_pwm.c ****                 "channel not enabled");
 292:../../os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->config->channels[channel].callback != NULL,
 695               		.loc 1 292 3 view .LVU234
 696               		.loc 1 292 3 view .LVU235
 697               		.loc 1 292 3 discriminator 5 view .LVU236
 293:../../os/hal/src/hal_pwm.c ****                 "undefined channel callback");
 294:../../os/hal/src/hal_pwm.c **** 
 295:../../os/hal/src/hal_pwm.c ****   pwmEnableChannelNotificationI(pwmp, channel);
 698               		.loc 1 295 3 view .LVU237
 699 0002 0E94 0000 		call pwm_lld_enable_channel_notification
 700               	.LVL23:
 296:../../os/hal/src/hal_pwm.c **** 
 297:../../os/hal/src/hal_pwm.c ****   osalSysUnlock();
 701               		.loc 1 297 3 view .LVU238
 702               	.LBB123:
 703               	.LBI123:
 584:../../os/hal/osal/rt-nil/osal.h **** 
 704               		.loc 2 584 20 view .LVU239
 705               		.loc 2 586 3 view .LVU240
 706               		.loc 2 586 3 view .LVU241
 707               	.LBB124:
 708               	.LBI124:
 438:../../os/common/ports/AVR/chcore.h **** 
 709               		.loc 3 438 20 view .LVU242
 710               	.LBB125:
 711               		.loc 3 440 3 view .LVU243
 712               	/* #APP */
 713               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 714 0006 7894      		sei
 715               	 ;  0 "" 2
 716               	/* #NOAPP */
 717               	.LBE125:
 718               	.LBE124:
 719               		.loc 2 586 16 discriminator 1 view .LVU244
 720               	/* epilogue start */
 721               	.LBE123:
 298:../../os/hal/src/hal_pwm.c **** }
 722               		.loc 1 298 1 is_stmt 0 view .LVU245
 723 0008 0895      		ret
 724               		.cfi_endproc
 725               	.LFE155:
 727               		.section	.text.pwmDisableChannelNotification,"ax",@progbits
 728               	.global	pwmDisableChannelNotification
 730               	pwmDisableChannelNotification:
 731               	.LVL24:
 732               	.LFB156:
 299:../../os/hal/src/hal_pwm.c **** 
 300:../../os/hal/src/hal_pwm.c **** /**
 301:../../os/hal/src/hal_pwm.c ****  * @brief   Disables a channel de-activation edge notification.
 302:../../os/hal/src/hal_pwm.c ****  * @pre     The PWM unit must have been activated using @p pwmStart().
 303:../../os/hal/src/hal_pwm.c ****  * @pre     The channel must have been activated using @p pwmEnableChannel().
 304:../../os/hal/src/hal_pwm.c ****  * @note    If the notification is already disabled then the call has no effect.
 305:../../os/hal/src/hal_pwm.c ****  *
 306:../../os/hal/src/hal_pwm.c ****  * @param[in] pwmp      pointer to a @p PWMDriver object
 307:../../os/hal/src/hal_pwm.c ****  * @param[in] channel   PWM channel identifier (0...channels-1)
 308:../../os/hal/src/hal_pwm.c ****  *
 309:../../os/hal/src/hal_pwm.c ****  * @api
 310:../../os/hal/src/hal_pwm.c ****  */
 311:../../os/hal/src/hal_pwm.c **** void pwmDisableChannelNotification(PWMDriver *pwmp, pwmchannel_t channel) {
 733               		.loc 1 311 75 is_stmt 1 view -0
 734               		.cfi_startproc
 735               	/* prologue: function */
 736               	/* frame size = 0 */
 737               	/* stack size = 0 */
 738               	.L__stack_usage = 0
 312:../../os/hal/src/hal_pwm.c **** 
 313:../../os/hal/src/hal_pwm.c ****   osalDbgCheck((pwmp != NULL) && (channel < pwmp->channels));
 739               		.loc 1 313 3 view .LVU247
 740               		.loc 1 313 3 view .LVU248
 741               		.loc 1 313 3 discriminator 7 view .LVU249
 314:../../os/hal/src/hal_pwm.c **** 
 315:../../os/hal/src/hal_pwm.c ****   osalSysLock();
 742               		.loc 1 315 3 view .LVU250
 743               	.LBB126:
 744               	.LBI126:
 573:../../os/hal/osal/rt-nil/osal.h **** 
 745               		.loc 2 573 20 view .LVU251
 575:../../os/hal/osal/rt-nil/osal.h **** }
 746               		.loc 2 575 3 view .LVU252
 747               	.LBB127:
 748               	.LBI127:
 428:../../os/common/ports/AVR/chcore.h **** 
 749               		.loc 3 428 20 view .LVU253
 750               	.LBB128:
 430:../../os/common/ports/AVR/chcore.h **** }
 751               		.loc 3 430 3 view .LVU254
 752               	/* #APP */
 753               	 ;  430 "../../os/common/ports/AVR/chcore.h" 1
 754 0000 F894      		cli
 755               	 ;  0 "" 2
 756               	/* #NOAPP */
 757               	.LBE128:
 758               	.LBE127:
 575:../../os/hal/osal/rt-nil/osal.h **** }
 759               		.loc 2 575 3 discriminator 1 view .LVU255
 575:../../os/hal/osal/rt-nil/osal.h **** }
 760               		.loc 2 575 14 discriminator 1 view .LVU256
 761               	.LBE126:
 316:../../os/hal/src/hal_pwm.c **** 
 317:../../os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->state == PWM_READY, "not ready");
 762               		.loc 1 317 3 view .LVU257
 763               		.loc 1 317 3 view .LVU258
 764               		.loc 1 317 3 discriminator 5 view .LVU259
 318:../../os/hal/src/hal_pwm.c ****   osalDbgAssert((pwmp->enabled & ((pwmchnmsk_t)1U << (pwmchnmsk_t)channel)) != 0U,
 765               		.loc 1 318 3 view .LVU260
 766               		.loc 1 318 3 view .LVU261
 767               		.loc 1 318 3 discriminator 5 view .LVU262
 319:../../os/hal/src/hal_pwm.c ****                 "channel not enabled");
 320:../../os/hal/src/hal_pwm.c ****   osalDbgAssert(pwmp->config->channels[channel].callback != NULL,
 768               		.loc 1 320 3 view .LVU263
 769               		.loc 1 320 3 view .LVU264
 770               		.loc 1 320 3 discriminator 5 view .LVU265
 321:../../os/hal/src/hal_pwm.c ****                 "undefined channel callback");
 322:../../os/hal/src/hal_pwm.c **** 
 323:../../os/hal/src/hal_pwm.c ****   pwmDisableChannelNotificationI(pwmp, channel);
 771               		.loc 1 323 3 view .LVU266
 772 0002 0E94 0000 		call pwm_lld_disable_channel_notification
 773               	.LVL25:
 324:../../os/hal/src/hal_pwm.c **** 
 325:../../os/hal/src/hal_pwm.c ****   osalSysUnlock();
 774               		.loc 1 325 3 view .LVU267
 775               	.LBB129:
 776               	.LBI129:
 584:../../os/hal/osal/rt-nil/osal.h **** 
 777               		.loc 2 584 20 view .LVU268
 778               		.loc 2 586 3 view .LVU269
 779               		.loc 2 586 3 view .LVU270
 780               	.LBB130:
 781               	.LBI130:
 438:../../os/common/ports/AVR/chcore.h **** 
 782               		.loc 3 438 20 view .LVU271
 783               	.LBB131:
 784               		.loc 3 440 3 view .LVU272
 785               	/* #APP */
 786               	 ;  440 "../../os/common/ports/AVR/chcore.h" 1
 787 0006 7894      		sei
 788               	 ;  0 "" 2
 789               	/* #NOAPP */
 790               	.LBE131:
 791               	.LBE130:
 792               		.loc 2 586 16 discriminator 1 view .LVU273
 793               	/* epilogue start */
 794               	.LBE129:
 326:../../os/hal/src/hal_pwm.c **** }
 795               		.loc 1 326 1 is_stmt 0 view .LVU274
 796 0008 0895      		ret
 797               		.cfi_endproc
 798               	.LFE156:
 800               		.text
 801               	.Letext0:
 802               		.file 4 "/usr/avr/include/stdint.h"
 803               		.file 5 "../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 804               		.file 6 "../../os/hal/include/hal_pwm.h"
 805               		.file 7 "../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hal_pwm.c
     /tmp/ccfyeRbD.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccfyeRbD.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccfyeRbD.s:4      *ABS*:0000003f __SREG__
     /tmp/ccfyeRbD.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccfyeRbD.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccfyeRbD.s:14     .text.pwmInit:00000000 pwmInit
     /tmp/ccfyeRbD.s:16     .text.pwmInit:00000000 .Loc.0
     /tmp/ccfyeRbD.s:17     .text.pwmInit:00000000 L0
     /tmp/ccfyeRbD.s:22     .text.pwmInit:00000000 .Loc.1
     /tmp/ccfyeRbD.s:25     .text.pwmInit:00000004 L0
     /tmp/ccfyeRbD.s:31     .text.pwmObjectInit:00000000 pwmObjectInit
     /tmp/ccfyeRbD.s:34     .text.pwmObjectInit:00000000 .Loc.2
     /tmp/ccfyeRbD.s:35     .text.pwmObjectInit:00000000 L0
     /tmp/ccfyeRbD.s:40     .text.pwmObjectInit:00000000 .Loc.3
     /tmp/ccfyeRbD.s:42     .text.pwmObjectInit:00000002 .Loc.4
     /tmp/ccfyeRbD.s:43     .text.pwmObjectInit:00000002 .Loc.5
     /tmp/ccfyeRbD.s:46     .text.pwmObjectInit:00000004 .Loc.6
     /tmp/ccfyeRbD.s:48     .text.pwmObjectInit:00000006 .Loc.7
     /tmp/ccfyeRbD.s:49     .text.pwmObjectInit:00000006 .Loc.8
     /tmp/ccfyeRbD.s:52     .text.pwmObjectInit:0000000a .Loc.9
     /tmp/ccfyeRbD.s:53     .text.pwmObjectInit:0000000a .Loc.10
     /tmp/ccfyeRbD.s:55     .text.pwmObjectInit:0000000c .Loc.11
     /tmp/ccfyeRbD.s:56     .text.pwmObjectInit:0000000c .Loc.12
     /tmp/ccfyeRbD.s:59     .text.pwmObjectInit:0000000e .Loc.13
     /tmp/ccfyeRbD.s:61     .text.pwmObjectInit:00000010 L0
     /tmp/ccfyeRbD.s:67     .text.pwmStart:00000000 pwmStart
     /tmp/ccfyeRbD.s:70     .text.pwmStart:00000000 .Loc.14
     /tmp/ccfyeRbD.s:71     .text.pwmStart:00000000 L0
     /tmp/ccfyeRbD.s:72     .text.pwmStart:00000000 .Loc.15
     /tmp/ccfyeRbD.s:87     .text.pwmStart:00000008 .Loc.16
     /tmp/ccfyeRbD.s:88     .text.pwmStart:00000008 .Loc.17
     /tmp/ccfyeRbD.s:89     .text.pwmStart:00000008 .Loc.18
     /tmp/ccfyeRbD.s:90     .text.pwmStart:00000008 .Loc.19
     /tmp/ccfyeRbD.s:91     .text.pwmStart:00000008 .Loc.20
     /tmp/ccfyeRbD.s:95     .text.pwmStart:00000008 .Loc.21
     /tmp/ccfyeRbD.s:96     .text.pwmStart:00000008 .Loc.22
     /tmp/ccfyeRbD.s:100    .text.pwmStart:00000008 .Loc.23
     /tmp/ccfyeRbD.s:102    .text.pwmStart:00000008 .Loc.24
     /tmp/ccfyeRbD.s:110    .text.pwmStart:0000000a .Loc.25
     /tmp/ccfyeRbD.s:111    .text.pwmStart:0000000a .Loc.26
     /tmp/ccfyeRbD.s:113    .text.pwmStart:0000000a .Loc.27
     /tmp/ccfyeRbD.s:114    .text.pwmStart:0000000a .Loc.28
     /tmp/ccfyeRbD.s:115    .text.pwmStart:0000000a .Loc.29
     /tmp/ccfyeRbD.s:116    .text.pwmStart:0000000a .Loc.30
     /tmp/ccfyeRbD.s:117    .text.pwmStart:0000000a .Loc.31
     /tmp/ccfyeRbD.s:120    .text.pwmStart:0000000e .Loc.32
     /tmp/ccfyeRbD.s:121    .text.pwmStart:0000000e .Loc.33
     /tmp/ccfyeRbD.s:125    .text.pwmStart:00000012 .Loc.34
     /tmp/ccfyeRbD.s:128    .text.pwmStart:00000016 .Loc.35
     /tmp/ccfyeRbD.s:129    .text.pwmStart:00000016 .Loc.36
     /tmp/ccfyeRbD.s:131    .text.pwmStart:00000018 .Loc.37
     /tmp/ccfyeRbD.s:135    .text.pwmStart:0000001e .Loc.38
     /tmp/ccfyeRbD.s:136    .text.pwmStart:0000001e .Loc.39
     /tmp/ccfyeRbD.s:137    .text.pwmStart:0000001e .Loc.40
     /tmp/ccfyeRbD.s:138    .text.pwmStart:0000001e .Loc.41
     /tmp/ccfyeRbD.s:141    .text.pwmStart:00000022 .Loc.42
     /tmp/ccfyeRbD.s:144    .text.pwmStart:00000022 .Loc.43
     /tmp/ccfyeRbD.s:145    .text.pwmStart:00000022 .Loc.44
     /tmp/ccfyeRbD.s:146    .text.pwmStart:00000022 .Loc.45
     /tmp/ccfyeRbD.s:149    .text.pwmStart:00000022 .Loc.46
     /tmp/ccfyeRbD.s:151    .text.pwmStart:00000022 .Loc.47
     /tmp/ccfyeRbD.s:159    .text.pwmStart:00000024 .Loc.48
     /tmp/ccfyeRbD.s:161    .text.pwmStart:00000024 .Loc.49
     /tmp/ccfyeRbD.s:162    .text.pwmStart:00000024 .Loc.50
     /tmp/ccfyeRbD.s:169    .text.pwmStart:0000002c .Loc.51
     /tmp/ccfyeRbD.s:171    .text.pwmStart:0000002e L0
     /tmp/ccfyeRbD.s:177    .text.pwmStop:00000000 pwmStop
     /tmp/ccfyeRbD.s:180    .text.pwmStop:00000000 .Loc.52
     /tmp/ccfyeRbD.s:181    .text.pwmStop:00000000 L0
     /tmp/ccfyeRbD.s:182    .text.pwmStop:00000000 .Loc.53
     /tmp/ccfyeRbD.s:196    .text.pwmStop:00000006 .Loc.54
     /tmp/ccfyeRbD.s:197    .text.pwmStop:00000006 .Loc.55
     /tmp/ccfyeRbD.s:198    .text.pwmStop:00000006 .Loc.56
     /tmp/ccfyeRbD.s:199    .text.pwmStop:00000006 .Loc.57
     /tmp/ccfyeRbD.s:202    .text.pwmStop:00000006 .Loc.58
     /tmp/ccfyeRbD.s:203    .text.pwmStop:00000006 .Loc.59
     /tmp/ccfyeRbD.s:206    .text.pwmStop:00000006 .Loc.60
     /tmp/ccfyeRbD.s:208    .text.pwmStop:00000006 .Loc.61
     /tmp/ccfyeRbD.s:216    .text.pwmStop:00000008 .Loc.62
     /tmp/ccfyeRbD.s:217    .text.pwmStop:00000008 .Loc.63
     /tmp/ccfyeRbD.s:219    .text.pwmStop:00000008 .Loc.64
     /tmp/ccfyeRbD.s:220    .text.pwmStop:00000008 .Loc.65
     /tmp/ccfyeRbD.s:221    .text.pwmStop:00000008 .Loc.66
     /tmp/ccfyeRbD.s:222    .text.pwmStop:00000008 .Loc.67
     /tmp/ccfyeRbD.s:225    .text.pwmStop:0000000c .Loc.68
     /tmp/ccfyeRbD.s:226    .text.pwmStop:0000000c .Loc.69
     /tmp/ccfyeRbD.s:228    .text.pwmStop:0000000e .Loc.70
     /tmp/ccfyeRbD.s:229    .text.pwmStop:0000000e .Loc.71
     /tmp/ccfyeRbD.s:232    .text.pwmStop:00000012 .Loc.72
     /tmp/ccfyeRbD.s:233    .text.pwmStop:00000012 .Loc.73
     /tmp/ccfyeRbD.s:236    .text.pwmStop:00000016 .Loc.74
     /tmp/ccfyeRbD.s:239    .text.pwmStop:00000016 .Loc.75
     /tmp/ccfyeRbD.s:240    .text.pwmStop:00000016 .Loc.76
     /tmp/ccfyeRbD.s:241    .text.pwmStop:00000016 .Loc.77
     /tmp/ccfyeRbD.s:244    .text.pwmStop:00000016 .Loc.78
     /tmp/ccfyeRbD.s:246    .text.pwmStop:00000016 .Loc.79
     /tmp/ccfyeRbD.s:254    .text.pwmStop:00000018 .Loc.80
     /tmp/ccfyeRbD.s:257    .text.pwmStop:00000018 .Loc.81
     /tmp/ccfyeRbD.s:261    .text.pwmStop:0000001c .Loc.82
     /tmp/ccfyeRbD.s:263    .text.pwmStop:0000001e L0
     /tmp/ccfyeRbD.s:269    .text.pwmChangePeriod:00000000 pwmChangePeriod
     /tmp/ccfyeRbD.s:272    .text.pwmChangePeriod:00000000 .Loc.83
     /tmp/ccfyeRbD.s:273    .text.pwmChangePeriod:00000000 L0
     /tmp/ccfyeRbD.s:278    .text.pwmChangePeriod:00000000 .Loc.84
     /tmp/ccfyeRbD.s:280    .text.pwmChangePeriod:00000002 .Loc.85
     /tmp/ccfyeRbD.s:281    .text.pwmChangePeriod:00000002 .Loc.86
     /tmp/ccfyeRbD.s:282    .text.pwmChangePeriod:00000002 .Loc.87
     /tmp/ccfyeRbD.s:283    .text.pwmChangePeriod:00000002 .Loc.88
     /tmp/ccfyeRbD.s:286    .text.pwmChangePeriod:00000002 .Loc.89
     /tmp/ccfyeRbD.s:287    .text.pwmChangePeriod:00000002 .Loc.90
     /tmp/ccfyeRbD.s:290    .text.pwmChangePeriod:00000002 .Loc.91
     /tmp/ccfyeRbD.s:292    .text.pwmChangePeriod:00000002 .Loc.92
     /tmp/ccfyeRbD.s:300    .text.pwmChangePeriod:00000004 .Loc.93
     /tmp/ccfyeRbD.s:301    .text.pwmChangePeriod:00000004 .Loc.94
     /tmp/ccfyeRbD.s:303    .text.pwmChangePeriod:00000004 .Loc.95
     /tmp/ccfyeRbD.s:304    .text.pwmChangePeriod:00000004 .Loc.96
     /tmp/ccfyeRbD.s:305    .text.pwmChangePeriod:00000004 .Loc.97
     /tmp/ccfyeRbD.s:306    .text.pwmChangePeriod:00000004 .Loc.98
     /tmp/ccfyeRbD.s:309    .text.pwmChangePeriod:00000008 .Loc.99
     /tmp/ccfyeRbD.s:312    .text.pwmChangePeriod:0000000c .Loc.100
     /tmp/ccfyeRbD.s:313    .text.pwmChangePeriod:0000000c .Loc.101
     /tmp/ccfyeRbD.s:316    .text.pwmChangePeriod:0000000c .Loc.102
     /tmp/ccfyeRbD.s:317    .text.pwmChangePeriod:0000000c .Loc.103
     /tmp/ccfyeRbD.s:318    .text.pwmChangePeriod:0000000c .Loc.104
     /tmp/ccfyeRbD.s:321    .text.pwmChangePeriod:0000000c .Loc.105
     /tmp/ccfyeRbD.s:323    .text.pwmChangePeriod:0000000c .Loc.106
     /tmp/ccfyeRbD.s:331    .text.pwmChangePeriod:0000000e .Loc.107
     /tmp/ccfyeRbD.s:334    .text.pwmChangePeriod:0000000e .Loc.108
     /tmp/ccfyeRbD.s:336    .text.pwmChangePeriod:00000010 L0
     /tmp/ccfyeRbD.s:342    .text.pwmEnableChannel:00000000 pwmEnableChannel
     /tmp/ccfyeRbD.s:345    .text.pwmEnableChannel:00000000 .Loc.109
     /tmp/ccfyeRbD.s:346    .text.pwmEnableChannel:00000000 L0
     /tmp/ccfyeRbD.s:351    .text.pwmEnableChannel:00000000 .Loc.110
     /tmp/ccfyeRbD.s:353    .text.pwmEnableChannel:00000002 .Loc.111
     /tmp/ccfyeRbD.s:354    .text.pwmEnableChannel:00000002 .Loc.112
     /tmp/ccfyeRbD.s:355    .text.pwmEnableChannel:00000002 .Loc.113
     /tmp/ccfyeRbD.s:356    .text.pwmEnableChannel:00000002 .Loc.114
     /tmp/ccfyeRbD.s:359    .text.pwmEnableChannel:00000002 .Loc.115
     /tmp/ccfyeRbD.s:360    .text.pwmEnableChannel:00000002 .Loc.116
     /tmp/ccfyeRbD.s:363    .text.pwmEnableChannel:00000002 .Loc.117
     /tmp/ccfyeRbD.s:365    .text.pwmEnableChannel:00000002 .Loc.118
     /tmp/ccfyeRbD.s:373    .text.pwmEnableChannel:00000004 .Loc.119
     /tmp/ccfyeRbD.s:374    .text.pwmEnableChannel:00000004 .Loc.120
     /tmp/ccfyeRbD.s:376    .text.pwmEnableChannel:00000004 .Loc.121
     /tmp/ccfyeRbD.s:377    .text.pwmEnableChannel:00000004 .Loc.122
     /tmp/ccfyeRbD.s:378    .text.pwmEnableChannel:00000004 .Loc.123
     /tmp/ccfyeRbD.s:379    .text.pwmEnableChannel:00000004 .Loc.124
     /tmp/ccfyeRbD.s:380    .text.pwmEnableChannel:00000004 .Loc.125
     /tmp/ccfyeRbD.s:392    .text.pwmEnableChannel:00000014 .Loc.126
     /tmp/ccfyeRbD.s:395    .text.pwmEnableChannel:00000018 .Loc.127
     /tmp/ccfyeRbD.s:399    .text.pwmEnableChannel:0000001e .Loc.128
     /tmp/ccfyeRbD.s:400    .text.pwmEnableChannel:0000001e .Loc.129
     /tmp/ccfyeRbD.s:403    .text.pwmEnableChannel:0000001e .Loc.130
     /tmp/ccfyeRbD.s:404    .text.pwmEnableChannel:0000001e .Loc.131
     /tmp/ccfyeRbD.s:405    .text.pwmEnableChannel:0000001e .Loc.132
     /tmp/ccfyeRbD.s:408    .text.pwmEnableChannel:0000001e .Loc.133
     /tmp/ccfyeRbD.s:410    .text.pwmEnableChannel:0000001e .Loc.134
     /tmp/ccfyeRbD.s:418    .text.pwmEnableChannel:00000020 .Loc.135
     /tmp/ccfyeRbD.s:421    .text.pwmEnableChannel:00000020 .Loc.136
     /tmp/ccfyeRbD.s:423    .text.pwmEnableChannel:00000022 L0
     /tmp/ccfyeRbD.s:429    .text.pwmDisableChannel:00000000 pwmDisableChannel
     /tmp/ccfyeRbD.s:432    .text.pwmDisableChannel:00000000 .Loc.137
     /tmp/ccfyeRbD.s:433    .text.pwmDisableChannel:00000000 L0
     /tmp/ccfyeRbD.s:438    .text.pwmDisableChannel:00000000 .Loc.138
     /tmp/ccfyeRbD.s:440    .text.pwmDisableChannel:00000002 .Loc.139
     /tmp/ccfyeRbD.s:441    .text.pwmDisableChannel:00000002 .Loc.140
     /tmp/ccfyeRbD.s:442    .text.pwmDisableChannel:00000002 .Loc.141
     /tmp/ccfyeRbD.s:443    .text.pwmDisableChannel:00000002 .Loc.142
     /tmp/ccfyeRbD.s:446    .text.pwmDisableChannel:00000002 .Loc.143
     /tmp/ccfyeRbD.s:447    .text.pwmDisableChannel:00000002 .Loc.144
     /tmp/ccfyeRbD.s:450    .text.pwmDisableChannel:00000002 .Loc.145
     /tmp/ccfyeRbD.s:452    .text.pwmDisableChannel:00000002 .Loc.146
     /tmp/ccfyeRbD.s:460    .text.pwmDisableChannel:00000004 .Loc.147
     /tmp/ccfyeRbD.s:461    .text.pwmDisableChannel:00000004 .Loc.148
     /tmp/ccfyeRbD.s:463    .text.pwmDisableChannel:00000004 .Loc.149
     /tmp/ccfyeRbD.s:464    .text.pwmDisableChannel:00000004 .Loc.150
     /tmp/ccfyeRbD.s:465    .text.pwmDisableChannel:00000004 .Loc.151
     /tmp/ccfyeRbD.s:466    .text.pwmDisableChannel:00000004 .Loc.152
     /tmp/ccfyeRbD.s:467    .text.pwmDisableChannel:00000004 .Loc.153
     /tmp/ccfyeRbD.s:471    .text.pwmDisableChannel:00000008 .Loc.154
     /tmp/ccfyeRbD.s:483    .text.pwmDisableChannel:0000001a .Loc.155
     /tmp/ccfyeRbD.s:487    .text.pwmDisableChannel:00000020 .Loc.156
     /tmp/ccfyeRbD.s:488    .text.pwmDisableChannel:00000020 .Loc.157
     /tmp/ccfyeRbD.s:491    .text.pwmDisableChannel:00000020 .Loc.158
     /tmp/ccfyeRbD.s:492    .text.pwmDisableChannel:00000020 .Loc.159
     /tmp/ccfyeRbD.s:493    .text.pwmDisableChannel:00000020 .Loc.160
     /tmp/ccfyeRbD.s:496    .text.pwmDisableChannel:00000020 .Loc.161
     /tmp/ccfyeRbD.s:498    .text.pwmDisableChannel:00000020 .Loc.162
     /tmp/ccfyeRbD.s:506    .text.pwmDisableChannel:00000022 .Loc.163
     /tmp/ccfyeRbD.s:509    .text.pwmDisableChannel:00000022 .Loc.164
     /tmp/ccfyeRbD.s:511    .text.pwmDisableChannel:00000024 L0
     /tmp/ccfyeRbD.s:517    .text.pwmEnablePeriodicNotification:00000000 pwmEnablePeriodicNotification
     /tmp/ccfyeRbD.s:520    .text.pwmEnablePeriodicNotification:00000000 .Loc.165
     /tmp/ccfyeRbD.s:521    .text.pwmEnablePeriodicNotification:00000000 L0
     /tmp/ccfyeRbD.s:526    .text.pwmEnablePeriodicNotification:00000000 .Loc.166
     /tmp/ccfyeRbD.s:527    .text.pwmEnablePeriodicNotification:00000000 .Loc.167
     /tmp/ccfyeRbD.s:528    .text.pwmEnablePeriodicNotification:00000000 .Loc.168
     /tmp/ccfyeRbD.s:529    .text.pwmEnablePeriodicNotification:00000000 .Loc.169
     /tmp/ccfyeRbD.s:532    .text.pwmEnablePeriodicNotification:00000000 .Loc.170
     /tmp/ccfyeRbD.s:533    .text.pwmEnablePeriodicNotification:00000000 .Loc.171
     /tmp/ccfyeRbD.s:536    .text.pwmEnablePeriodicNotification:00000000 .Loc.172
     /tmp/ccfyeRbD.s:538    .text.pwmEnablePeriodicNotification:00000000 .Loc.173
     /tmp/ccfyeRbD.s:546    .text.pwmEnablePeriodicNotification:00000002 .Loc.174
     /tmp/ccfyeRbD.s:547    .text.pwmEnablePeriodicNotification:00000002 .Loc.175
     /tmp/ccfyeRbD.s:549    .text.pwmEnablePeriodicNotification:00000002 .Loc.176
     /tmp/ccfyeRbD.s:550    .text.pwmEnablePeriodicNotification:00000002 .Loc.177
     /tmp/ccfyeRbD.s:551    .text.pwmEnablePeriodicNotification:00000002 .Loc.178
     /tmp/ccfyeRbD.s:552    .text.pwmEnablePeriodicNotification:00000002 .Loc.179
     /tmp/ccfyeRbD.s:553    .text.pwmEnablePeriodicNotification:00000002 .Loc.180
     /tmp/ccfyeRbD.s:554    .text.pwmEnablePeriodicNotification:00000002 .Loc.181
     /tmp/ccfyeRbD.s:555    .text.pwmEnablePeriodicNotification:00000002 .Loc.182
     /tmp/ccfyeRbD.s:558    .text.pwmEnablePeriodicNotification:00000006 .Loc.183
     /tmp/ccfyeRbD.s:561    .text.pwmEnablePeriodicNotification:00000006 .Loc.184
     /tmp/ccfyeRbD.s:562    .text.pwmEnablePeriodicNotification:00000006 .Loc.185
     /tmp/ccfyeRbD.s:563    .text.pwmEnablePeriodicNotification:00000006 .Loc.186
     /tmp/ccfyeRbD.s:566    .text.pwmEnablePeriodicNotification:00000006 .Loc.187
     /tmp/ccfyeRbD.s:568    .text.pwmEnablePeriodicNotification:00000006 .Loc.188
     /tmp/ccfyeRbD.s:576    .text.pwmEnablePeriodicNotification:00000008 .Loc.189
     /tmp/ccfyeRbD.s:579    .text.pwmEnablePeriodicNotification:00000008 .Loc.190
     /tmp/ccfyeRbD.s:581    .text.pwmEnablePeriodicNotification:0000000a L0
     /tmp/ccfyeRbD.s:587    .text.pwmDisablePeriodicNotification:00000000 pwmDisablePeriodicNotification
     /tmp/ccfyeRbD.s:590    .text.pwmDisablePeriodicNotification:00000000 .Loc.191
     /tmp/ccfyeRbD.s:591    .text.pwmDisablePeriodicNotification:00000000 L0
     /tmp/ccfyeRbD.s:596    .text.pwmDisablePeriodicNotification:00000000 .Loc.192
     /tmp/ccfyeRbD.s:597    .text.pwmDisablePeriodicNotification:00000000 .Loc.193
     /tmp/ccfyeRbD.s:598    .text.pwmDisablePeriodicNotification:00000000 .Loc.194
     /tmp/ccfyeRbD.s:599    .text.pwmDisablePeriodicNotification:00000000 .Loc.195
     /tmp/ccfyeRbD.s:602    .text.pwmDisablePeriodicNotification:00000000 .Loc.196
     /tmp/ccfyeRbD.s:603    .text.pwmDisablePeriodicNotification:00000000 .Loc.197
     /tmp/ccfyeRbD.s:606    .text.pwmDisablePeriodicNotification:00000000 .Loc.198
     /tmp/ccfyeRbD.s:608    .text.pwmDisablePeriodicNotification:00000000 .Loc.199
     /tmp/ccfyeRbD.s:616    .text.pwmDisablePeriodicNotification:00000002 .Loc.200
     /tmp/ccfyeRbD.s:617    .text.pwmDisablePeriodicNotification:00000002 .Loc.201
     /tmp/ccfyeRbD.s:619    .text.pwmDisablePeriodicNotification:00000002 .Loc.202
     /tmp/ccfyeRbD.s:620    .text.pwmDisablePeriodicNotification:00000002 .Loc.203
     /tmp/ccfyeRbD.s:621    .text.pwmDisablePeriodicNotification:00000002 .Loc.204
     /tmp/ccfyeRbD.s:622    .text.pwmDisablePeriodicNotification:00000002 .Loc.205
     /tmp/ccfyeRbD.s:623    .text.pwmDisablePeriodicNotification:00000002 .Loc.206
     /tmp/ccfyeRbD.s:624    .text.pwmDisablePeriodicNotification:00000002 .Loc.207
     /tmp/ccfyeRbD.s:625    .text.pwmDisablePeriodicNotification:00000002 .Loc.208
     /tmp/ccfyeRbD.s:628    .text.pwmDisablePeriodicNotification:00000006 .Loc.209
     /tmp/ccfyeRbD.s:631    .text.pwmDisablePeriodicNotification:00000006 .Loc.210
     /tmp/ccfyeRbD.s:632    .text.pwmDisablePeriodicNotification:00000006 .Loc.211
     /tmp/ccfyeRbD.s:633    .text.pwmDisablePeriodicNotification:00000006 .Loc.212
     /tmp/ccfyeRbD.s:636    .text.pwmDisablePeriodicNotification:00000006 .Loc.213
     /tmp/ccfyeRbD.s:638    .text.pwmDisablePeriodicNotification:00000006 .Loc.214
     /tmp/ccfyeRbD.s:646    .text.pwmDisablePeriodicNotification:00000008 .Loc.215
     /tmp/ccfyeRbD.s:649    .text.pwmDisablePeriodicNotification:00000008 .Loc.216
     /tmp/ccfyeRbD.s:651    .text.pwmDisablePeriodicNotification:0000000a L0
     /tmp/ccfyeRbD.s:657    .text.pwmEnableChannelNotification:00000000 pwmEnableChannelNotification
     /tmp/ccfyeRbD.s:660    .text.pwmEnableChannelNotification:00000000 .Loc.217
     /tmp/ccfyeRbD.s:661    .text.pwmEnableChannelNotification:00000000 L0
     /tmp/ccfyeRbD.s:666    .text.pwmEnableChannelNotification:00000000 .Loc.218
     /tmp/ccfyeRbD.s:667    .text.pwmEnableChannelNotification:00000000 .Loc.219
     /tmp/ccfyeRbD.s:668    .text.pwmEnableChannelNotification:00000000 .Loc.220
     /tmp/ccfyeRbD.s:669    .text.pwmEnableChannelNotification:00000000 .Loc.221
     /tmp/ccfyeRbD.s:672    .text.pwmEnableChannelNotification:00000000 .Loc.222
     /tmp/ccfyeRbD.s:673    .text.pwmEnableChannelNotification:00000000 .Loc.223
     /tmp/ccfyeRbD.s:676    .text.pwmEnableChannelNotification:00000000 .Loc.224
     /tmp/ccfyeRbD.s:678    .text.pwmEnableChannelNotification:00000000 .Loc.225
     /tmp/ccfyeRbD.s:686    .text.pwmEnableChannelNotification:00000002 .Loc.226
     /tmp/ccfyeRbD.s:687    .text.pwmEnableChannelNotification:00000002 .Loc.227
     /tmp/ccfyeRbD.s:689    .text.pwmEnableChannelNotification:00000002 .Loc.228
     /tmp/ccfyeRbD.s:690    .text.pwmEnableChannelNotification:00000002 .Loc.229
     /tmp/ccfyeRbD.s:691    .text.pwmEnableChannelNotification:00000002 .Loc.230
     /tmp/ccfyeRbD.s:692    .text.pwmEnableChannelNotification:00000002 .Loc.231
     /tmp/ccfyeRbD.s:693    .text.pwmEnableChannelNotification:00000002 .Loc.232
     /tmp/ccfyeRbD.s:694    .text.pwmEnableChannelNotification:00000002 .Loc.233
     /tmp/ccfyeRbD.s:695    .text.pwmEnableChannelNotification:00000002 .Loc.234
     /tmp/ccfyeRbD.s:696    .text.pwmEnableChannelNotification:00000002 .Loc.235
     /tmp/ccfyeRbD.s:697    .text.pwmEnableChannelNotification:00000002 .Loc.236
     /tmp/ccfyeRbD.s:698    .text.pwmEnableChannelNotification:00000002 .Loc.237
     /tmp/ccfyeRbD.s:701    .text.pwmEnableChannelNotification:00000006 .Loc.238
     /tmp/ccfyeRbD.s:704    .text.pwmEnableChannelNotification:00000006 .Loc.239
     /tmp/ccfyeRbD.s:705    .text.pwmEnableChannelNotification:00000006 .Loc.240
     /tmp/ccfyeRbD.s:706    .text.pwmEnableChannelNotification:00000006 .Loc.241
     /tmp/ccfyeRbD.s:709    .text.pwmEnableChannelNotification:00000006 .Loc.242
     /tmp/ccfyeRbD.s:711    .text.pwmEnableChannelNotification:00000006 .Loc.243
     /tmp/ccfyeRbD.s:719    .text.pwmEnableChannelNotification:00000008 .Loc.244
     /tmp/ccfyeRbD.s:722    .text.pwmEnableChannelNotification:00000008 .Loc.245
     /tmp/ccfyeRbD.s:724    .text.pwmEnableChannelNotification:0000000a L0
     /tmp/ccfyeRbD.s:730    .text.pwmDisableChannelNotification:00000000 pwmDisableChannelNotification
     /tmp/ccfyeRbD.s:733    .text.pwmDisableChannelNotification:00000000 .Loc.246
     /tmp/ccfyeRbD.s:734    .text.pwmDisableChannelNotification:00000000 L0
     /tmp/ccfyeRbD.s:739    .text.pwmDisableChannelNotification:00000000 .Loc.247
     /tmp/ccfyeRbD.s:740    .text.pwmDisableChannelNotification:00000000 .Loc.248
     /tmp/ccfyeRbD.s:741    .text.pwmDisableChannelNotification:00000000 .Loc.249
     /tmp/ccfyeRbD.s:742    .text.pwmDisableChannelNotification:00000000 .Loc.250
     /tmp/ccfyeRbD.s:745    .text.pwmDisableChannelNotification:00000000 .Loc.251
     /tmp/ccfyeRbD.s:746    .text.pwmDisableChannelNotification:00000000 .Loc.252
     /tmp/ccfyeRbD.s:749    .text.pwmDisableChannelNotification:00000000 .Loc.253
     /tmp/ccfyeRbD.s:751    .text.pwmDisableChannelNotification:00000000 .Loc.254
     /tmp/ccfyeRbD.s:759    .text.pwmDisableChannelNotification:00000002 .Loc.255
     /tmp/ccfyeRbD.s:760    .text.pwmDisableChannelNotification:00000002 .Loc.256
     /tmp/ccfyeRbD.s:762    .text.pwmDisableChannelNotification:00000002 .Loc.257
     /tmp/ccfyeRbD.s:763    .text.pwmDisableChannelNotification:00000002 .Loc.258
     /tmp/ccfyeRbD.s:764    .text.pwmDisableChannelNotification:00000002 .Loc.259
     /tmp/ccfyeRbD.s:765    .text.pwmDisableChannelNotification:00000002 .Loc.260
     /tmp/ccfyeRbD.s:766    .text.pwmDisableChannelNotification:00000002 .Loc.261
     /tmp/ccfyeRbD.s:767    .text.pwmDisableChannelNotification:00000002 .Loc.262
     /tmp/ccfyeRbD.s:768    .text.pwmDisableChannelNotification:00000002 .Loc.263
     /tmp/ccfyeRbD.s:769    .text.pwmDisableChannelNotification:00000002 .Loc.264
     /tmp/ccfyeRbD.s:770    .text.pwmDisableChannelNotification:00000002 .Loc.265
     /tmp/ccfyeRbD.s:771    .text.pwmDisableChannelNotification:00000002 .Loc.266
     /tmp/ccfyeRbD.s:774    .text.pwmDisableChannelNotification:00000006 .Loc.267
     /tmp/ccfyeRbD.s:777    .text.pwmDisableChannelNotification:00000006 .Loc.268
     /tmp/ccfyeRbD.s:778    .text.pwmDisableChannelNotification:00000006 .Loc.269
     /tmp/ccfyeRbD.s:779    .text.pwmDisableChannelNotification:00000006 .Loc.270
     /tmp/ccfyeRbD.s:782    .text.pwmDisableChannelNotification:00000006 .Loc.271
     /tmp/ccfyeRbD.s:784    .text.pwmDisableChannelNotification:00000006 .Loc.272
     /tmp/ccfyeRbD.s:792    .text.pwmDisableChannelNotification:00000008 .Loc.273
     /tmp/ccfyeRbD.s:795    .text.pwmDisableChannelNotification:00000008 .Loc.274
     /tmp/ccfyeRbD.s:797    .text.pwmDisableChannelNotification:0000000a L0
     /tmp/ccfyeRbD.s:28     .text.pwmInit:00000004 L0
     /tmp/ccfyeRbD.s:64     .text.pwmObjectInit:00000010 L0
     /tmp/ccfyeRbD.s:174    .text.pwmStart:0000002e L0
     /tmp/ccfyeRbD.s:266    .text.pwmStop:0000001e L0
     /tmp/ccfyeRbD.s:339    .text.pwmChangePeriod:00000010 L0
     /tmp/ccfyeRbD.s:426    .text.pwmEnableChannel:00000022 L0
     /tmp/ccfyeRbD.s:514    .text.pwmDisableChannel:00000024 L0
     /tmp/ccfyeRbD.s:584    .text.pwmEnablePeriodicNotification:0000000a L0
     /tmp/ccfyeRbD.s:654    .text.pwmDisablePeriodicNotification:0000000a L0
     /tmp/ccfyeRbD.s:727    .text.pwmEnableChannelNotification:0000000a L0
     /tmp/ccfyeRbD.s:800    .text.pwmDisableChannelNotification:0000000a L0
                     .debug_frame:00000000 L0
     /tmp/ccfyeRbD.s:387    .text.pwmEnableChannel:0000000e .L21
     /tmp/ccfyeRbD.s:385    .text.pwmEnableChannel:0000000c .L11
     /tmp/ccfyeRbD.s:476    .text.pwmDisableChannel:0000000e .L22
     /tmp/ccfyeRbD.s:474    .text.pwmDisableChannel:0000000c .L12
     /tmp/ccfyeRbD.s:2330   .debug_abbrev:00000000 .Ldebug_abbrev0
     /tmp/ccfyeRbD.s:3453   .debug_ranges:00000000 .Ldebug_ranges0
     /tmp/ccfyeRbD.s:3479   .debug_line:00000000 .Ldebug_line0
     /tmp/ccfyeRbD.s:732    .text.pwmDisableChannelNotification:00000000 .LFB156
     /tmp/ccfyeRbD.s:798    .text.pwmDisableChannelNotification:0000000a .LFE156
     /tmp/ccfyeRbD.s:2853   .debug_loc:00000004 .LLST17
     /tmp/ccfyeRbD.s:2848   .debug_loc:00000000 .LVUS17
     /tmp/ccfyeRbD.s:2883   .debug_loc:00000034 .LLST18
     /tmp/ccfyeRbD.s:2878   .debug_loc:00000030 .LVUS18
     /tmp/ccfyeRbD.s:744    .text.pwmDisableChannelNotification:00000000 .LBI126
     /tmp/ccfyeRbD.s:743    .text.pwmDisableChannelNotification:00000000 .LBB126
     /tmp/ccfyeRbD.s:761    .text.pwmDisableChannelNotification:00000002 .LBE126
     /tmp/ccfyeRbD.s:748    .text.pwmDisableChannelNotification:00000000 .LBI127
     /tmp/ccfyeRbD.s:747    .text.pwmDisableChannelNotification:00000000 .LBB127
     /tmp/ccfyeRbD.s:758    .text.pwmDisableChannelNotification:00000002 .LBE127
     /tmp/ccfyeRbD.s:776    .text.pwmDisableChannelNotification:00000006 .LBI129
     /tmp/ccfyeRbD.s:775    .text.pwmDisableChannelNotification:00000006 .LBB129
     /tmp/ccfyeRbD.s:794    .text.pwmDisableChannelNotification:00000008 .LBE129
     /tmp/ccfyeRbD.s:781    .text.pwmDisableChannelNotification:00000006 .LBI130
     /tmp/ccfyeRbD.s:780    .text.pwmDisableChannelNotification:00000006 .LBB130
     /tmp/ccfyeRbD.s:791    .text.pwmDisableChannelNotification:00000008 .LBE130
     /tmp/ccfyeRbD.s:773    .text.pwmDisableChannelNotification:00000006 .LVL25
     /tmp/ccfyeRbD.s:659    .text.pwmEnableChannelNotification:00000000 .LFB155
     /tmp/ccfyeRbD.s:725    .text.pwmEnableChannelNotification:0000000a .LFE155
     /tmp/ccfyeRbD.s:2908   .debug_loc:0000005f .LLST15
     /tmp/ccfyeRbD.s:2903   .debug_loc:0000005b .LVUS15
     /tmp/ccfyeRbD.s:2938   .debug_loc:0000008f .LLST16
     /tmp/ccfyeRbD.s:2933   .debug_loc:0000008b .LVUS16
     /tmp/ccfyeRbD.s:671    .text.pwmEnableChannelNotification:00000000 .LBI120
     /tmp/ccfyeRbD.s:670    .text.pwmEnableChannelNotification:00000000 .LBB120
     /tmp/ccfyeRbD.s:688    .text.pwmEnableChannelNotification:00000002 .LBE120
     /tmp/ccfyeRbD.s:675    .text.pwmEnableChannelNotification:00000000 .LBI121
     /tmp/ccfyeRbD.s:674    .text.pwmEnableChannelNotification:00000000 .LBB121
     /tmp/ccfyeRbD.s:685    .text.pwmEnableChannelNotification:00000002 .LBE121
     /tmp/ccfyeRbD.s:703    .text.pwmEnableChannelNotification:00000006 .LBI123
     /tmp/ccfyeRbD.s:702    .text.pwmEnableChannelNotification:00000006 .LBB123
     /tmp/ccfyeRbD.s:721    .text.pwmEnableChannelNotification:00000008 .LBE123
     /tmp/ccfyeRbD.s:708    .text.pwmEnableChannelNotification:00000006 .LBI124
     /tmp/ccfyeRbD.s:707    .text.pwmEnableChannelNotification:00000006 .LBB124
     /tmp/ccfyeRbD.s:718    .text.pwmEnableChannelNotification:00000008 .LBE124
     /tmp/ccfyeRbD.s:700    .text.pwmEnableChannelNotification:00000006 .LVL23
     /tmp/ccfyeRbD.s:589    .text.pwmDisablePeriodicNotification:00000000 .LFB154
     /tmp/ccfyeRbD.s:652    .text.pwmDisablePeriodicNotification:0000000a .LFE154
     /tmp/ccfyeRbD.s:2963   .debug_loc:000000ba .LLST14
     /tmp/ccfyeRbD.s:2958   .debug_loc:000000b6 .LVUS14
     /tmp/ccfyeRbD.s:601    .text.pwmDisablePeriodicNotification:00000000 .LBI114
     /tmp/ccfyeRbD.s:600    .text.pwmDisablePeriodicNotification:00000000 .LBB114
     /tmp/ccfyeRbD.s:618    .text.pwmDisablePeriodicNotification:00000002 .LBE114
     /tmp/ccfyeRbD.s:605    .text.pwmDisablePeriodicNotification:00000000 .LBI115
     /tmp/ccfyeRbD.s:604    .text.pwmDisablePeriodicNotification:00000000 .LBB115
     /tmp/ccfyeRbD.s:615    .text.pwmDisablePeriodicNotification:00000002 .LBE115
     /tmp/ccfyeRbD.s:630    .text.pwmDisablePeriodicNotification:00000006 .LBI117
     /tmp/ccfyeRbD.s:629    .text.pwmDisablePeriodicNotification:00000006 .LBB117
     /tmp/ccfyeRbD.s:648    .text.pwmDisablePeriodicNotification:00000008 .LBE117
     /tmp/ccfyeRbD.s:635    .text.pwmDisablePeriodicNotification:00000006 .LBI118
     /tmp/ccfyeRbD.s:634    .text.pwmDisablePeriodicNotification:00000006 .LBB118
     /tmp/ccfyeRbD.s:645    .text.pwmDisablePeriodicNotification:00000008 .LBE118
     /tmp/ccfyeRbD.s:627    .text.pwmDisablePeriodicNotification:00000006 .LVL21
     /tmp/ccfyeRbD.s:519    .text.pwmEnablePeriodicNotification:00000000 .LFB153
     /tmp/ccfyeRbD.s:582    .text.pwmEnablePeriodicNotification:0000000a .LFE153
     /tmp/ccfyeRbD.s:2993   .debug_loc:000000ea .LLST13
     /tmp/ccfyeRbD.s:2988   .debug_loc:000000e6 .LVUS13
     /tmp/ccfyeRbD.s:531    .text.pwmEnablePeriodicNotification:00000000 .LBI108
     /tmp/ccfyeRbD.s:530    .text.pwmEnablePeriodicNotification:00000000 .LBB108
     /tmp/ccfyeRbD.s:548    .text.pwmEnablePeriodicNotification:00000002 .LBE108
     /tmp/ccfyeRbD.s:535    .text.pwmEnablePeriodicNotification:00000000 .LBI109
     /tmp/ccfyeRbD.s:534    .text.pwmEnablePeriodicNotification:00000000 .LBB109
     /tmp/ccfyeRbD.s:545    .text.pwmEnablePeriodicNotification:00000002 .LBE109
     /tmp/ccfyeRbD.s:560    .text.pwmEnablePeriodicNotification:00000006 .LBI111
     /tmp/ccfyeRbD.s:559    .text.pwmEnablePeriodicNotification:00000006 .LBB111
     /tmp/ccfyeRbD.s:578    .text.pwmEnablePeriodicNotification:00000008 .LBE111
     /tmp/ccfyeRbD.s:565    .text.pwmEnablePeriodicNotification:00000006 .LBI112
     /tmp/ccfyeRbD.s:564    .text.pwmEnablePeriodicNotification:00000006 .LBB112
     /tmp/ccfyeRbD.s:575    .text.pwmEnablePeriodicNotification:00000008 .LBE112
     /tmp/ccfyeRbD.s:557    .text.pwmEnablePeriodicNotification:00000006 .LVL19
     /tmp/ccfyeRbD.s:431    .text.pwmDisableChannel:00000000 .LFB152
     /tmp/ccfyeRbD.s:512    .text.pwmDisableChannel:00000024 .LFE152
     /tmp/ccfyeRbD.s:3025   .debug_loc:0000011c .LLST11
     /tmp/ccfyeRbD.s:3018   .debug_loc:00000116 .LVUS11
     /tmp/ccfyeRbD.s:3064   .debug_loc:0000015c .LLST12
     /tmp/ccfyeRbD.s:3059   .debug_loc:00000158 .LVUS12
     /tmp/ccfyeRbD.s:445    .text.pwmDisableChannel:00000002 .LBI102
     /tmp/ccfyeRbD.s:444    .text.pwmDisableChannel:00000002 .LBB102
     /tmp/ccfyeRbD.s:462    .text.pwmDisableChannel:00000004 .LBE102
     /tmp/ccfyeRbD.s:449    .text.pwmDisableChannel:00000002 .LBI103
     /tmp/ccfyeRbD.s:448    .text.pwmDisableChannel:00000002 .LBB103
     /tmp/ccfyeRbD.s:459    .text.pwmDisableChannel:00000004 .LBE103
     /tmp/ccfyeRbD.s:490    .text.pwmDisableChannel:00000020 .LBI105
     /tmp/ccfyeRbD.s:489    .text.pwmDisableChannel:00000020 .LBB105
     /tmp/ccfyeRbD.s:508    .text.pwmDisableChannel:00000022 .LBE105
     /tmp/ccfyeRbD.s:495    .text.pwmDisableChannel:00000020 .LBI106
     /tmp/ccfyeRbD.s:494    .text.pwmDisableChannel:00000020 .LBB106
     /tmp/ccfyeRbD.s:505    .text.pwmDisableChannel:00000022 .LBE106
     /tmp/ccfyeRbD.s:486    .text.pwmDisableChannel:00000020 .LVL17
     /tmp/ccfyeRbD.s:344    .text.pwmEnableChannel:00000000 .LFB151
     /tmp/ccfyeRbD.s:424    .text.pwmEnableChannel:00000022 .LFE151
     /tmp/ccfyeRbD.s:3091   .debug_loc:00000189 .LLST8
     /tmp/ccfyeRbD.s:3084   .debug_loc:00000183 .LVUS8
     /tmp/ccfyeRbD.s:3130   .debug_loc:000001c9 .LLST9
     /tmp/ccfyeRbD.s:3125   .debug_loc:000001c5 .LVUS9
     /tmp/ccfyeRbD.s:3155   .debug_loc:000001f4 .LLST10
     /tmp/ccfyeRbD.s:3150   .debug_loc:000001f0 .LVUS10
     /tmp/ccfyeRbD.s:358    .text.pwmEnableChannel:00000002 .LBI96
     /tmp/ccfyeRbD.s:357    .text.pwmEnableChannel:00000002 .LBB96
     /tmp/ccfyeRbD.s:375    .text.pwmEnableChannel:00000004 .LBE96
     /tmp/ccfyeRbD.s:362    .text.pwmEnableChannel:00000002 .LBI97
     /tmp/ccfyeRbD.s:361    .text.pwmEnableChannel:00000002 .LBB97
     /tmp/ccfyeRbD.s:372    .text.pwmEnableChannel:00000004 .LBE97
     /tmp/ccfyeRbD.s:402    .text.pwmEnableChannel:0000001e .LBI99
     /tmp/ccfyeRbD.s:401    .text.pwmEnableChannel:0000001e .LBB99
     /tmp/ccfyeRbD.s:420    .text.pwmEnableChannel:00000020 .LBE99
     /tmp/ccfyeRbD.s:407    .text.pwmEnableChannel:0000001e .LBI100
     /tmp/ccfyeRbD.s:406    .text.pwmEnableChannel:0000001e .LBB100
     /tmp/ccfyeRbD.s:417    .text.pwmEnableChannel:00000020 .LBE100
     /tmp/ccfyeRbD.s:398    .text.pwmEnableChannel:0000001e .LVL14
     /tmp/ccfyeRbD.s:271    .text.pwmChangePeriod:00000000 .LFB150
     /tmp/ccfyeRbD.s:337    .text.pwmChangePeriod:00000010 .LFE150
     /tmp/ccfyeRbD.s:3185   .debug_loc:00000224 .LLST6
     /tmp/ccfyeRbD.s:3180   .debug_loc:00000220 .LVUS6
     /tmp/ccfyeRbD.s:3215   .debug_loc:00000254 .LLST7
     /tmp/ccfyeRbD.s:3210   .debug_loc:00000250 .LVUS7
     /tmp/ccfyeRbD.s:285    .text.pwmChangePeriod:00000002 .LBI90
     /tmp/ccfyeRbD.s:284    .text.pwmChangePeriod:00000002 .LBB90
     /tmp/ccfyeRbD.s:302    .text.pwmChangePeriod:00000004 .LBE90
     /tmp/ccfyeRbD.s:289    .text.pwmChangePeriod:00000002 .LBI91
     /tmp/ccfyeRbD.s:288    .text.pwmChangePeriod:00000002 .LBB91
     /tmp/ccfyeRbD.s:299    .text.pwmChangePeriod:00000004 .LBE91
     /tmp/ccfyeRbD.s:315    .text.pwmChangePeriod:0000000c .LBI93
     /tmp/ccfyeRbD.s:314    .text.pwmChangePeriod:0000000c .LBB93
     /tmp/ccfyeRbD.s:333    .text.pwmChangePeriod:0000000e .LBE93
     /tmp/ccfyeRbD.s:320    .text.pwmChangePeriod:0000000c .LBI94
     /tmp/ccfyeRbD.s:319    .text.pwmChangePeriod:0000000c .LBB94
     /tmp/ccfyeRbD.s:330    .text.pwmChangePeriod:0000000e .LBE94
     /tmp/ccfyeRbD.s:311    .text.pwmChangePeriod:0000000c .LVL11
     /tmp/ccfyeRbD.s:179    .text.pwmStop:00000000 .LFB149
     /tmp/ccfyeRbD.s:264    .text.pwmStop:0000001e .LFE149
     /tmp/ccfyeRbD.s:3240   .debug_loc:00000280 .LLST4
     /tmp/ccfyeRbD.s:3268   .debug_loc:000002b5 .LLST5
     /tmp/ccfyeRbD.s:3261   .debug_loc:000002af .LVUS5
     /tmp/ccfyeRbD.s:201    .text.pwmStop:00000006 .LBI84
     /tmp/ccfyeRbD.s:200    .text.pwmStop:00000006 .LBB84
     /tmp/ccfyeRbD.s:218    .text.pwmStop:00000008 .LBE84
     /tmp/ccfyeRbD.s:205    .text.pwmStop:00000006 .LBI85
     /tmp/ccfyeRbD.s:204    .text.pwmStop:00000006 .LBB85
     /tmp/ccfyeRbD.s:215    .text.pwmStop:00000008 .LBE85
     /tmp/ccfyeRbD.s:238    .text.pwmStop:00000016 .LBI87
     /tmp/ccfyeRbD.s:237    .text.pwmStop:00000016 .LBB87
     /tmp/ccfyeRbD.s:256    .text.pwmStop:00000018 .LBE87
     /tmp/ccfyeRbD.s:243    .text.pwmStop:00000016 .LBI88
     /tmp/ccfyeRbD.s:242    .text.pwmStop:00000016 .LBB88
     /tmp/ccfyeRbD.s:253    .text.pwmStop:00000018 .LBE88
     /tmp/ccfyeRbD.s:224    .text.pwmStop:0000000c .LVL8
     /tmp/ccfyeRbD.s:69     .text.pwmStart:00000000 .LFB148
     /tmp/ccfyeRbD.s:172    .text.pwmStart:0000002e .LFE148
     /tmp/ccfyeRbD.s:3302   .debug_loc:000002f1 .LLST1
     /tmp/ccfyeRbD.s:3330   .debug_loc:00000326 .LLST2
     /tmp/ccfyeRbD.s:3323   .debug_loc:00000320 .LVUS2
     /tmp/ccfyeRbD.s:3369   .debug_loc:00000366 .LLST3
     /tmp/ccfyeRbD.s:3364   .debug_loc:00000362 .LVUS3
     /tmp/ccfyeRbD.s:93     .text.pwmStart:00000008 .LBI78
     /tmp/ccfyeRbD.s:92     .text.pwmStart:00000008 .LBB78
     /tmp/ccfyeRbD.s:112    .text.pwmStart:0000000a .LBE78
     /tmp/ccfyeRbD.s:98     .text.pwmStart:00000008 .LBI79
     /tmp/ccfyeRbD.s:97     .text.pwmStart:00000008 .LBB79
     /tmp/ccfyeRbD.s:109    .text.pwmStart:0000000a .LBE79
     /tmp/ccfyeRbD.s:143    .text.pwmStart:00000022 .LBI81
     /tmp/ccfyeRbD.s:142    .text.pwmStart:00000022 .LBB81
     /tmp/ccfyeRbD.s:160    .text.pwmStart:00000024 .LBE81
     /tmp/ccfyeRbD.s:148    .text.pwmStart:00000022 .LBI82
     /tmp/ccfyeRbD.s:147    .text.pwmStart:00000022 .LBB82
     /tmp/ccfyeRbD.s:158    .text.pwmStart:00000024 .LBE82
     /tmp/ccfyeRbD.s:134    .text.pwmStart:0000001e .LVL5
     /tmp/ccfyeRbD.s:33     .text.pwmObjectInit:00000000 .LFB147
     /tmp/ccfyeRbD.s:62     .text.pwmObjectInit:00000010 .LFE147
     /tmp/ccfyeRbD.s:3399   .debug_loc:00000396 .LLST0
     /tmp/ccfyeRbD.s:3394   .debug_loc:00000392 .LVUS0
     /tmp/ccfyeRbD.s:15     .text.pwmInit:00000000 .LFB146
     /tmp/ccfyeRbD.s:26     .text.pwmInit:00000004 .LFE146
     /tmp/ccfyeRbD.s:24     .text.pwmInit:00000004 .LVL0
     /tmp/ccfyeRbD.s:731    .text.pwmDisableChannelNotification:00000000 .LVL24
     /tmp/ccfyeRbD.s:658    .text.pwmEnableChannelNotification:00000000 .LVL22
     /tmp/ccfyeRbD.s:588    .text.pwmDisablePeriodicNotification:00000000 .LVL20
     /tmp/ccfyeRbD.s:518    .text.pwmEnablePeriodicNotification:00000000 .LVL18
     /tmp/ccfyeRbD.s:430    .text.pwmDisableChannel:00000000 .LVL15
     /tmp/ccfyeRbD.s:470    .text.pwmDisableChannel:00000008 .LVL16
     /tmp/ccfyeRbD.s:343    .text.pwmEnableChannel:00000000 .LVL12
     /tmp/ccfyeRbD.s:391    .text.pwmEnableChannel:00000014 .LVL13
     /tmp/ccfyeRbD.s:270    .text.pwmChangePeriod:00000000 .LVL10
     /tmp/ccfyeRbD.s:184    .text.pwmStop:00000002 .LCFI2
     /tmp/ccfyeRbD.s:188    .text.pwmStop:00000004 .LCFI3
     /tmp/ccfyeRbD.s:178    .text.pwmStop:00000000 .LVL7
     /tmp/ccfyeRbD.s:260    .text.pwmStop:0000001c .LVL9
     /tmp/ccfyeRbD.s:74     .text.pwmStart:00000002 .LCFI0
     /tmp/ccfyeRbD.s:78     .text.pwmStart:00000004 .LCFI1
     /tmp/ccfyeRbD.s:68     .text.pwmStart:00000000 .LVL3
     /tmp/ccfyeRbD.s:124    .text.pwmStart:00000012 .LVL4
     /tmp/ccfyeRbD.s:168    .text.pwmStart:0000002c .LVL6
     /tmp/ccfyeRbD.s:32     .text.pwmObjectInit:00000000 .LVL1
     /tmp/ccfyeRbD.s:45     .text.pwmObjectInit:00000004 .LVL2
     /tmp/ccfyeRbD.s:807    .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
pwm_lld_init
pwm_lld_start
pwm_lld_stop
pwm_lld_change_period
pwm_lld_enable_channel
pwm_lld_disable_channel
pwm_lld_enable_periodic_notification
pwm_lld_disable_periodic_notification
pwm_lld_enable_channel_notification
pwm_lld_disable_channel_notification
