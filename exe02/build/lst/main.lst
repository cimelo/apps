   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.Thread_Led,"ax",@progbits
  11               	.global	Thread_Led
  13               	Thread_Led:
  14               	.LFB146:
  15               		.file 1 "main.c"
   1:main.c        **** #include "hal.h"
   2:main.c        **** #include "ch.h"
   3:main.c        **** 
   4:main.c        **** #define LED_YLW 2
   5:main.c        **** #define LED_GRN 3
   6:main.c        **** #define LED_PWM 3
   7:main.c        **** 
   8:main.c        **** /*
   9:main.c        ****  * Thread 1.
  10:main.c        ****  */
  11:main.c        **** THD_WORKING_AREA(wa_Led, 128);
  12:main.c        **** THD_FUNCTION(Thread_Led, arg) {
  16               		.loc 1 12 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  13:main.c        **** 
  14:main.c        **** 	(void)arg;
  15:main.c        **** 
  16:main.c        **** 	while (true) {
  17:main.c        **** 		palTogglePad(IOPORT4, LED_YLW);
  23               		.loc 1 17 0
  24 0000 D4E0      		ldi r29,lo8(4)
  18:main.c        **** 		palTogglePad(IOPORT4, LED_GRN);
  25               		.loc 1 18 0
  26 0002 C8E0      		ldi r28,lo8(8)
  27               	.LVL1:
  28               	.L2:
  17:main.c        **** 		palTogglePad(IOPORT4, LED_GRN);
  29               		.loc 1 17 0 discriminator 1
  30 0004 8BB1      		in r24,0xb
  31 0006 8D27      		eor r24,r29
  32 0008 8BB9      		out 0xb,r24
  33               		.loc 1 18 0 discriminator 1
  34 000a 8BB1      		in r24,0xb
  35 000c 8C27      		eor r24,r28
  36 000e 8BB9      		out 0xb,r24
  19:main.c        **** 		chThdSleepMilliseconds(500);
  37               		.loc 1 19 0 discriminator 1
  38 0010 84E8      		ldi r24,lo8(-124)
  39 0012 9EE1      		ldi r25,lo8(30)
  40 0014 0E94 0000 		call chThdSleep
  41               	.LVL2:
  42 0018 00C0      		rjmp .L2
  43               		.cfi_endproc
  44               	.LFE146:
  46               		.section	.rodata.str1.1,"aMS",@progbits,1
  47               	.LC1:
  48 0000 4865 6C6C 		.string	"Hello, World!\r\n"
  48      6F2C 2057 
  48      6F72 6C64 
  48      210D 0A00 
  49               		.section	.text.Thread_SerComm,"ax",@progbits
  50               	.global	Thread_SerComm
  52               	Thread_SerComm:
  53               	.LFB147:
  20:main.c        **** 	}
  21:main.c        **** }
  22:main.c        **** 
  23:main.c        **** /*
  24:main.c        ****  * Thread 2.
  25:main.c        ****  */
  26:main.c        **** THD_WORKING_AREA(wa_SerComm, 128);
  27:main.c        **** THD_FUNCTION(Thread_SerComm, arg) {
  54               		.loc 1 27 0
  55               		.cfi_startproc
  56               	.LVL3:
  57 0000 CF93      		push r28
  58               	.LCFI0:
  59               		.cfi_def_cfa_offset 3
  60               		.cfi_offset 28, -2
  61 0002 DF93      		push r29
  62               	.LCFI1:
  63               		.cfi_def_cfa_offset 4
  64               		.cfi_offset 29, -3
  65 0004 CDB7      		in r28,__SP_L__
  66 0006 DEB7      		in r29,__SP_H__
  67               	.LCFI2:
  68               		.cfi_def_cfa_register 28
  69 0008 6097      		sbiw r28,16
  70               	.LCFI3:
  71               		.cfi_def_cfa_offset 20
  72 000a 0FB6      		in __tmp_reg__,__SREG__
  73 000c F894      		cli
  74 000e DEBF      		out __SP_H__,r29
  75 0010 0FBE      		out __SREG__,__tmp_reg__
  76 0012 CDBF      		out __SP_L__,r28
  77               	/* prologue: function */
  78               	/* frame size = 16 */
  79               	/* stack size = 18 */
  80               	.L__stack_usage = 18
  28:main.c        **** 
  29:main.c        **** 	(void)arg;
  30:main.c        **** 
  31:main.c        **** 	uint8_t msg[] = "Hello, World!\r\n";
  81               		.loc 1 31 0
  82 0014 80E1      		ldi r24,lo8(16)
  83               	.LVL4:
  84 0016 E0E0      		ldi r30,lo8(.LC1)
  85 0018 F0E0      		ldi r31,hi8(.LC1)
  86 001a DE01      		movw r26,r28
  87 001c 1196      		adiw r26,1
  88               		0:
  89 001e 0190      		ld r0,Z+
  90 0020 0D92      		st X+,r0
  91 0022 8A95      		dec r24
  92 0024 01F4      		brne 0b
  93               	.L5:
  32:main.c        **** 
  33:main.c        **** 	while (true) {
  34:main.c        **** 		sdWrite(&SD1, msg, sizeof(msg));
  94               		.loc 1 34 0 discriminator 1
  95 0026 20E0      		ldi r18,0
  96 0028 30E0      		ldi r19,0
  97 002a 40E1      		ldi r20,lo8(16)
  98 002c 50E0      		ldi r21,0
  99 002e BE01      		movw r22,r28
 100 0030 6F5F      		subi r22,-1
 101 0032 7F4F      		sbci r23,-1
 102 0034 80E0      		ldi r24,lo8(SD1+20)
 103 0036 90E0      		ldi r25,hi8(SD1+20)
 104 0038 0E94 0000 		call oqWriteTimeout
 105               	.LVL5:
  35:main.c        **** 		chThdSleepMilliseconds(500);
 106               		.loc 1 35 0 discriminator 1
 107 003c 84E8      		ldi r24,lo8(-124)
 108 003e 9EE1      		ldi r25,lo8(30)
 109 0040 0E94 0000 		call chThdSleep
 110               	.LVL6:
 111 0044 00C0      		rjmp .L5
 112               		.cfi_endproc
 113               	.LFE147:
 115               		.section	.text.Thread_Pwm,"ax",@progbits
 116               	.global	Thread_Pwm
 118               	Thread_Pwm:
 119               	.LFB148:
  36:main.c        **** 	}
  37:main.c        **** }
  38:main.c        **** 
  39:main.c        **** /*
  40:main.c        ****  * Thread 3.
  41:main.c        ****  */
  42:main.c        **** THD_WORKING_AREA(wa_Pwm, 128);
  43:main.c        **** THD_FUNCTION(Thread_Pwm, arg) {
 120               		.loc 1 43 0
 121               		.cfi_startproc
 122               	/* prologue: function */
 123               	/* frame size = 0 */
 124               	/* stack size = 0 */
 125               	.L__stack_usage = 0
 126               	.LVL7:
 127               	.L8:
 128               	.LBB2:
  44:main.c        **** 
  45:main.c        **** 	(void)arg;
  46:main.c        **** 
  47:main.c        **** 	while (true) {
  48:main.c        **** 		for (uint16_t i = 1000; i < 10000; i += 1000) {
 129               		.loc 1 48 0
 130 0000 C8EE      		ldi r28,lo8(-24)
 131 0002 D3E0      		ldi r29,lo8(3)
 132               	.LVL8:
 133               	.L7:
  49:main.c        **** 			pwmEnableChannel(&PWMD2, 0, PWM_PERCENTAGE_TO_WIDTH(&PWMD2, i));
 134               		.loc 1 49 0 discriminator 3
 135 0004 8091 0000 		lds r24,PWMD2+3
 136 0008 9091 0000 		lds r25,PWMD2+3+1
 137 000c C89F      		mul r28,r24
 138 000e 9001      		movw r18,r0
 139 0010 C99F      		mul r28,r25
 140 0012 300D      		add r19,r0
 141 0014 D89F      		mul r29,r24
 142 0016 300D      		add r19,r0
 143 0018 1124      		clr r1
 144 001a 3295      		swap r19
 145 001c 2295      		swap r18
 146 001e 2F70      		andi r18,0x0f
 147 0020 2327      		eor r18,r19
 148 0022 3F70      		andi r19,0x0f
 149 0024 2327      		eor r18,r19
 150 0026 A7E4      		ldi r26,lo8(71)
 151 0028 B3E0      		ldi r27,lo8(3)
 152 002a 0E94 0000 		call __umulhisi3
 153 002e AC01      		movw r20,r24
 154 0030 5695      		lsr r21
 155 0032 4795      		ror r20
 156 0034 5695      		lsr r21
 157 0036 4795      		ror r20
 158 0038 5695      		lsr r21
 159 003a 4795      		ror r20
 160 003c 60E0      		ldi r22,0
 161 003e 80E0      		ldi r24,lo8(PWMD2)
 162 0040 90E0      		ldi r25,hi8(PWMD2)
 163 0042 0E94 0000 		call pwmEnableChannel
 164               	.LVL9:
  50:main.c        **** 			chThdSleepMilliseconds(500);
 165               		.loc 1 50 0 discriminator 3
 166 0046 84E8      		ldi r24,lo8(-124)
 167 0048 9EE1      		ldi r25,lo8(30)
 168 004a 0E94 0000 		call chThdSleep
 169               	.LVL10:
  48:main.c        **** 			pwmEnableChannel(&PWMD2, 0, PWM_PERCENTAGE_TO_WIDTH(&PWMD2, i));
 170               		.loc 1 48 0 discriminator 3
 171 004e C851      		subi r28,24
 172 0050 DC4F      		sbci r29,-4
 173               	.LVL11:
 174 0052 C031      		cpi r28,16
 175 0054 87E2      		ldi r24,39
 176 0056 D807      		cpc r29,r24
 177 0058 01F4      		brne .L7
 178 005a 00C0      		rjmp .L8
 179               	.LBE2:
 180               		.cfi_endproc
 181               	.LFE148:
 183               		.section	.rodata
 184               	.LC0:
 185 0000 E8        		.byte	-24
 186 0001 03        		.byte	3
 187 0002 00        		.byte	0
 188 0003 00        		.byte	0
 189 0004 6400      		.word	100
 190 0006 0000      		.word	0
 191 0008 01        		.byte	1
 192 0009 0000      		.word	0
 193 000b 00        		.byte	0
 194 000c 0000      		.word	0
 195               		.section	.text.startup.main,"ax",@progbits
 196               	.global	main
 198               	main:
 199               	.LFB149:
  51:main.c        **** 		}
  52:main.c        **** 	}
  53:main.c        **** }
  54:main.c        **** 
  55:main.c        **** /*
  56:main.c        ****  * Threads static table, one entry per thread. The number of entries must
  57:main.c        ****  * match NIL_CFG_NUM_THREADS.
  58:main.c        ****  */
  59:main.c        **** THD_TABLE_BEGIN
  60:main.c        **** 	THD_TABLE_THREAD(2, "pwm", wa_Pwm, Thread_Pwm,  NULL)
  61:main.c        **** 	THD_TABLE_THREAD(1, "blink_leds", wa_Led, Thread_Led,  NULL)
  62:main.c        **** 	THD_TABLE_THREAD(0, "pwm_ser_comm", wa_SerComm, Thread_SerComm,  NULL)
  63:main.c        **** THD_TABLE_END
  64:main.c        **** 
  65:main.c        **** /*
  66:main.c        ****  * Application entry point.
  67:main.c        ****  */
  68:main.c        **** int main(void) {
 200               		.loc 1 68 0
 201               		.cfi_startproc
 202 0000 CF93      		push r28
 203               	.LCFI4:
 204               		.cfi_def_cfa_offset 3
 205               		.cfi_offset 28, -2
 206 0002 DF93      		push r29
 207               	.LCFI5:
 208               		.cfi_def_cfa_offset 4
 209               		.cfi_offset 29, -3
 210 0004 CDB7      		in r28,__SP_L__
 211 0006 DEB7      		in r29,__SP_H__
 212               	.LCFI6:
 213               		.cfi_def_cfa_register 28
 214 0008 6197      		sbiw r28,17
 215               	.LCFI7:
 216               		.cfi_def_cfa_offset 21
 217 000a 0FB6      		in __tmp_reg__,__SREG__
 218 000c F894      		cli
 219 000e DEBF      		out __SP_H__,r29
 220 0010 0FBE      		out __SREG__,__tmp_reg__
 221 0012 CDBF      		out __SP_L__,r28
 222               	/* prologue: function */
 223               	/* frame size = 17 */
 224               	/* stack size = 19 */
 225               	.L__stack_usage = 19
  69:main.c        **** 	halInit();
 226               		.loc 1 69 0
 227 0014 0E94 0000 		call halInit
 228               	.LVL12:
  70:main.c        **** 	chSysInit();
 229               		.loc 1 70 0
 230 0018 0E94 0000 		call chSysInit
 231               	.LVL13:
  71:main.c        **** 
  72:main.c        **** 	palSetPadMode(IOPORT4, LED_YLW, PAL_MODE_OUTPUT_PUSHPULL);
 232               		.loc 1 72 0
 233 001c 46E0      		ldi r20,lo8(6)
 234 001e 64E0      		ldi r22,lo8(4)
 235 0020 89E2      		ldi r24,lo8(41)
 236 0022 90E0      		ldi r25,0
 237 0024 0E94 0000 		call _pal_lld_setgroupmode
 238               	.LVL14:
  73:main.c        **** 	palSetPadMode(IOPORT4, LED_GRN, PAL_MODE_OUTPUT_PUSHPULL);
 239               		.loc 1 73 0
 240 0028 46E0      		ldi r20,lo8(6)
 241 002a 68E0      		ldi r22,lo8(8)
 242 002c 89E2      		ldi r24,lo8(41)
 243 002e 90E0      		ldi r25,0
 244 0030 0E94 0000 		call _pal_lld_setgroupmode
 245               	.LVL15:
  74:main.c        **** 	palSetPadMode(IOPORT2, LED_PWM, PAL_MODE_OUTPUT_PUSHPULL);
 246               		.loc 1 74 0
 247 0034 46E0      		ldi r20,lo8(6)
 248 0036 68E0      		ldi r22,lo8(8)
 249 0038 83E2      		ldi r24,lo8(35)
 250 003a 90E0      		ldi r25,0
 251 003c 0E94 0000 		call _pal_lld_setgroupmode
 252               	.LVL16:
  75:main.c        **** 
  76:main.c        **** 	// Serial Config
  77:main.c        **** 	SerialConfig driver_serial = {
 253               		.loc 1 77 0
 254 0040 8FEC      		ldi r24,lo8(-49)
 255 0042 90E0      		ldi r25,0
 256 0044 988B      		std Y+16,r25
 257 0046 8F87      		std Y+15,r24
 258 0048 83E0      		ldi r24,lo8(3)
 259 004a 898B      		std Y+17,r24
  78:main.c        **** 		.sc_brr = UBRR2x(9600),
  79:main.c        **** 		.sc_bits_per_char = USART_CHAR_SIZE_8
  80:main.c        **** 	};
  81:main.c        **** 
  82:main.c        **** 	sdStart(&SD1, &driver_serial);
 260               		.loc 1 82 0
 261 004c BE01      		movw r22,r28
 262 004e 615F      		subi r22,-15
 263 0050 7F4F      		sbci r23,-1
 264 0052 80E0      		ldi r24,lo8(SD1)
 265 0054 90E0      		ldi r25,hi8(SD1)
 266 0056 0E94 0000 		call sdStart
 267               	.LVL17:
  83:main.c        **** 
  84:main.c        **** 	// PWM Config
  85:main.c        **** 	PWMConfig driver_pwm = {
 268               		.loc 1 85 0
 269 005a 8EE0      		ldi r24,lo8(14)
 270 005c E0E0      		ldi r30,lo8(.LC0)
 271 005e F0E0      		ldi r31,hi8(.LC0)
 272 0060 DE01      		movw r26,r28
 273 0062 1196      		adiw r26,1
 274               		0:
 275 0064 0190      		ld r0,Z+
 276 0066 0D92      		st X+,r0
 277 0068 8A95      		dec r24
 278 006a 01F4      		brne 0b
  86:main.c        **** 		.frequency = 1000,
  87:main.c        **** 		.period = 100,
  88:main.c        **** 		.callback = NULL,
  89:main.c        **** 		.channels = {
  90:main.c        **** 			{PWM_OUTPUT_ACTIVE_HIGH, NULL},
  91:main.c        **** 			{PWM_OUTPUT_DISABLED, NULL}
  92:main.c        **** 		}
  93:main.c        **** 	};
  94:main.c        **** 
  95:main.c        **** 	pwmStart(&PWMD2, &driver_pwm);
 279               		.loc 1 95 0
 280 006c BE01      		movw r22,r28
 281 006e 6F5F      		subi r22,-1
 282 0070 7F4F      		sbci r23,-1
 283 0072 80E0      		ldi r24,lo8(PWMD2)
 284 0074 90E0      		ldi r25,hi8(PWMD2)
 285 0076 0E94 0000 		call pwmStart
 286               	.LVL18:
 287               	.L11:
 288 007a 00C0      		rjmp .L11
 289               		.cfi_endproc
 290               	.LFE149:
 292               	.global	nil_thd_configs
 293               		.section	.rodata.str1.1
 294               	.LC2:
 295 0010 7077 6D00 		.string	"pwm"
 296               	.LC3:
 297 0014 626C 696E 		.string	"blink_leds"
 297      6B5F 6C65 
 297      6473 00
 298               	.LC4:
 299 001f 7077 6D5F 		.string	"pwm_ser_comm"
 299      7365 725F 
 299      636F 6D6D 
 299      00
 300               	.LC5:
 301 002c 6964 6C65 		.string	"idle"
 301      00
 302               		.section	.rodata.nil_thd_configs,"a",@progbits
 305               	nil_thd_configs:
 306 0000 0000      		.word	.LC2
 307 0002 0000      		.word	wa_Pwm
 308 0004 0000      		.word	wa_Pwm+197
 309 0006 02        		.byte	2
 310 0007 0000      		.word	gs(Thread_Pwm)
 311 0009 0000      		.word	0
 312 000b 0000      		.word	.LC3
 313 000d 0000      		.word	wa_Led
 314 000f 0000      		.word	wa_Led+197
 315 0011 01        		.byte	1
 316 0012 0000      		.word	gs(Thread_Led)
 317 0014 0000      		.word	0
 318 0016 0000      		.word	.LC4
 319 0018 0000      		.word	wa_SerComm
 320 001a 0000      		.word	wa_SerComm+197
 321 001c 00        		.byte	0
 322 001d 0000      		.word	gs(Thread_SerComm)
 323 001f 0000      		.word	0
 324 0021 0000      		.word	.LC5
 325 0023 0000      		.word	0
 326 0025 0000      		.word	0
 327 0027 04        		.byte	4
 328 0028 0000      		.word	0
 329 002a 0000      		.word	0
 330               		.comm	wa_Pwm,197,1
 331               		.comm	wa_SerComm,197,1
 332               		.comm	wa_Led,197,1
 333               		.text
 334               	.Letext0:
 335               		.file 2 "/usr/lib/gcc/avr/5.4.0/include/stddef.h"
 336               		.file 3 "/usr/lib/avr/include/stdint.h"
 337               		.file 4 "../../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 338               		.file 5 "../../../os/nil/include/ch.h"
 339               		.file 6 "../../../os/common/ports/AVR/chcore.h"
 340               		.file 7 "../../../os/nil/include/chevt.h"
 341               		.file 8 "../../../os/hal/include/hal_queues.h"
 342               		.file 9 "../../../os/hal/ports/AVR/MEGA/LLD/GPIOv1/hal_pal_lld.h"
 343               		.file 10 "../../../os/hal/include/hal_pwm.h"
 344               		.file 11 "../../../os/hal/ports/AVR/MEGA/LLD/TIMv1/hal_pwm_lld.h"
 345               		.file 12 "../../../os/hal/include/hal_serial.h"
 346               		.file 13 "../../../os/hal/ports/AVR/MEGA/LLD/USARTv1/hal_serial_lld.h"
 347               		.file 14 "../../../os/hal/include/hal.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccFvTmQD.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccFvTmQD.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccFvTmQD.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccFvTmQD.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccFvTmQD.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccFvTmQD.s:13     .text.Thread_Led:0000000000000000 Thread_Led
     /tmp/ccFvTmQD.s:52     .text.Thread_SerComm:0000000000000000 Thread_SerComm
     /tmp/ccFvTmQD.s:118    .text.Thread_Pwm:0000000000000000 Thread_Pwm
     /tmp/ccFvTmQD.s:198    .text.startup.main:0000000000000000 main
     /tmp/ccFvTmQD.s:305    .rodata.nil_thd_configs:0000000000000000 nil_thd_configs
                            *COM*:00000000000000c5 wa_Pwm
                            *COM*:00000000000000c5 wa_Led
                            *COM*:00000000000000c5 wa_SerComm

UNDEFINED SYMBOLS
chThdSleep
SD1
oqWriteTimeout
PWMD2
__umulhisi3
pwmEnableChannel
halInit
chSysInit
_pal_lld_setgroupmode
sdStart
pwmStart
__do_copy_data
__do_clear_bss
